
StreetStationSystem.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00006030  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000038  00800060  00006030  000060a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00003930  00000000  00000000  000060dc  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      000008e6  00000000  00000000  00009a0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  0000a2f2  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  0000a432  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  0000a5a2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  0000c1eb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  0000d0d6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  0000de84  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  0000dfe4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  0000e271  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000ea3f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e0 e3       	ldi	r30, 0x30	; 48
      68:	f0 e6       	ldi	r31, 0x60	; 96
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 39       	cpi	r26, 0x98	; 152
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 9b 05 	call	0xb36	; 0xb36 <main>
      7a:	0c 94 16 30 	jmp	0x602c	; 0x602c <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 df 2f 	jmp	0x5fbe	; 0x5fbe <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 fb 2f 	jmp	0x5ff6	; 0x5ff6 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 eb 2f 	jmp	0x5fd6	; 0x5fd6 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 07 30 	jmp	0x600e	; 0x600e <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 eb 2f 	jmp	0x5fd6	; 0x5fd6 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 07 30 	jmp	0x600e	; 0x600e <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 df 2f 	jmp	0x5fbe	; 0x5fbe <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 fb 2f 	jmp	0x5ff6	; 0x5ff6 <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 eb 2f 	jmp	0x5fd6	; 0x5fd6 <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 07 30 	jmp	0x600e	; 0x600e <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 eb 2f 	jmp	0x5fd6	; 0x5fd6 <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 07 30 	jmp	0x600e	; 0x600e <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 eb 2f 	jmp	0x5fd6	; 0x5fd6 <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 07 30 	jmp	0x600e	; 0x600e <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 ef 2f 	jmp	0x5fde	; 0x5fde <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 0b 30 	jmp	0x6016	; 0x6016 <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <main>:
void LCD_secondadd(void);
void LeftMotor(void);
void RightMotor(void);
void sevenseg(void);
int main()
{
     b36:	0f 93       	push	r16
     b38:	1f 93       	push	r17
     b3a:	df 93       	push	r29
     b3c:	cf 93       	push	r28
     b3e:	cd b7       	in	r28, 0x3d	; 61
     b40:	de b7       	in	r29, 0x3e	; 62
     b42:	c2 5a       	subi	r28, 0xA2	; 162
     b44:	d0 40       	sbci	r29, 0x00	; 0
     b46:	0f b6       	in	r0, 0x3f	; 63
     b48:	f8 94       	cli
     b4a:	de bf       	out	0x3e, r29	; 62
     b4c:	0f be       	out	0x3f, r0	; 63
     b4e:	cd bf       	out	0x3d, r28	; 61

	DDRB=0b11111111;
     b50:	e7 e3       	ldi	r30, 0x37	; 55
     b52:	f0 e0       	ldi	r31, 0x00	; 0
     b54:	8f ef       	ldi	r24, 0xFF	; 255
     b56:	80 83       	st	Z, r24
	DDRA=0b11111111;
     b58:	ea e3       	ldi	r30, 0x3A	; 58
     b5a:	f0 e0       	ldi	r31, 0x00	; 0
     b5c:	8f ef       	ldi	r24, 0xFF	; 255
     b5e:	80 83       	st	Z, r24
	DDRC=0b11111111;
     b60:	e4 e3       	ldi	r30, 0x34	; 52
     b62:	f0 e0       	ldi	r31, 0x00	; 0
     b64:	8f ef       	ldi	r24, 0xFF	; 255
     b66:	80 83       	st	Z, r24
	DDRD=0b11111111;
     b68:	e1 e3       	ldi	r30, 0x31	; 49
     b6a:	f0 e0       	ldi	r31, 0x00	; 0
     b6c:	8f ef       	ldi	r24, 0xFF	; 255
     b6e:	80 83       	st	Z, r24
	init_LCD();
     b70:	0e 94 0d 2c 	call	0x581a	; 0x581a <init_LCD>
     b74:	fe 01       	movw	r30, r28
     b76:	ef 5a       	subi	r30, 0xAF	; 175
     b78:	ff 4f       	sbci	r31, 0xFF	; 255
     b7a:	80 e0       	ldi	r24, 0x00	; 0
     b7c:	90 e0       	ldi	r25, 0x00	; 0
     b7e:	a0 e8       	ldi	r26, 0x80	; 128
     b80:	bf e3       	ldi	r27, 0x3F	; 63
     b82:	80 83       	st	Z, r24
     b84:	91 83       	std	Z+1, r25	; 0x01
     b86:	a2 83       	std	Z+2, r26	; 0x02
     b88:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     b8a:	8e 01       	movw	r16, r28
     b8c:	03 5b       	subi	r16, 0xB3	; 179
     b8e:	1f 4f       	sbci	r17, 0xFF	; 255
     b90:	fe 01       	movw	r30, r28
     b92:	ef 5a       	subi	r30, 0xAF	; 175
     b94:	ff 4f       	sbci	r31, 0xFF	; 255
     b96:	60 81       	ld	r22, Z
     b98:	71 81       	ldd	r23, Z+1	; 0x01
     b9a:	82 81       	ldd	r24, Z+2	; 0x02
     b9c:	93 81       	ldd	r25, Z+3	; 0x03
     b9e:	20 e0       	ldi	r18, 0x00	; 0
     ba0:	30 e0       	ldi	r19, 0x00	; 0
     ba2:	4a ef       	ldi	r20, 0xFA	; 250
     ba4:	54 e4       	ldi	r21, 0x44	; 68
     ba6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     baa:	dc 01       	movw	r26, r24
     bac:	cb 01       	movw	r24, r22
     bae:	f8 01       	movw	r30, r16
     bb0:	80 83       	st	Z, r24
     bb2:	91 83       	std	Z+1, r25	; 0x01
     bb4:	a2 83       	std	Z+2, r26	; 0x02
     bb6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     bb8:	fe 01       	movw	r30, r28
     bba:	e3 5b       	subi	r30, 0xB3	; 179
     bbc:	ff 4f       	sbci	r31, 0xFF	; 255
     bbe:	60 81       	ld	r22, Z
     bc0:	71 81       	ldd	r23, Z+1	; 0x01
     bc2:	82 81       	ldd	r24, Z+2	; 0x02
     bc4:	93 81       	ldd	r25, Z+3	; 0x03
     bc6:	20 e0       	ldi	r18, 0x00	; 0
     bc8:	30 e0       	ldi	r19, 0x00	; 0
     bca:	40 e8       	ldi	r20, 0x80	; 128
     bcc:	5f e3       	ldi	r21, 0x3F	; 63
     bce:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     bd2:	88 23       	and	r24, r24
     bd4:	44 f4       	brge	.+16     	; 0xbe6 <main+0xb0>
		__ticks = 1;
     bd6:	fe 01       	movw	r30, r28
     bd8:	e5 5b       	subi	r30, 0xB5	; 181
     bda:	ff 4f       	sbci	r31, 0xFF	; 255
     bdc:	81 e0       	ldi	r24, 0x01	; 1
     bde:	90 e0       	ldi	r25, 0x00	; 0
     be0:	91 83       	std	Z+1, r25	; 0x01
     be2:	80 83       	st	Z, r24
     be4:	64 c0       	rjmp	.+200    	; 0xcae <main+0x178>
	else if (__tmp > 65535)
     be6:	fe 01       	movw	r30, r28
     be8:	e3 5b       	subi	r30, 0xB3	; 179
     bea:	ff 4f       	sbci	r31, 0xFF	; 255
     bec:	60 81       	ld	r22, Z
     bee:	71 81       	ldd	r23, Z+1	; 0x01
     bf0:	82 81       	ldd	r24, Z+2	; 0x02
     bf2:	93 81       	ldd	r25, Z+3	; 0x03
     bf4:	20 e0       	ldi	r18, 0x00	; 0
     bf6:	3f ef       	ldi	r19, 0xFF	; 255
     bf8:	4f e7       	ldi	r20, 0x7F	; 127
     bfa:	57 e4       	ldi	r21, 0x47	; 71
     bfc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     c00:	18 16       	cp	r1, r24
     c02:	0c f0       	brlt	.+2      	; 0xc06 <main+0xd0>
     c04:	43 c0       	rjmp	.+134    	; 0xc8c <main+0x156>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     c06:	fe 01       	movw	r30, r28
     c08:	ef 5a       	subi	r30, 0xAF	; 175
     c0a:	ff 4f       	sbci	r31, 0xFF	; 255
     c0c:	60 81       	ld	r22, Z
     c0e:	71 81       	ldd	r23, Z+1	; 0x01
     c10:	82 81       	ldd	r24, Z+2	; 0x02
     c12:	93 81       	ldd	r25, Z+3	; 0x03
     c14:	20 e0       	ldi	r18, 0x00	; 0
     c16:	30 e0       	ldi	r19, 0x00	; 0
     c18:	40 e2       	ldi	r20, 0x20	; 32
     c1a:	51 e4       	ldi	r21, 0x41	; 65
     c1c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     c20:	dc 01       	movw	r26, r24
     c22:	cb 01       	movw	r24, r22
     c24:	8e 01       	movw	r16, r28
     c26:	05 5b       	subi	r16, 0xB5	; 181
     c28:	1f 4f       	sbci	r17, 0xFF	; 255
     c2a:	bc 01       	movw	r22, r24
     c2c:	cd 01       	movw	r24, r26
     c2e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     c32:	dc 01       	movw	r26, r24
     c34:	cb 01       	movw	r24, r22
     c36:	f8 01       	movw	r30, r16
     c38:	91 83       	std	Z+1, r25	; 0x01
     c3a:	80 83       	st	Z, r24
     c3c:	1f c0       	rjmp	.+62     	; 0xc7c <main+0x146>
     c3e:	fe 01       	movw	r30, r28
     c40:	e7 5b       	subi	r30, 0xB7	; 183
     c42:	ff 4f       	sbci	r31, 0xFF	; 255
     c44:	88 ec       	ldi	r24, 0xC8	; 200
     c46:	90 e0       	ldi	r25, 0x00	; 0
     c48:	91 83       	std	Z+1, r25	; 0x01
     c4a:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     c4c:	fe 01       	movw	r30, r28
     c4e:	e7 5b       	subi	r30, 0xB7	; 183
     c50:	ff 4f       	sbci	r31, 0xFF	; 255
     c52:	80 81       	ld	r24, Z
     c54:	91 81       	ldd	r25, Z+1	; 0x01
     c56:	01 97       	sbiw	r24, 0x01	; 1
     c58:	f1 f7       	brne	.-4      	; 0xc56 <main+0x120>
     c5a:	fe 01       	movw	r30, r28
     c5c:	e7 5b       	subi	r30, 0xB7	; 183
     c5e:	ff 4f       	sbci	r31, 0xFF	; 255
     c60:	91 83       	std	Z+1, r25	; 0x01
     c62:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c64:	de 01       	movw	r26, r28
     c66:	a5 5b       	subi	r26, 0xB5	; 181
     c68:	bf 4f       	sbci	r27, 0xFF	; 255
     c6a:	fe 01       	movw	r30, r28
     c6c:	e5 5b       	subi	r30, 0xB5	; 181
     c6e:	ff 4f       	sbci	r31, 0xFF	; 255
     c70:	80 81       	ld	r24, Z
     c72:	91 81       	ldd	r25, Z+1	; 0x01
     c74:	01 97       	sbiw	r24, 0x01	; 1
     c76:	11 96       	adiw	r26, 0x01	; 1
     c78:	9c 93       	st	X, r25
     c7a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c7c:	fe 01       	movw	r30, r28
     c7e:	e5 5b       	subi	r30, 0xB5	; 181
     c80:	ff 4f       	sbci	r31, 0xFF	; 255
     c82:	80 81       	ld	r24, Z
     c84:	91 81       	ldd	r25, Z+1	; 0x01
     c86:	00 97       	sbiw	r24, 0x00	; 0
     c88:	d1 f6       	brne	.-76     	; 0xc3e <main+0x108>
     c8a:	28 c0       	rjmp	.+80     	; 0xcdc <main+0x1a6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     c8c:	8e 01       	movw	r16, r28
     c8e:	05 5b       	subi	r16, 0xB5	; 181
     c90:	1f 4f       	sbci	r17, 0xFF	; 255
     c92:	fe 01       	movw	r30, r28
     c94:	e3 5b       	subi	r30, 0xB3	; 179
     c96:	ff 4f       	sbci	r31, 0xFF	; 255
     c98:	60 81       	ld	r22, Z
     c9a:	71 81       	ldd	r23, Z+1	; 0x01
     c9c:	82 81       	ldd	r24, Z+2	; 0x02
     c9e:	93 81       	ldd	r25, Z+3	; 0x03
     ca0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     ca4:	dc 01       	movw	r26, r24
     ca6:	cb 01       	movw	r24, r22
     ca8:	f8 01       	movw	r30, r16
     caa:	91 83       	std	Z+1, r25	; 0x01
     cac:	80 83       	st	Z, r24
     cae:	de 01       	movw	r26, r28
     cb0:	a9 5b       	subi	r26, 0xB9	; 185
     cb2:	bf 4f       	sbci	r27, 0xFF	; 255
     cb4:	fe 01       	movw	r30, r28
     cb6:	e5 5b       	subi	r30, 0xB5	; 181
     cb8:	ff 4f       	sbci	r31, 0xFF	; 255
     cba:	80 81       	ld	r24, Z
     cbc:	91 81       	ldd	r25, Z+1	; 0x01
     cbe:	11 96       	adiw	r26, 0x01	; 1
     cc0:	9c 93       	st	X, r25
     cc2:	8e 93       	st	-X, r24
     cc4:	fe 01       	movw	r30, r28
     cc6:	e9 5b       	subi	r30, 0xB9	; 185
     cc8:	ff 4f       	sbci	r31, 0xFF	; 255
     cca:	80 81       	ld	r24, Z
     ccc:	91 81       	ldd	r25, Z+1	; 0x01
     cce:	01 97       	sbiw	r24, 0x01	; 1
     cd0:	f1 f7       	brne	.-4      	; 0xcce <main+0x198>
     cd2:	fe 01       	movw	r30, r28
     cd4:	e9 5b       	subi	r30, 0xB9	; 185
     cd6:	ff 4f       	sbci	r31, 0xFF	; 255
     cd8:	91 83       	std	Z+1, r25	; 0x01
     cda:	80 83       	st	Z, r24
	_delay_ms(1);
// Modern Academy
	unsigned char Pattern1 [ ] = {0x9, 0x9, 0x9, 0x9, 0x1f, 0x0, 0x0, 0x0} ;
     cdc:	ce 01       	movw	r24, r28
     cde:	8b 5a       	subi	r24, 0xAB	; 171
     ce0:	9f 4f       	sbci	r25, 0xFF	; 255
     ce2:	cb 57       	subi	r28, 0x7B	; 123
     ce4:	df 4f       	sbci	r29, 0xFF	; 255
     ce6:	99 83       	std	Y+1, r25	; 0x01
     ce8:	88 83       	st	Y, r24
     cea:	c5 58       	subi	r28, 0x85	; 133
     cec:	d0 40       	sbci	r29, 0x00	; 0
     cee:	80 e9       	ldi	r24, 0x90	; 144
     cf0:	90 e0       	ldi	r25, 0x00	; 0
     cf2:	c9 57       	subi	r28, 0x79	; 121
     cf4:	df 4f       	sbci	r29, 0xFF	; 255
     cf6:	99 83       	std	Y+1, r25	; 0x01
     cf8:	88 83       	st	Y, r24
     cfa:	c7 58       	subi	r28, 0x87	; 135
     cfc:	d0 40       	sbci	r29, 0x00	; 0
     cfe:	98 e0       	ldi	r25, 0x08	; 8
     d00:	c7 57       	subi	r28, 0x77	; 119
     d02:	df 4f       	sbci	r29, 0xFF	; 255
     d04:	98 83       	st	Y, r25
     d06:	c9 58       	subi	r28, 0x89	; 137
     d08:	d0 40       	sbci	r29, 0x00	; 0
     d0a:	c9 57       	subi	r28, 0x79	; 121
     d0c:	df 4f       	sbci	r29, 0xFF	; 255
     d0e:	e8 81       	ld	r30, Y
     d10:	f9 81       	ldd	r31, Y+1	; 0x01
     d12:	c7 58       	subi	r28, 0x87	; 135
     d14:	d0 40       	sbci	r29, 0x00	; 0
     d16:	00 80       	ld	r0, Z
     d18:	c9 57       	subi	r28, 0x79	; 121
     d1a:	df 4f       	sbci	r29, 0xFF	; 255
     d1c:	88 81       	ld	r24, Y
     d1e:	99 81       	ldd	r25, Y+1	; 0x01
     d20:	c7 58       	subi	r28, 0x87	; 135
     d22:	d0 40       	sbci	r29, 0x00	; 0
     d24:	01 96       	adiw	r24, 0x01	; 1
     d26:	c9 57       	subi	r28, 0x79	; 121
     d28:	df 4f       	sbci	r29, 0xFF	; 255
     d2a:	99 83       	std	Y+1, r25	; 0x01
     d2c:	88 83       	st	Y, r24
     d2e:	c7 58       	subi	r28, 0x87	; 135
     d30:	d0 40       	sbci	r29, 0x00	; 0
     d32:	cb 57       	subi	r28, 0x7B	; 123
     d34:	df 4f       	sbci	r29, 0xFF	; 255
     d36:	e8 81       	ld	r30, Y
     d38:	f9 81       	ldd	r31, Y+1	; 0x01
     d3a:	c5 58       	subi	r28, 0x85	; 133
     d3c:	d0 40       	sbci	r29, 0x00	; 0
     d3e:	00 82       	st	Z, r0
     d40:	cb 57       	subi	r28, 0x7B	; 123
     d42:	df 4f       	sbci	r29, 0xFF	; 255
     d44:	88 81       	ld	r24, Y
     d46:	99 81       	ldd	r25, Y+1	; 0x01
     d48:	c5 58       	subi	r28, 0x85	; 133
     d4a:	d0 40       	sbci	r29, 0x00	; 0
     d4c:	01 96       	adiw	r24, 0x01	; 1
     d4e:	cb 57       	subi	r28, 0x7B	; 123
     d50:	df 4f       	sbci	r29, 0xFF	; 255
     d52:	99 83       	std	Y+1, r25	; 0x01
     d54:	88 83       	st	Y, r24
     d56:	c5 58       	subi	r28, 0x85	; 133
     d58:	d0 40       	sbci	r29, 0x00	; 0
     d5a:	c7 57       	subi	r28, 0x77	; 119
     d5c:	df 4f       	sbci	r29, 0xFF	; 255
     d5e:	98 81       	ld	r25, Y
     d60:	c9 58       	subi	r28, 0x89	; 137
     d62:	d0 40       	sbci	r29, 0x00	; 0
     d64:	91 50       	subi	r25, 0x01	; 1
     d66:	c7 57       	subi	r28, 0x77	; 119
     d68:	df 4f       	sbci	r29, 0xFF	; 255
     d6a:	98 83       	st	Y, r25
     d6c:	c9 58       	subi	r28, 0x89	; 137
     d6e:	d0 40       	sbci	r29, 0x00	; 0
     d70:	c7 57       	subi	r28, 0x77	; 119
     d72:	df 4f       	sbci	r29, 0xFF	; 255
     d74:	e8 81       	ld	r30, Y
     d76:	c9 58       	subi	r28, 0x89	; 137
     d78:	d0 40       	sbci	r29, 0x00	; 0
     d7a:	ee 23       	and	r30, r30
     d7c:	31 f6       	brne	.-116    	; 0xd0a <main+0x1d4>
	unsigned char Pattern2 [ ] = { 0x0, 0x14, 0x1, 0x1, 0x1f, 0x0, 0x0, 0x0} ;
     d7e:	ce 01       	movw	r24, r28
     d80:	83 5a       	subi	r24, 0xA3	; 163
     d82:	9f 4f       	sbci	r25, 0xFF	; 255
     d84:	c6 57       	subi	r28, 0x76	; 118
     d86:	df 4f       	sbci	r29, 0xFF	; 255
     d88:	99 83       	std	Y+1, r25	; 0x01
     d8a:	88 83       	st	Y, r24
     d8c:	ca 58       	subi	r28, 0x8A	; 138
     d8e:	d0 40       	sbci	r29, 0x00	; 0
     d90:	88 e8       	ldi	r24, 0x88	; 136
     d92:	90 e0       	ldi	r25, 0x00	; 0
     d94:	c4 57       	subi	r28, 0x74	; 116
     d96:	df 4f       	sbci	r29, 0xFF	; 255
     d98:	99 83       	std	Y+1, r25	; 0x01
     d9a:	88 83       	st	Y, r24
     d9c:	cc 58       	subi	r28, 0x8C	; 140
     d9e:	d0 40       	sbci	r29, 0x00	; 0
     da0:	98 e0       	ldi	r25, 0x08	; 8
     da2:	c2 57       	subi	r28, 0x72	; 114
     da4:	df 4f       	sbci	r29, 0xFF	; 255
     da6:	98 83       	st	Y, r25
     da8:	ce 58       	subi	r28, 0x8E	; 142
     daa:	d0 40       	sbci	r29, 0x00	; 0
     dac:	c4 57       	subi	r28, 0x74	; 116
     dae:	df 4f       	sbci	r29, 0xFF	; 255
     db0:	e8 81       	ld	r30, Y
     db2:	f9 81       	ldd	r31, Y+1	; 0x01
     db4:	cc 58       	subi	r28, 0x8C	; 140
     db6:	d0 40       	sbci	r29, 0x00	; 0
     db8:	00 80       	ld	r0, Z
     dba:	c4 57       	subi	r28, 0x74	; 116
     dbc:	df 4f       	sbci	r29, 0xFF	; 255
     dbe:	88 81       	ld	r24, Y
     dc0:	99 81       	ldd	r25, Y+1	; 0x01
     dc2:	cc 58       	subi	r28, 0x8C	; 140
     dc4:	d0 40       	sbci	r29, 0x00	; 0
     dc6:	01 96       	adiw	r24, 0x01	; 1
     dc8:	c4 57       	subi	r28, 0x74	; 116
     dca:	df 4f       	sbci	r29, 0xFF	; 255
     dcc:	99 83       	std	Y+1, r25	; 0x01
     dce:	88 83       	st	Y, r24
     dd0:	cc 58       	subi	r28, 0x8C	; 140
     dd2:	d0 40       	sbci	r29, 0x00	; 0
     dd4:	c6 57       	subi	r28, 0x76	; 118
     dd6:	df 4f       	sbci	r29, 0xFF	; 255
     dd8:	e8 81       	ld	r30, Y
     dda:	f9 81       	ldd	r31, Y+1	; 0x01
     ddc:	ca 58       	subi	r28, 0x8A	; 138
     dde:	d0 40       	sbci	r29, 0x00	; 0
     de0:	00 82       	st	Z, r0
     de2:	c6 57       	subi	r28, 0x76	; 118
     de4:	df 4f       	sbci	r29, 0xFF	; 255
     de6:	88 81       	ld	r24, Y
     de8:	99 81       	ldd	r25, Y+1	; 0x01
     dea:	ca 58       	subi	r28, 0x8A	; 138
     dec:	d0 40       	sbci	r29, 0x00	; 0
     dee:	01 96       	adiw	r24, 0x01	; 1
     df0:	c6 57       	subi	r28, 0x76	; 118
     df2:	df 4f       	sbci	r29, 0xFF	; 255
     df4:	99 83       	std	Y+1, r25	; 0x01
     df6:	88 83       	st	Y, r24
     df8:	ca 58       	subi	r28, 0x8A	; 138
     dfa:	d0 40       	sbci	r29, 0x00	; 0
     dfc:	c2 57       	subi	r28, 0x72	; 114
     dfe:	df 4f       	sbci	r29, 0xFF	; 255
     e00:	98 81       	ld	r25, Y
     e02:	ce 58       	subi	r28, 0x8E	; 142
     e04:	d0 40       	sbci	r29, 0x00	; 0
     e06:	91 50       	subi	r25, 0x01	; 1
     e08:	c2 57       	subi	r28, 0x72	; 114
     e0a:	df 4f       	sbci	r29, 0xFF	; 255
     e0c:	98 83       	st	Y, r25
     e0e:	ce 58       	subi	r28, 0x8E	; 142
     e10:	d0 40       	sbci	r29, 0x00	; 0
     e12:	c2 57       	subi	r28, 0x72	; 114
     e14:	df 4f       	sbci	r29, 0xFF	; 255
     e16:	e8 81       	ld	r30, Y
     e18:	ce 58       	subi	r28, 0x8E	; 142
     e1a:	d0 40       	sbci	r29, 0x00	; 0
     e1c:	ee 23       	and	r30, r30
     e1e:	31 f6       	brne	.-116    	; 0xdac <main+0x276>
	unsigned char Pattern3 [ ] = { 0x0, 0xe, 0x8, 0x8, 0x1f, 0x0, 0x0, 0x0} ;
     e20:	ce 01       	movw	r24, r28
     e22:	8b 59       	subi	r24, 0x9B	; 155
     e24:	9f 4f       	sbci	r25, 0xFF	; 255
     e26:	c1 57       	subi	r28, 0x71	; 113
     e28:	df 4f       	sbci	r29, 0xFF	; 255
     e2a:	99 83       	std	Y+1, r25	; 0x01
     e2c:	88 83       	st	Y, r24
     e2e:	cf 58       	subi	r28, 0x8F	; 143
     e30:	d0 40       	sbci	r29, 0x00	; 0
     e32:	80 e8       	ldi	r24, 0x80	; 128
     e34:	90 e0       	ldi	r25, 0x00	; 0
     e36:	cf 56       	subi	r28, 0x6F	; 111
     e38:	df 4f       	sbci	r29, 0xFF	; 255
     e3a:	99 83       	std	Y+1, r25	; 0x01
     e3c:	88 83       	st	Y, r24
     e3e:	c1 59       	subi	r28, 0x91	; 145
     e40:	d0 40       	sbci	r29, 0x00	; 0
     e42:	98 e0       	ldi	r25, 0x08	; 8
     e44:	cd 56       	subi	r28, 0x6D	; 109
     e46:	df 4f       	sbci	r29, 0xFF	; 255
     e48:	98 83       	st	Y, r25
     e4a:	c3 59       	subi	r28, 0x93	; 147
     e4c:	d0 40       	sbci	r29, 0x00	; 0
     e4e:	cf 56       	subi	r28, 0x6F	; 111
     e50:	df 4f       	sbci	r29, 0xFF	; 255
     e52:	e8 81       	ld	r30, Y
     e54:	f9 81       	ldd	r31, Y+1	; 0x01
     e56:	c1 59       	subi	r28, 0x91	; 145
     e58:	d0 40       	sbci	r29, 0x00	; 0
     e5a:	00 80       	ld	r0, Z
     e5c:	cf 56       	subi	r28, 0x6F	; 111
     e5e:	df 4f       	sbci	r29, 0xFF	; 255
     e60:	88 81       	ld	r24, Y
     e62:	99 81       	ldd	r25, Y+1	; 0x01
     e64:	c1 59       	subi	r28, 0x91	; 145
     e66:	d0 40       	sbci	r29, 0x00	; 0
     e68:	01 96       	adiw	r24, 0x01	; 1
     e6a:	cf 56       	subi	r28, 0x6F	; 111
     e6c:	df 4f       	sbci	r29, 0xFF	; 255
     e6e:	99 83       	std	Y+1, r25	; 0x01
     e70:	88 83       	st	Y, r24
     e72:	c1 59       	subi	r28, 0x91	; 145
     e74:	d0 40       	sbci	r29, 0x00	; 0
     e76:	c1 57       	subi	r28, 0x71	; 113
     e78:	df 4f       	sbci	r29, 0xFF	; 255
     e7a:	e8 81       	ld	r30, Y
     e7c:	f9 81       	ldd	r31, Y+1	; 0x01
     e7e:	cf 58       	subi	r28, 0x8F	; 143
     e80:	d0 40       	sbci	r29, 0x00	; 0
     e82:	00 82       	st	Z, r0
     e84:	c1 57       	subi	r28, 0x71	; 113
     e86:	df 4f       	sbci	r29, 0xFF	; 255
     e88:	88 81       	ld	r24, Y
     e8a:	99 81       	ldd	r25, Y+1	; 0x01
     e8c:	cf 58       	subi	r28, 0x8F	; 143
     e8e:	d0 40       	sbci	r29, 0x00	; 0
     e90:	01 96       	adiw	r24, 0x01	; 1
     e92:	c1 57       	subi	r28, 0x71	; 113
     e94:	df 4f       	sbci	r29, 0xFF	; 255
     e96:	99 83       	std	Y+1, r25	; 0x01
     e98:	88 83       	st	Y, r24
     e9a:	cf 58       	subi	r28, 0x8F	; 143
     e9c:	d0 40       	sbci	r29, 0x00	; 0
     e9e:	cd 56       	subi	r28, 0x6D	; 109
     ea0:	df 4f       	sbci	r29, 0xFF	; 255
     ea2:	98 81       	ld	r25, Y
     ea4:	c3 59       	subi	r28, 0x93	; 147
     ea6:	d0 40       	sbci	r29, 0x00	; 0
     ea8:	91 50       	subi	r25, 0x01	; 1
     eaa:	cd 56       	subi	r28, 0x6D	; 109
     eac:	df 4f       	sbci	r29, 0xFF	; 255
     eae:	98 83       	st	Y, r25
     eb0:	c3 59       	subi	r28, 0x93	; 147
     eb2:	d0 40       	sbci	r29, 0x00	; 0
     eb4:	cd 56       	subi	r28, 0x6D	; 109
     eb6:	df 4f       	sbci	r29, 0xFF	; 255
     eb8:	e8 81       	ld	r30, Y
     eba:	c3 59       	subi	r28, 0x93	; 147
     ebc:	d0 40       	sbci	r29, 0x00	; 0
     ebe:	ee 23       	and	r30, r30
     ec0:	31 f6       	brne	.-116    	; 0xe4e <main+0x318>
	unsigned char Pattern4 [ ] = { 0x4, 0x4, 0x4, 0x4, 0x1f, 0x0, 0x0, 0x0 } ;
     ec2:	ce 01       	movw	r24, r28
     ec4:	83 59       	subi	r24, 0x93	; 147
     ec6:	9f 4f       	sbci	r25, 0xFF	; 255
     ec8:	cc 56       	subi	r28, 0x6C	; 108
     eca:	df 4f       	sbci	r29, 0xFF	; 255
     ecc:	99 83       	std	Y+1, r25	; 0x01
     ece:	88 83       	st	Y, r24
     ed0:	c4 59       	subi	r28, 0x94	; 148
     ed2:	d0 40       	sbci	r29, 0x00	; 0
     ed4:	88 e7       	ldi	r24, 0x78	; 120
     ed6:	90 e0       	ldi	r25, 0x00	; 0
     ed8:	ca 56       	subi	r28, 0x6A	; 106
     eda:	df 4f       	sbci	r29, 0xFF	; 255
     edc:	99 83       	std	Y+1, r25	; 0x01
     ede:	88 83       	st	Y, r24
     ee0:	c6 59       	subi	r28, 0x96	; 150
     ee2:	d0 40       	sbci	r29, 0x00	; 0
     ee4:	98 e0       	ldi	r25, 0x08	; 8
     ee6:	c8 56       	subi	r28, 0x68	; 104
     ee8:	df 4f       	sbci	r29, 0xFF	; 255
     eea:	98 83       	st	Y, r25
     eec:	c8 59       	subi	r28, 0x98	; 152
     eee:	d0 40       	sbci	r29, 0x00	; 0
     ef0:	ca 56       	subi	r28, 0x6A	; 106
     ef2:	df 4f       	sbci	r29, 0xFF	; 255
     ef4:	e8 81       	ld	r30, Y
     ef6:	f9 81       	ldd	r31, Y+1	; 0x01
     ef8:	c6 59       	subi	r28, 0x96	; 150
     efa:	d0 40       	sbci	r29, 0x00	; 0
     efc:	00 80       	ld	r0, Z
     efe:	ca 56       	subi	r28, 0x6A	; 106
     f00:	df 4f       	sbci	r29, 0xFF	; 255
     f02:	88 81       	ld	r24, Y
     f04:	99 81       	ldd	r25, Y+1	; 0x01
     f06:	c6 59       	subi	r28, 0x96	; 150
     f08:	d0 40       	sbci	r29, 0x00	; 0
     f0a:	01 96       	adiw	r24, 0x01	; 1
     f0c:	ca 56       	subi	r28, 0x6A	; 106
     f0e:	df 4f       	sbci	r29, 0xFF	; 255
     f10:	99 83       	std	Y+1, r25	; 0x01
     f12:	88 83       	st	Y, r24
     f14:	c6 59       	subi	r28, 0x96	; 150
     f16:	d0 40       	sbci	r29, 0x00	; 0
     f18:	cc 56       	subi	r28, 0x6C	; 108
     f1a:	df 4f       	sbci	r29, 0xFF	; 255
     f1c:	e8 81       	ld	r30, Y
     f1e:	f9 81       	ldd	r31, Y+1	; 0x01
     f20:	c4 59       	subi	r28, 0x94	; 148
     f22:	d0 40       	sbci	r29, 0x00	; 0
     f24:	00 82       	st	Z, r0
     f26:	cc 56       	subi	r28, 0x6C	; 108
     f28:	df 4f       	sbci	r29, 0xFF	; 255
     f2a:	88 81       	ld	r24, Y
     f2c:	99 81       	ldd	r25, Y+1	; 0x01
     f2e:	c4 59       	subi	r28, 0x94	; 148
     f30:	d0 40       	sbci	r29, 0x00	; 0
     f32:	01 96       	adiw	r24, 0x01	; 1
     f34:	cc 56       	subi	r28, 0x6C	; 108
     f36:	df 4f       	sbci	r29, 0xFF	; 255
     f38:	99 83       	std	Y+1, r25	; 0x01
     f3a:	88 83       	st	Y, r24
     f3c:	c4 59       	subi	r28, 0x94	; 148
     f3e:	d0 40       	sbci	r29, 0x00	; 0
     f40:	c8 56       	subi	r28, 0x68	; 104
     f42:	df 4f       	sbci	r29, 0xFF	; 255
     f44:	98 81       	ld	r25, Y
     f46:	c8 59       	subi	r28, 0x98	; 152
     f48:	d0 40       	sbci	r29, 0x00	; 0
     f4a:	91 50       	subi	r25, 0x01	; 1
     f4c:	c8 56       	subi	r28, 0x68	; 104
     f4e:	df 4f       	sbci	r29, 0xFF	; 255
     f50:	98 83       	st	Y, r25
     f52:	c8 59       	subi	r28, 0x98	; 152
     f54:	d0 40       	sbci	r29, 0x00	; 0
     f56:	c8 56       	subi	r28, 0x68	; 104
     f58:	df 4f       	sbci	r29, 0xFF	; 255
     f5a:	e8 81       	ld	r30, Y
     f5c:	c8 59       	subi	r28, 0x98	; 152
     f5e:	d0 40       	sbci	r29, 0x00	; 0
     f60:	ee 23       	and	r30, r30
     f62:	31 f6       	brne	.-116    	; 0xef0 <main+0x3ba>
    unsigned char Pattern5 [ ]= {0x0, 0x0, 0x1, 0x1, 0x1f, 0x0, 0xa, 0x0};
     f64:	ce 01       	movw	r24, r28
     f66:	8b 58       	subi	r24, 0x8B	; 139
     f68:	9f 4f       	sbci	r25, 0xFF	; 255
     f6a:	c7 56       	subi	r28, 0x67	; 103
     f6c:	df 4f       	sbci	r29, 0xFF	; 255
     f6e:	99 83       	std	Y+1, r25	; 0x01
     f70:	88 83       	st	Y, r24
     f72:	c9 59       	subi	r28, 0x99	; 153
     f74:	d0 40       	sbci	r29, 0x00	; 0
     f76:	80 e7       	ldi	r24, 0x70	; 112
     f78:	90 e0       	ldi	r25, 0x00	; 0
     f7a:	c5 56       	subi	r28, 0x65	; 101
     f7c:	df 4f       	sbci	r29, 0xFF	; 255
     f7e:	99 83       	std	Y+1, r25	; 0x01
     f80:	88 83       	st	Y, r24
     f82:	cb 59       	subi	r28, 0x9B	; 155
     f84:	d0 40       	sbci	r29, 0x00	; 0
     f86:	98 e0       	ldi	r25, 0x08	; 8
     f88:	c3 56       	subi	r28, 0x63	; 99
     f8a:	df 4f       	sbci	r29, 0xFF	; 255
     f8c:	98 83       	st	Y, r25
     f8e:	cd 59       	subi	r28, 0x9D	; 157
     f90:	d0 40       	sbci	r29, 0x00	; 0
     f92:	c5 56       	subi	r28, 0x65	; 101
     f94:	df 4f       	sbci	r29, 0xFF	; 255
     f96:	e8 81       	ld	r30, Y
     f98:	f9 81       	ldd	r31, Y+1	; 0x01
     f9a:	cb 59       	subi	r28, 0x9B	; 155
     f9c:	d0 40       	sbci	r29, 0x00	; 0
     f9e:	00 80       	ld	r0, Z
     fa0:	c5 56       	subi	r28, 0x65	; 101
     fa2:	df 4f       	sbci	r29, 0xFF	; 255
     fa4:	88 81       	ld	r24, Y
     fa6:	99 81       	ldd	r25, Y+1	; 0x01
     fa8:	cb 59       	subi	r28, 0x9B	; 155
     faa:	d0 40       	sbci	r29, 0x00	; 0
     fac:	01 96       	adiw	r24, 0x01	; 1
     fae:	c5 56       	subi	r28, 0x65	; 101
     fb0:	df 4f       	sbci	r29, 0xFF	; 255
     fb2:	99 83       	std	Y+1, r25	; 0x01
     fb4:	88 83       	st	Y, r24
     fb6:	cb 59       	subi	r28, 0x9B	; 155
     fb8:	d0 40       	sbci	r29, 0x00	; 0
     fba:	c7 56       	subi	r28, 0x67	; 103
     fbc:	df 4f       	sbci	r29, 0xFF	; 255
     fbe:	e8 81       	ld	r30, Y
     fc0:	f9 81       	ldd	r31, Y+1	; 0x01
     fc2:	c9 59       	subi	r28, 0x99	; 153
     fc4:	d0 40       	sbci	r29, 0x00	; 0
     fc6:	00 82       	st	Z, r0
     fc8:	c7 56       	subi	r28, 0x67	; 103
     fca:	df 4f       	sbci	r29, 0xFF	; 255
     fcc:	88 81       	ld	r24, Y
     fce:	99 81       	ldd	r25, Y+1	; 0x01
     fd0:	c9 59       	subi	r28, 0x99	; 153
     fd2:	d0 40       	sbci	r29, 0x00	; 0
     fd4:	01 96       	adiw	r24, 0x01	; 1
     fd6:	c7 56       	subi	r28, 0x67	; 103
     fd8:	df 4f       	sbci	r29, 0xFF	; 255
     fda:	99 83       	std	Y+1, r25	; 0x01
     fdc:	88 83       	st	Y, r24
     fde:	c9 59       	subi	r28, 0x99	; 153
     fe0:	d0 40       	sbci	r29, 0x00	; 0
     fe2:	c3 56       	subi	r28, 0x63	; 99
     fe4:	df 4f       	sbci	r29, 0xFF	; 255
     fe6:	98 81       	ld	r25, Y
     fe8:	cd 59       	subi	r28, 0x9D	; 157
     fea:	d0 40       	sbci	r29, 0x00	; 0
     fec:	91 50       	subi	r25, 0x01	; 1
     fee:	c3 56       	subi	r28, 0x63	; 99
     ff0:	df 4f       	sbci	r29, 0xFF	; 255
     ff2:	98 83       	st	Y, r25
     ff4:	cd 59       	subi	r28, 0x9D	; 157
     ff6:	d0 40       	sbci	r29, 0x00	; 0
     ff8:	c3 56       	subi	r28, 0x63	; 99
     ffa:	df 4f       	sbci	r29, 0xFF	; 255
     ffc:	e8 81       	ld	r30, Y
     ffe:	cd 59       	subi	r28, 0x9D	; 157
    1000:	d0 40       	sbci	r29, 0x00	; 0
    1002:	ee 23       	and	r30, r30
    1004:	31 f6       	brne	.-116    	; 0xf92 <main+0x45c>
    unsigned char Pattern6 [ ]= {0x0, 0x0, 0x0, 0x0, 0xf, 0xa, 0x1e, 0x10};
    1006:	ce 01       	movw	r24, r28
    1008:	83 58       	subi	r24, 0x83	; 131
    100a:	9f 4f       	sbci	r25, 0xFF	; 255
    100c:	c2 56       	subi	r28, 0x62	; 98
    100e:	df 4f       	sbci	r29, 0xFF	; 255
    1010:	99 83       	std	Y+1, r25	; 0x01
    1012:	88 83       	st	Y, r24
    1014:	ce 59       	subi	r28, 0x9E	; 158
    1016:	d0 40       	sbci	r29, 0x00	; 0
    1018:	88 e6       	ldi	r24, 0x68	; 104
    101a:	90 e0       	ldi	r25, 0x00	; 0
    101c:	c0 56       	subi	r28, 0x60	; 96
    101e:	df 4f       	sbci	r29, 0xFF	; 255
    1020:	99 83       	std	Y+1, r25	; 0x01
    1022:	88 83       	st	Y, r24
    1024:	c0 5a       	subi	r28, 0xA0	; 160
    1026:	d0 40       	sbci	r29, 0x00	; 0
    1028:	98 e0       	ldi	r25, 0x08	; 8
    102a:	ce 55       	subi	r28, 0x5E	; 94
    102c:	df 4f       	sbci	r29, 0xFF	; 255
    102e:	98 83       	st	Y, r25
    1030:	c2 5a       	subi	r28, 0xA2	; 162
    1032:	d0 40       	sbci	r29, 0x00	; 0
    1034:	c0 56       	subi	r28, 0x60	; 96
    1036:	df 4f       	sbci	r29, 0xFF	; 255
    1038:	e8 81       	ld	r30, Y
    103a:	f9 81       	ldd	r31, Y+1	; 0x01
    103c:	c0 5a       	subi	r28, 0xA0	; 160
    103e:	d0 40       	sbci	r29, 0x00	; 0
    1040:	00 80       	ld	r0, Z
    1042:	c0 56       	subi	r28, 0x60	; 96
    1044:	df 4f       	sbci	r29, 0xFF	; 255
    1046:	88 81       	ld	r24, Y
    1048:	99 81       	ldd	r25, Y+1	; 0x01
    104a:	c0 5a       	subi	r28, 0xA0	; 160
    104c:	d0 40       	sbci	r29, 0x00	; 0
    104e:	01 96       	adiw	r24, 0x01	; 1
    1050:	c0 56       	subi	r28, 0x60	; 96
    1052:	df 4f       	sbci	r29, 0xFF	; 255
    1054:	99 83       	std	Y+1, r25	; 0x01
    1056:	88 83       	st	Y, r24
    1058:	c0 5a       	subi	r28, 0xA0	; 160
    105a:	d0 40       	sbci	r29, 0x00	; 0
    105c:	c2 56       	subi	r28, 0x62	; 98
    105e:	df 4f       	sbci	r29, 0xFF	; 255
    1060:	e8 81       	ld	r30, Y
    1062:	f9 81       	ldd	r31, Y+1	; 0x01
    1064:	ce 59       	subi	r28, 0x9E	; 158
    1066:	d0 40       	sbci	r29, 0x00	; 0
    1068:	00 82       	st	Z, r0
    106a:	c2 56       	subi	r28, 0x62	; 98
    106c:	df 4f       	sbci	r29, 0xFF	; 255
    106e:	88 81       	ld	r24, Y
    1070:	99 81       	ldd	r25, Y+1	; 0x01
    1072:	ce 59       	subi	r28, 0x9E	; 158
    1074:	d0 40       	sbci	r29, 0x00	; 0
    1076:	01 96       	adiw	r24, 0x01	; 1
    1078:	c2 56       	subi	r28, 0x62	; 98
    107a:	df 4f       	sbci	r29, 0xFF	; 255
    107c:	99 83       	std	Y+1, r25	; 0x01
    107e:	88 83       	st	Y, r24
    1080:	ce 59       	subi	r28, 0x9E	; 158
    1082:	d0 40       	sbci	r29, 0x00	; 0
    1084:	ce 55       	subi	r28, 0x5E	; 94
    1086:	df 4f       	sbci	r29, 0xFF	; 255
    1088:	98 81       	ld	r25, Y
    108a:	c2 5a       	subi	r28, 0xA2	; 162
    108c:	d0 40       	sbci	r29, 0x00	; 0
    108e:	91 50       	subi	r25, 0x01	; 1
    1090:	ce 55       	subi	r28, 0x5E	; 94
    1092:	df 4f       	sbci	r29, 0xFF	; 255
    1094:	98 83       	st	Y, r25
    1096:	c2 5a       	subi	r28, 0xA2	; 162
    1098:	d0 40       	sbci	r29, 0x00	; 0
    109a:	ce 55       	subi	r28, 0x5E	; 94
    109c:	df 4f       	sbci	r29, 0xFF	; 255
    109e:	e8 81       	ld	r30, Y
    10a0:	c2 5a       	subi	r28, 0xA2	; 162
    10a2:	d0 40       	sbci	r29, 0x00	; 0
    10a4:	ee 23       	and	r30, r30
    10a6:	31 f6       	brne	.-116    	; 0x1034 <main+0x4fe>
LCD_arabic(Pattern1,1);
    10a8:	ce 01       	movw	r24, r28
    10aa:	8b 5a       	subi	r24, 0xAB	; 171
    10ac:	9f 4f       	sbci	r25, 0xFF	; 255
    10ae:	61 e0       	ldi	r22, 0x01	; 1
    10b0:	0e 94 d6 2b 	call	0x57ac	; 0x57ac <LCD_arabic>
LCD_arabic(Pattern2,2);
    10b4:	ce 01       	movw	r24, r28
    10b6:	83 5a       	subi	r24, 0xA3	; 163
    10b8:	9f 4f       	sbci	r25, 0xFF	; 255
    10ba:	62 e0       	ldi	r22, 0x02	; 2
    10bc:	0e 94 d6 2b 	call	0x57ac	; 0x57ac <LCD_arabic>
LCD_arabic(Pattern3,3);
    10c0:	ce 01       	movw	r24, r28
    10c2:	8b 59       	subi	r24, 0x9B	; 155
    10c4:	9f 4f       	sbci	r25, 0xFF	; 255
    10c6:	63 e0       	ldi	r22, 0x03	; 3
    10c8:	0e 94 d6 2b 	call	0x57ac	; 0x57ac <LCD_arabic>
LCD_arabic(Pattern4,4);
    10cc:	ce 01       	movw	r24, r28
    10ce:	83 59       	subi	r24, 0x93	; 147
    10d0:	9f 4f       	sbci	r25, 0xFF	; 255
    10d2:	64 e0       	ldi	r22, 0x04	; 4
    10d4:	0e 94 d6 2b 	call	0x57ac	; 0x57ac <LCD_arabic>
LCD_arabic(Pattern5,5);
    10d8:	ce 01       	movw	r24, r28
    10da:	8b 58       	subi	r24, 0x8B	; 139
    10dc:	9f 4f       	sbci	r25, 0xFF	; 255
    10de:	65 e0       	ldi	r22, 0x05	; 5
    10e0:	0e 94 d6 2b 	call	0x57ac	; 0x57ac <LCD_arabic>
LCD_arabic(Pattern6,6);
    10e4:	ce 01       	movw	r24, r28
    10e6:	83 58       	subi	r24, 0x83	; 131
    10e8:	9f 4f       	sbci	r25, 0xFF	; 255
    10ea:	66 e0       	ldi	r22, 0x06	; 6
    10ec:	0e 94 d6 2b 	call	0x57ac	; 0x57ac <LCD_arabic>
while(1)
{
PORTD |=(1<<0); // turn on green led
    10f0:	a2 e3       	ldi	r26, 0x32	; 50
    10f2:	b0 e0       	ldi	r27, 0x00	; 0
    10f4:	e2 e3       	ldi	r30, 0x32	; 50
    10f6:	f0 e0       	ldi	r31, 0x00	; 0
    10f8:	80 81       	ld	r24, Z
    10fa:	81 60       	ori	r24, 0x01	; 1
    10fc:	8c 93       	st	X, r24
LCD_firstadd();
    10fe:	0e 94 ae 11 	call	0x235c	; 0x235c <LCD_firstadd>
PORTA=0b00000010; // 1st sevenseg print 6
    1102:	eb e3       	ldi	r30, 0x3B	; 59
    1104:	f0 e0       	ldi	r31, 0x00	; 0
    1106:	82 e0       	ldi	r24, 0x02	; 2
    1108:	80 83       	st	Z, r24
PORTC=0b01000000;  // 2nd seven seg print 0
    110a:	e5 e3       	ldi	r30, 0x35	; 53
    110c:	f0 e0       	ldi	r31, 0x00	; 0
    110e:	80 e4       	ldi	r24, 0x40	; 64
    1110:	80 83       	st	Z, r24
    1112:	fe 01       	movw	r30, r28
    1114:	ed 5b       	subi	r30, 0xBD	; 189
    1116:	ff 4f       	sbci	r31, 0xFF	; 255
    1118:	80 e0       	ldi	r24, 0x00	; 0
    111a:	90 e0       	ldi	r25, 0x00	; 0
    111c:	a8 ec       	ldi	r26, 0xC8	; 200
    111e:	b2 e4       	ldi	r27, 0x42	; 66
    1120:	80 83       	st	Z, r24
    1122:	91 83       	std	Z+1, r25	; 0x01
    1124:	a2 83       	std	Z+2, r26	; 0x02
    1126:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1128:	8e 01       	movw	r16, r28
    112a:	01 5c       	subi	r16, 0xC1	; 193
    112c:	1f 4f       	sbci	r17, 0xFF	; 255
    112e:	fe 01       	movw	r30, r28
    1130:	ed 5b       	subi	r30, 0xBD	; 189
    1132:	ff 4f       	sbci	r31, 0xFF	; 255
    1134:	60 81       	ld	r22, Z
    1136:	71 81       	ldd	r23, Z+1	; 0x01
    1138:	82 81       	ldd	r24, Z+2	; 0x02
    113a:	93 81       	ldd	r25, Z+3	; 0x03
    113c:	20 e0       	ldi	r18, 0x00	; 0
    113e:	30 e0       	ldi	r19, 0x00	; 0
    1140:	4a ef       	ldi	r20, 0xFA	; 250
    1142:	54 e4       	ldi	r21, 0x44	; 68
    1144:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1148:	dc 01       	movw	r26, r24
    114a:	cb 01       	movw	r24, r22
    114c:	f8 01       	movw	r30, r16
    114e:	80 83       	st	Z, r24
    1150:	91 83       	std	Z+1, r25	; 0x01
    1152:	a2 83       	std	Z+2, r26	; 0x02
    1154:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1156:	fe 01       	movw	r30, r28
    1158:	ff 96       	adiw	r30, 0x3f	; 63
    115a:	60 81       	ld	r22, Z
    115c:	71 81       	ldd	r23, Z+1	; 0x01
    115e:	82 81       	ldd	r24, Z+2	; 0x02
    1160:	93 81       	ldd	r25, Z+3	; 0x03
    1162:	20 e0       	ldi	r18, 0x00	; 0
    1164:	30 e0       	ldi	r19, 0x00	; 0
    1166:	40 e8       	ldi	r20, 0x80	; 128
    1168:	5f e3       	ldi	r21, 0x3F	; 63
    116a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    116e:	88 23       	and	r24, r24
    1170:	2c f4       	brge	.+10     	; 0x117c <main+0x646>
		__ticks = 1;
    1172:	81 e0       	ldi	r24, 0x01	; 1
    1174:	90 e0       	ldi	r25, 0x00	; 0
    1176:	9e af       	std	Y+62, r25	; 0x3e
    1178:	8d af       	std	Y+61, r24	; 0x3d
    117a:	46 c0       	rjmp	.+140    	; 0x1208 <main+0x6d2>
	else if (__tmp > 65535)
    117c:	fe 01       	movw	r30, r28
    117e:	ff 96       	adiw	r30, 0x3f	; 63
    1180:	60 81       	ld	r22, Z
    1182:	71 81       	ldd	r23, Z+1	; 0x01
    1184:	82 81       	ldd	r24, Z+2	; 0x02
    1186:	93 81       	ldd	r25, Z+3	; 0x03
    1188:	20 e0       	ldi	r18, 0x00	; 0
    118a:	3f ef       	ldi	r19, 0xFF	; 255
    118c:	4f e7       	ldi	r20, 0x7F	; 127
    118e:	57 e4       	ldi	r21, 0x47	; 71
    1190:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1194:	18 16       	cp	r1, r24
    1196:	64 f5       	brge	.+88     	; 0x11f0 <main+0x6ba>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1198:	fe 01       	movw	r30, r28
    119a:	ed 5b       	subi	r30, 0xBD	; 189
    119c:	ff 4f       	sbci	r31, 0xFF	; 255
    119e:	60 81       	ld	r22, Z
    11a0:	71 81       	ldd	r23, Z+1	; 0x01
    11a2:	82 81       	ldd	r24, Z+2	; 0x02
    11a4:	93 81       	ldd	r25, Z+3	; 0x03
    11a6:	20 e0       	ldi	r18, 0x00	; 0
    11a8:	30 e0       	ldi	r19, 0x00	; 0
    11aa:	40 e2       	ldi	r20, 0x20	; 32
    11ac:	51 e4       	ldi	r21, 0x41	; 65
    11ae:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    11b2:	dc 01       	movw	r26, r24
    11b4:	cb 01       	movw	r24, r22
    11b6:	bc 01       	movw	r22, r24
    11b8:	cd 01       	movw	r24, r26
    11ba:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    11be:	dc 01       	movw	r26, r24
    11c0:	cb 01       	movw	r24, r22
    11c2:	9e af       	std	Y+62, r25	; 0x3e
    11c4:	8d af       	std	Y+61, r24	; 0x3d
    11c6:	0f c0       	rjmp	.+30     	; 0x11e6 <main+0x6b0>
    11c8:	88 ec       	ldi	r24, 0xC8	; 200
    11ca:	90 e0       	ldi	r25, 0x00	; 0
    11cc:	9c af       	std	Y+60, r25	; 0x3c
    11ce:	8b af       	std	Y+59, r24	; 0x3b
    11d0:	8b ad       	ldd	r24, Y+59	; 0x3b
    11d2:	9c ad       	ldd	r25, Y+60	; 0x3c
    11d4:	01 97       	sbiw	r24, 0x01	; 1
    11d6:	f1 f7       	brne	.-4      	; 0x11d4 <main+0x69e>
    11d8:	9c af       	std	Y+60, r25	; 0x3c
    11da:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    11dc:	8d ad       	ldd	r24, Y+61	; 0x3d
    11de:	9e ad       	ldd	r25, Y+62	; 0x3e
    11e0:	01 97       	sbiw	r24, 0x01	; 1
    11e2:	9e af       	std	Y+62, r25	; 0x3e
    11e4:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    11e6:	8d ad       	ldd	r24, Y+61	; 0x3d
    11e8:	9e ad       	ldd	r25, Y+62	; 0x3e
    11ea:	00 97       	sbiw	r24, 0x00	; 0
    11ec:	69 f7       	brne	.-38     	; 0x11c8 <main+0x692>
    11ee:	16 c0       	rjmp	.+44     	; 0x121c <main+0x6e6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    11f0:	fe 01       	movw	r30, r28
    11f2:	ff 96       	adiw	r30, 0x3f	; 63
    11f4:	60 81       	ld	r22, Z
    11f6:	71 81       	ldd	r23, Z+1	; 0x01
    11f8:	82 81       	ldd	r24, Z+2	; 0x02
    11fa:	93 81       	ldd	r25, Z+3	; 0x03
    11fc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1200:	dc 01       	movw	r26, r24
    1202:	cb 01       	movw	r24, r22
    1204:	9e af       	std	Y+62, r25	; 0x3e
    1206:	8d af       	std	Y+61, r24	; 0x3d
    1208:	8d ad       	ldd	r24, Y+61	; 0x3d
    120a:	9e ad       	ldd	r25, Y+62	; 0x3e
    120c:	9a af       	std	Y+58, r25	; 0x3a
    120e:	89 af       	std	Y+57, r24	; 0x39
    1210:	89 ad       	ldd	r24, Y+57	; 0x39
    1212:	9a ad       	ldd	r25, Y+58	; 0x3a
    1214:	01 97       	sbiw	r24, 0x01	; 1
    1216:	f1 f7       	brne	.-4      	; 0x1214 <main+0x6de>
    1218:	9a af       	std	Y+58, r25	; 0x3a
    121a:	89 af       	std	Y+57, r24	; 0x39
_delay_ms(100);
PORTA=0b00010010; // print 5
    121c:	eb e3       	ldi	r30, 0x3B	; 59
    121e:	f0 e0       	ldi	r31, 0x00	; 0
    1220:	82 e1       	ldi	r24, 0x12	; 18
    1222:	80 83       	st	Z, r24
sevenseg(); // count from 9 to 0
    1224:	0e 94 a2 0b 	call	0x1744	; 0x1744 <sevenseg>

LCD_secondadd();
    1228:	0e 94 3c 25 	call	0x4a78	; 0x4a78 <LCD_secondadd>
PORTA=0b00011001; // print 4 on 1st segm
    122c:	eb e3       	ldi	r30, 0x3B	; 59
    122e:	f0 e0       	ldi	r31, 0x00	; 0
    1230:	89 e1       	ldi	r24, 0x19	; 25
    1232:	80 83       	st	Z, r24
sevenseg();
    1234:	0e 94 a2 0b 	call	0x1744	; 0x1744 <sevenseg>

LCD_firstadd();
    1238:	0e 94 ae 11 	call	0x235c	; 0x235c <LCD_firstadd>
PORTA=0b00110000; //print 3 on 1st segm
    123c:	eb e3       	ldi	r30, 0x3B	; 59
    123e:	f0 e0       	ldi	r31, 0x00	; 0
    1240:	80 e3       	ldi	r24, 0x30	; 48
    1242:	80 83       	st	Z, r24
sevenseg();
    1244:	0e 94 a2 0b 	call	0x1744	; 0x1744 <sevenseg>

LCD_secondadd();
    1248:	0e 94 3c 25 	call	0x4a78	; 0x4a78 <LCD_secondadd>
PORTA=0b00100100; //print 2 on 1st segm
    124c:	eb e3       	ldi	r30, 0x3B	; 59
    124e:	f0 e0       	ldi	r31, 0x00	; 0
    1250:	84 e2       	ldi	r24, 0x24	; 36
    1252:	80 83       	st	Z, r24
sevenseg();
    1254:	0e 94 a2 0b 	call	0x1744	; 0x1744 <sevenseg>

LCD_firstadd();
    1258:	0e 94 ae 11 	call	0x235c	; 0x235c <LCD_firstadd>
PORTA=0b11111001; //print 1 on 1st segm
    125c:	eb e3       	ldi	r30, 0x3B	; 59
    125e:	f0 e0       	ldi	r31, 0x00	; 0
    1260:	89 ef       	ldi	r24, 0xF9	; 249
    1262:	80 83       	st	Z, r24
sevenseg();
    1264:	0e 94 a2 0b 	call	0x1744	; 0x1744 <sevenseg>

LCD_secondadd();
    1268:	0e 94 3c 25 	call	0x4a78	; 0x4a78 <LCD_secondadd>
PORTA=0b01000000;//print 0 on 1st segm
    126c:	eb e3       	ldi	r30, 0x3B	; 59
    126e:	f0 e0       	ldi	r31, 0x00	; 0
    1270:	80 e4       	ldi	r24, 0x40	; 64
    1272:	80 83       	st	Z, r24
sevenseg();
    1274:	0e 94 a2 0b 	call	0x1744	; 0x1744 <sevenseg>

PORTD&=~(1<<0);
    1278:	a2 e3       	ldi	r26, 0x32	; 50
    127a:	b0 e0       	ldi	r27, 0x00	; 0
    127c:	e2 e3       	ldi	r30, 0x32	; 50
    127e:	f0 e0       	ldi	r31, 0x00	; 0
    1280:	80 81       	ld	r24, Z
    1282:	8e 7f       	andi	r24, 0xFE	; 254
    1284:	8c 93       	st	X, r24
LCD_firstadd();
    1286:	0e 94 ae 11 	call	0x235c	; 0x235c <LCD_firstadd>

PORTD |=(1<<1);  // TURN YELLOW on LED
    128a:	a2 e3       	ldi	r26, 0x32	; 50
    128c:	b0 e0       	ldi	r27, 0x00	; 0
    128e:	e2 e3       	ldi	r30, 0x32	; 50
    1290:	f0 e0       	ldi	r31, 0x00	; 0
    1292:	80 81       	ld	r24, Z
    1294:	82 60       	ori	r24, 0x02	; 2
    1296:	8c 93       	st	X, r24
LeftMotor();        // Turn Motor to left
    1298:	0e 94 b0 2a 	call	0x5560	; 0x5560 <LeftMotor>

PORTA=0b01111001; //1
    129c:	eb e3       	ldi	r30, 0x3B	; 59
    129e:	f0 e0       	ldi	r31, 0x00	; 0
    12a0:	89 e7       	ldi	r24, 0x79	; 121
    12a2:	80 83       	st	Z, r24
PORTC=0b01000000; //0
    12a4:	e5 e3       	ldi	r30, 0x35	; 53
    12a6:	f0 e0       	ldi	r31, 0x00	; 0
    12a8:	80 e4       	ldi	r24, 0x40	; 64
    12aa:	80 83       	st	Z, r24
    12ac:	80 e0       	ldi	r24, 0x00	; 0
    12ae:	90 e0       	ldi	r25, 0x00	; 0
    12b0:	a0 e2       	ldi	r26, 0x20	; 32
    12b2:	b1 e4       	ldi	r27, 0x41	; 65
    12b4:	8d ab       	std	Y+53, r24	; 0x35
    12b6:	9e ab       	std	Y+54, r25	; 0x36
    12b8:	af ab       	std	Y+55, r26	; 0x37
    12ba:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    12bc:	6d a9       	ldd	r22, Y+53	; 0x35
    12be:	7e a9       	ldd	r23, Y+54	; 0x36
    12c0:	8f a9       	ldd	r24, Y+55	; 0x37
    12c2:	98 ad       	ldd	r25, Y+56	; 0x38
    12c4:	20 e0       	ldi	r18, 0x00	; 0
    12c6:	30 e0       	ldi	r19, 0x00	; 0
    12c8:	4a ef       	ldi	r20, 0xFA	; 250
    12ca:	54 e4       	ldi	r21, 0x44	; 68
    12cc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    12d0:	dc 01       	movw	r26, r24
    12d2:	cb 01       	movw	r24, r22
    12d4:	89 ab       	std	Y+49, r24	; 0x31
    12d6:	9a ab       	std	Y+50, r25	; 0x32
    12d8:	ab ab       	std	Y+51, r26	; 0x33
    12da:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    12dc:	69 a9       	ldd	r22, Y+49	; 0x31
    12de:	7a a9       	ldd	r23, Y+50	; 0x32
    12e0:	8b a9       	ldd	r24, Y+51	; 0x33
    12e2:	9c a9       	ldd	r25, Y+52	; 0x34
    12e4:	20 e0       	ldi	r18, 0x00	; 0
    12e6:	30 e0       	ldi	r19, 0x00	; 0
    12e8:	40 e8       	ldi	r20, 0x80	; 128
    12ea:	5f e3       	ldi	r21, 0x3F	; 63
    12ec:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    12f0:	88 23       	and	r24, r24
    12f2:	2c f4       	brge	.+10     	; 0x12fe <main+0x7c8>
		__ticks = 1;
    12f4:	81 e0       	ldi	r24, 0x01	; 1
    12f6:	90 e0       	ldi	r25, 0x00	; 0
    12f8:	98 ab       	std	Y+48, r25	; 0x30
    12fa:	8f a7       	std	Y+47, r24	; 0x2f
    12fc:	3f c0       	rjmp	.+126    	; 0x137c <main+0x846>
	else if (__tmp > 65535)
    12fe:	69 a9       	ldd	r22, Y+49	; 0x31
    1300:	7a a9       	ldd	r23, Y+50	; 0x32
    1302:	8b a9       	ldd	r24, Y+51	; 0x33
    1304:	9c a9       	ldd	r25, Y+52	; 0x34
    1306:	20 e0       	ldi	r18, 0x00	; 0
    1308:	3f ef       	ldi	r19, 0xFF	; 255
    130a:	4f e7       	ldi	r20, 0x7F	; 127
    130c:	57 e4       	ldi	r21, 0x47	; 71
    130e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1312:	18 16       	cp	r1, r24
    1314:	4c f5       	brge	.+82     	; 0x1368 <main+0x832>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1316:	6d a9       	ldd	r22, Y+53	; 0x35
    1318:	7e a9       	ldd	r23, Y+54	; 0x36
    131a:	8f a9       	ldd	r24, Y+55	; 0x37
    131c:	98 ad       	ldd	r25, Y+56	; 0x38
    131e:	20 e0       	ldi	r18, 0x00	; 0
    1320:	30 e0       	ldi	r19, 0x00	; 0
    1322:	40 e2       	ldi	r20, 0x20	; 32
    1324:	51 e4       	ldi	r21, 0x41	; 65
    1326:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    132a:	dc 01       	movw	r26, r24
    132c:	cb 01       	movw	r24, r22
    132e:	bc 01       	movw	r22, r24
    1330:	cd 01       	movw	r24, r26
    1332:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1336:	dc 01       	movw	r26, r24
    1338:	cb 01       	movw	r24, r22
    133a:	98 ab       	std	Y+48, r25	; 0x30
    133c:	8f a7       	std	Y+47, r24	; 0x2f
    133e:	0f c0       	rjmp	.+30     	; 0x135e <main+0x828>
    1340:	88 ec       	ldi	r24, 0xC8	; 200
    1342:	90 e0       	ldi	r25, 0x00	; 0
    1344:	9e a7       	std	Y+46, r25	; 0x2e
    1346:	8d a7       	std	Y+45, r24	; 0x2d
    1348:	8d a5       	ldd	r24, Y+45	; 0x2d
    134a:	9e a5       	ldd	r25, Y+46	; 0x2e
    134c:	01 97       	sbiw	r24, 0x01	; 1
    134e:	f1 f7       	brne	.-4      	; 0x134c <main+0x816>
    1350:	9e a7       	std	Y+46, r25	; 0x2e
    1352:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1354:	8f a5       	ldd	r24, Y+47	; 0x2f
    1356:	98 a9       	ldd	r25, Y+48	; 0x30
    1358:	01 97       	sbiw	r24, 0x01	; 1
    135a:	98 ab       	std	Y+48, r25	; 0x30
    135c:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    135e:	8f a5       	ldd	r24, Y+47	; 0x2f
    1360:	98 a9       	ldd	r25, Y+48	; 0x30
    1362:	00 97       	sbiw	r24, 0x00	; 0
    1364:	69 f7       	brne	.-38     	; 0x1340 <main+0x80a>
    1366:	14 c0       	rjmp	.+40     	; 0x1390 <main+0x85a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1368:	69 a9       	ldd	r22, Y+49	; 0x31
    136a:	7a a9       	ldd	r23, Y+50	; 0x32
    136c:	8b a9       	ldd	r24, Y+51	; 0x33
    136e:	9c a9       	ldd	r25, Y+52	; 0x34
    1370:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1374:	dc 01       	movw	r26, r24
    1376:	cb 01       	movw	r24, r22
    1378:	98 ab       	std	Y+48, r25	; 0x30
    137a:	8f a7       	std	Y+47, r24	; 0x2f
    137c:	8f a5       	ldd	r24, Y+47	; 0x2f
    137e:	98 a9       	ldd	r25, Y+48	; 0x30
    1380:	9c a7       	std	Y+44, r25	; 0x2c
    1382:	8b a7       	std	Y+43, r24	; 0x2b
    1384:	8b a5       	ldd	r24, Y+43	; 0x2b
    1386:	9c a5       	ldd	r25, Y+44	; 0x2c
    1388:	01 97       	sbiw	r24, 0x01	; 1
    138a:	f1 f7       	brne	.-4      	; 0x1388 <main+0x852>
    138c:	9c a7       	std	Y+44, r25	; 0x2c
    138e:	8b a7       	std	Y+43, r24	; 0x2b
_delay_ms(10);
PORTA=0b01000000;//0
    1390:	eb e3       	ldi	r30, 0x3B	; 59
    1392:	f0 e0       	ldi	r31, 0x00	; 0
    1394:	80 e4       	ldi	r24, 0x40	; 64
    1396:	80 83       	st	Z, r24
sevenseg();
    1398:	0e 94 a2 0b 	call	0x1744	; 0x1744 <sevenseg>
PORTD &=~(1<<3); // close the motor
    139c:	a2 e3       	ldi	r26, 0x32	; 50
    139e:	b0 e0       	ldi	r27, 0x00	; 0
    13a0:	e2 e3       	ldi	r30, 0x32	; 50
    13a2:	f0 e0       	ldi	r31, 0x00	; 0
    13a4:	80 81       	ld	r24, Z
    13a6:	87 7f       	andi	r24, 0xF7	; 247
    13a8:	8c 93       	st	X, r24
PORTD &=~(1<<1); //turn yellow of
    13aa:	a2 e3       	ldi	r26, 0x32	; 50
    13ac:	b0 e0       	ldi	r27, 0x00	; 0
    13ae:	e2 e3       	ldi	r30, 0x32	; 50
    13b0:	f0 e0       	ldi	r31, 0x00	; 0
    13b2:	80 81       	ld	r24, Z
    13b4:	8d 7f       	andi	r24, 0xFD	; 253
    13b6:	8c 93       	st	X, r24
LCD_secondadd();
    13b8:	0e 94 3c 25 	call	0x4a78	; 0x4a78 <LCD_secondadd>

LCD_secondadd();
    13bc:	0e 94 3c 25 	call	0x4a78	; 0x4a78 <LCD_secondadd>
PORTD |=(1<<2); // red led on
    13c0:	a2 e3       	ldi	r26, 0x32	; 50
    13c2:	b0 e0       	ldi	r27, 0x00	; 0
    13c4:	e2 e3       	ldi	r30, 0x32	; 50
    13c6:	f0 e0       	ldi	r31, 0x00	; 0
    13c8:	80 81       	ld	r24, Z
    13ca:	84 60       	ori	r24, 0x04	; 4
    13cc:	8c 93       	st	X, r24
PORTA=0b00000010;
    13ce:	eb e3       	ldi	r30, 0x3B	; 59
    13d0:	f0 e0       	ldi	r31, 0x00	; 0
    13d2:	82 e0       	ldi	r24, 0x02	; 2
    13d4:	80 83       	st	Z, r24
PORTC=0b01000000;
    13d6:	e5 e3       	ldi	r30, 0x35	; 53
    13d8:	f0 e0       	ldi	r31, 0x00	; 0
    13da:	80 e4       	ldi	r24, 0x40	; 64
    13dc:	80 83       	st	Z, r24
    13de:	80 e0       	ldi	r24, 0x00	; 0
    13e0:	90 e0       	ldi	r25, 0x00	; 0
    13e2:	a0 e2       	ldi	r26, 0x20	; 32
    13e4:	b1 e4       	ldi	r27, 0x41	; 65
    13e6:	8f a3       	std	Y+39, r24	; 0x27
    13e8:	98 a7       	std	Y+40, r25	; 0x28
    13ea:	a9 a7       	std	Y+41, r26	; 0x29
    13ec:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    13ee:	6f a1       	ldd	r22, Y+39	; 0x27
    13f0:	78 a5       	ldd	r23, Y+40	; 0x28
    13f2:	89 a5       	ldd	r24, Y+41	; 0x29
    13f4:	9a a5       	ldd	r25, Y+42	; 0x2a
    13f6:	20 e0       	ldi	r18, 0x00	; 0
    13f8:	30 e0       	ldi	r19, 0x00	; 0
    13fa:	4a ef       	ldi	r20, 0xFA	; 250
    13fc:	54 e4       	ldi	r21, 0x44	; 68
    13fe:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1402:	dc 01       	movw	r26, r24
    1404:	cb 01       	movw	r24, r22
    1406:	8b a3       	std	Y+35, r24	; 0x23
    1408:	9c a3       	std	Y+36, r25	; 0x24
    140a:	ad a3       	std	Y+37, r26	; 0x25
    140c:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    140e:	6b a1       	ldd	r22, Y+35	; 0x23
    1410:	7c a1       	ldd	r23, Y+36	; 0x24
    1412:	8d a1       	ldd	r24, Y+37	; 0x25
    1414:	9e a1       	ldd	r25, Y+38	; 0x26
    1416:	20 e0       	ldi	r18, 0x00	; 0
    1418:	30 e0       	ldi	r19, 0x00	; 0
    141a:	40 e8       	ldi	r20, 0x80	; 128
    141c:	5f e3       	ldi	r21, 0x3F	; 63
    141e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1422:	88 23       	and	r24, r24
    1424:	2c f4       	brge	.+10     	; 0x1430 <main+0x8fa>
		__ticks = 1;
    1426:	81 e0       	ldi	r24, 0x01	; 1
    1428:	90 e0       	ldi	r25, 0x00	; 0
    142a:	9a a3       	std	Y+34, r25	; 0x22
    142c:	89 a3       	std	Y+33, r24	; 0x21
    142e:	3f c0       	rjmp	.+126    	; 0x14ae <main+0x978>
	else if (__tmp > 65535)
    1430:	6b a1       	ldd	r22, Y+35	; 0x23
    1432:	7c a1       	ldd	r23, Y+36	; 0x24
    1434:	8d a1       	ldd	r24, Y+37	; 0x25
    1436:	9e a1       	ldd	r25, Y+38	; 0x26
    1438:	20 e0       	ldi	r18, 0x00	; 0
    143a:	3f ef       	ldi	r19, 0xFF	; 255
    143c:	4f e7       	ldi	r20, 0x7F	; 127
    143e:	57 e4       	ldi	r21, 0x47	; 71
    1440:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1444:	18 16       	cp	r1, r24
    1446:	4c f5       	brge	.+82     	; 0x149a <main+0x964>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1448:	6f a1       	ldd	r22, Y+39	; 0x27
    144a:	78 a5       	ldd	r23, Y+40	; 0x28
    144c:	89 a5       	ldd	r24, Y+41	; 0x29
    144e:	9a a5       	ldd	r25, Y+42	; 0x2a
    1450:	20 e0       	ldi	r18, 0x00	; 0
    1452:	30 e0       	ldi	r19, 0x00	; 0
    1454:	40 e2       	ldi	r20, 0x20	; 32
    1456:	51 e4       	ldi	r21, 0x41	; 65
    1458:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    145c:	dc 01       	movw	r26, r24
    145e:	cb 01       	movw	r24, r22
    1460:	bc 01       	movw	r22, r24
    1462:	cd 01       	movw	r24, r26
    1464:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1468:	dc 01       	movw	r26, r24
    146a:	cb 01       	movw	r24, r22
    146c:	9a a3       	std	Y+34, r25	; 0x22
    146e:	89 a3       	std	Y+33, r24	; 0x21
    1470:	0f c0       	rjmp	.+30     	; 0x1490 <main+0x95a>
    1472:	88 ec       	ldi	r24, 0xC8	; 200
    1474:	90 e0       	ldi	r25, 0x00	; 0
    1476:	98 a3       	std	Y+32, r25	; 0x20
    1478:	8f 8f       	std	Y+31, r24	; 0x1f
    147a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    147c:	98 a1       	ldd	r25, Y+32	; 0x20
    147e:	01 97       	sbiw	r24, 0x01	; 1
    1480:	f1 f7       	brne	.-4      	; 0x147e <main+0x948>
    1482:	98 a3       	std	Y+32, r25	; 0x20
    1484:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1486:	89 a1       	ldd	r24, Y+33	; 0x21
    1488:	9a a1       	ldd	r25, Y+34	; 0x22
    148a:	01 97       	sbiw	r24, 0x01	; 1
    148c:	9a a3       	std	Y+34, r25	; 0x22
    148e:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1490:	89 a1       	ldd	r24, Y+33	; 0x21
    1492:	9a a1       	ldd	r25, Y+34	; 0x22
    1494:	00 97       	sbiw	r24, 0x00	; 0
    1496:	69 f7       	brne	.-38     	; 0x1472 <main+0x93c>
    1498:	14 c0       	rjmp	.+40     	; 0x14c2 <main+0x98c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    149a:	6b a1       	ldd	r22, Y+35	; 0x23
    149c:	7c a1       	ldd	r23, Y+36	; 0x24
    149e:	8d a1       	ldd	r24, Y+37	; 0x25
    14a0:	9e a1       	ldd	r25, Y+38	; 0x26
    14a2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    14a6:	dc 01       	movw	r26, r24
    14a8:	cb 01       	movw	r24, r22
    14aa:	9a a3       	std	Y+34, r25	; 0x22
    14ac:	89 a3       	std	Y+33, r24	; 0x21
    14ae:	89 a1       	ldd	r24, Y+33	; 0x21
    14b0:	9a a1       	ldd	r25, Y+34	; 0x22
    14b2:	9e 8f       	std	Y+30, r25	; 0x1e
    14b4:	8d 8f       	std	Y+29, r24	; 0x1d
    14b6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    14b8:	9e 8d       	ldd	r25, Y+30	; 0x1e
    14ba:	01 97       	sbiw	r24, 0x01	; 1
    14bc:	f1 f7       	brne	.-4      	; 0x14ba <main+0x984>
    14be:	9e 8f       	std	Y+30, r25	; 0x1e
    14c0:	8d 8f       	std	Y+29, r24	; 0x1d
_delay_ms(10);

PORTA=0b00010010;
    14c2:	eb e3       	ldi	r30, 0x3B	; 59
    14c4:	f0 e0       	ldi	r31, 0x00	; 0
    14c6:	82 e1       	ldi	r24, 0x12	; 18
    14c8:	80 83       	st	Z, r24
sevenseg();
    14ca:	0e 94 a2 0b 	call	0x1744	; 0x1744 <sevenseg>

LCD_firstadd();
    14ce:	0e 94 ae 11 	call	0x235c	; 0x235c <LCD_firstadd>
PORTA=0b00011001;
    14d2:	eb e3       	ldi	r30, 0x3B	; 59
    14d4:	f0 e0       	ldi	r31, 0x00	; 0
    14d6:	89 e1       	ldi	r24, 0x19	; 25
    14d8:	80 83       	st	Z, r24
sevenseg();
    14da:	0e 94 a2 0b 	call	0x1744	; 0x1744 <sevenseg>

LCD_secondadd();
    14de:	0e 94 3c 25 	call	0x4a78	; 0x4a78 <LCD_secondadd>
PORTA=0b00110000;
    14e2:	eb e3       	ldi	r30, 0x3B	; 59
    14e4:	f0 e0       	ldi	r31, 0x00	; 0
    14e6:	80 e3       	ldi	r24, 0x30	; 48
    14e8:	80 83       	st	Z, r24
sevenseg();
    14ea:	0e 94 a2 0b 	call	0x1744	; 0x1744 <sevenseg>

LCD_firstadd();
    14ee:	0e 94 ae 11 	call	0x235c	; 0x235c <LCD_firstadd>
PORTA=0b00100100;
    14f2:	eb e3       	ldi	r30, 0x3B	; 59
    14f4:	f0 e0       	ldi	r31, 0x00	; 0
    14f6:	84 e2       	ldi	r24, 0x24	; 36
    14f8:	80 83       	st	Z, r24
sevenseg();
    14fa:	0e 94 a2 0b 	call	0x1744	; 0x1744 <sevenseg>

LCD_secondadd();
    14fe:	0e 94 3c 25 	call	0x4a78	; 0x4a78 <LCD_secondadd>
PORTA=0b01111001;
    1502:	eb e3       	ldi	r30, 0x3B	; 59
    1504:	f0 e0       	ldi	r31, 0x00	; 0
    1506:	89 e7       	ldi	r24, 0x79	; 121
    1508:	80 83       	st	Z, r24
sevenseg();
    150a:	0e 94 a2 0b 	call	0x1744	; 0x1744 <sevenseg>

LCD_firstadd();
    150e:	0e 94 ae 11 	call	0x235c	; 0x235c <LCD_firstadd>
PORTA=0b01000000;
    1512:	eb e3       	ldi	r30, 0x3B	; 59
    1514:	f0 e0       	ldi	r31, 0x00	; 0
    1516:	80 e4       	ldi	r24, 0x40	; 64
    1518:	80 83       	st	Z, r24
sevenseg();
    151a:	0e 94 a2 0b 	call	0x1744	; 0x1744 <sevenseg>



PORTD &=~(1<<2);  // Turn red led off
    151e:	a2 e3       	ldi	r26, 0x32	; 50
    1520:	b0 e0       	ldi	r27, 0x00	; 0
    1522:	e2 e3       	ldi	r30, 0x32	; 50
    1524:	f0 e0       	ldi	r31, 0x00	; 0
    1526:	80 81       	ld	r24, Z
    1528:	8b 7f       	andi	r24, 0xFB	; 251
    152a:	8c 93       	st	X, r24

LCD_secondadd();
    152c:	0e 94 3c 25 	call	0x4a78	; 0x4a78 <LCD_secondadd>
PORTD |=(1<<1); // Turn yellow led on
    1530:	a2 e3       	ldi	r26, 0x32	; 50
    1532:	b0 e0       	ldi	r27, 0x00	; 0
    1534:	e2 e3       	ldi	r30, 0x32	; 50
    1536:	f0 e0       	ldi	r31, 0x00	; 0
    1538:	80 81       	ld	r24, Z
    153a:	82 60       	ori	r24, 0x02	; 2
    153c:	8c 93       	st	X, r24
RightMotor(); // MOTOR
    153e:	0e 94 43 2b 	call	0x5686	; 0x5686 <RightMotor>

PORTA=0b01111001;
    1542:	eb e3       	ldi	r30, 0x3B	; 59
    1544:	f0 e0       	ldi	r31, 0x00	; 0
    1546:	89 e7       	ldi	r24, 0x79	; 121
    1548:	80 83       	st	Z, r24
PORTC=0b01000000;
    154a:	e5 e3       	ldi	r30, 0x35	; 53
    154c:	f0 e0       	ldi	r31, 0x00	; 0
    154e:	80 e4       	ldi	r24, 0x40	; 64
    1550:	80 83       	st	Z, r24
    1552:	80 e0       	ldi	r24, 0x00	; 0
    1554:	90 e0       	ldi	r25, 0x00	; 0
    1556:	a0 e2       	ldi	r26, 0x20	; 32
    1558:	b1 e4       	ldi	r27, 0x41	; 65
    155a:	89 8f       	std	Y+25, r24	; 0x19
    155c:	9a 8f       	std	Y+26, r25	; 0x1a
    155e:	ab 8f       	std	Y+27, r26	; 0x1b
    1560:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1562:	69 8d       	ldd	r22, Y+25	; 0x19
    1564:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1566:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1568:	9c 8d       	ldd	r25, Y+28	; 0x1c
    156a:	20 e0       	ldi	r18, 0x00	; 0
    156c:	30 e0       	ldi	r19, 0x00	; 0
    156e:	4a ef       	ldi	r20, 0xFA	; 250
    1570:	54 e4       	ldi	r21, 0x44	; 68
    1572:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1576:	dc 01       	movw	r26, r24
    1578:	cb 01       	movw	r24, r22
    157a:	8d 8b       	std	Y+21, r24	; 0x15
    157c:	9e 8b       	std	Y+22, r25	; 0x16
    157e:	af 8b       	std	Y+23, r26	; 0x17
    1580:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1582:	6d 89       	ldd	r22, Y+21	; 0x15
    1584:	7e 89       	ldd	r23, Y+22	; 0x16
    1586:	8f 89       	ldd	r24, Y+23	; 0x17
    1588:	98 8d       	ldd	r25, Y+24	; 0x18
    158a:	20 e0       	ldi	r18, 0x00	; 0
    158c:	30 e0       	ldi	r19, 0x00	; 0
    158e:	40 e8       	ldi	r20, 0x80	; 128
    1590:	5f e3       	ldi	r21, 0x3F	; 63
    1592:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1596:	88 23       	and	r24, r24
    1598:	2c f4       	brge	.+10     	; 0x15a4 <main+0xa6e>
		__ticks = 1;
    159a:	81 e0       	ldi	r24, 0x01	; 1
    159c:	90 e0       	ldi	r25, 0x00	; 0
    159e:	9c 8b       	std	Y+20, r25	; 0x14
    15a0:	8b 8b       	std	Y+19, r24	; 0x13
    15a2:	3f c0       	rjmp	.+126    	; 0x1622 <main+0xaec>
	else if (__tmp > 65535)
    15a4:	6d 89       	ldd	r22, Y+21	; 0x15
    15a6:	7e 89       	ldd	r23, Y+22	; 0x16
    15a8:	8f 89       	ldd	r24, Y+23	; 0x17
    15aa:	98 8d       	ldd	r25, Y+24	; 0x18
    15ac:	20 e0       	ldi	r18, 0x00	; 0
    15ae:	3f ef       	ldi	r19, 0xFF	; 255
    15b0:	4f e7       	ldi	r20, 0x7F	; 127
    15b2:	57 e4       	ldi	r21, 0x47	; 71
    15b4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    15b8:	18 16       	cp	r1, r24
    15ba:	4c f5       	brge	.+82     	; 0x160e <main+0xad8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    15bc:	69 8d       	ldd	r22, Y+25	; 0x19
    15be:	7a 8d       	ldd	r23, Y+26	; 0x1a
    15c0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    15c2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    15c4:	20 e0       	ldi	r18, 0x00	; 0
    15c6:	30 e0       	ldi	r19, 0x00	; 0
    15c8:	40 e2       	ldi	r20, 0x20	; 32
    15ca:	51 e4       	ldi	r21, 0x41	; 65
    15cc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    15d0:	dc 01       	movw	r26, r24
    15d2:	cb 01       	movw	r24, r22
    15d4:	bc 01       	movw	r22, r24
    15d6:	cd 01       	movw	r24, r26
    15d8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    15dc:	dc 01       	movw	r26, r24
    15de:	cb 01       	movw	r24, r22
    15e0:	9c 8b       	std	Y+20, r25	; 0x14
    15e2:	8b 8b       	std	Y+19, r24	; 0x13
    15e4:	0f c0       	rjmp	.+30     	; 0x1604 <main+0xace>
    15e6:	88 ec       	ldi	r24, 0xC8	; 200
    15e8:	90 e0       	ldi	r25, 0x00	; 0
    15ea:	9a 8b       	std	Y+18, r25	; 0x12
    15ec:	89 8b       	std	Y+17, r24	; 0x11
    15ee:	89 89       	ldd	r24, Y+17	; 0x11
    15f0:	9a 89       	ldd	r25, Y+18	; 0x12
    15f2:	01 97       	sbiw	r24, 0x01	; 1
    15f4:	f1 f7       	brne	.-4      	; 0x15f2 <main+0xabc>
    15f6:	9a 8b       	std	Y+18, r25	; 0x12
    15f8:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    15fa:	8b 89       	ldd	r24, Y+19	; 0x13
    15fc:	9c 89       	ldd	r25, Y+20	; 0x14
    15fe:	01 97       	sbiw	r24, 0x01	; 1
    1600:	9c 8b       	std	Y+20, r25	; 0x14
    1602:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1604:	8b 89       	ldd	r24, Y+19	; 0x13
    1606:	9c 89       	ldd	r25, Y+20	; 0x14
    1608:	00 97       	sbiw	r24, 0x00	; 0
    160a:	69 f7       	brne	.-38     	; 0x15e6 <main+0xab0>
    160c:	14 c0       	rjmp	.+40     	; 0x1636 <main+0xb00>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    160e:	6d 89       	ldd	r22, Y+21	; 0x15
    1610:	7e 89       	ldd	r23, Y+22	; 0x16
    1612:	8f 89       	ldd	r24, Y+23	; 0x17
    1614:	98 8d       	ldd	r25, Y+24	; 0x18
    1616:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    161a:	dc 01       	movw	r26, r24
    161c:	cb 01       	movw	r24, r22
    161e:	9c 8b       	std	Y+20, r25	; 0x14
    1620:	8b 8b       	std	Y+19, r24	; 0x13
    1622:	8b 89       	ldd	r24, Y+19	; 0x13
    1624:	9c 89       	ldd	r25, Y+20	; 0x14
    1626:	98 8b       	std	Y+16, r25	; 0x10
    1628:	8f 87       	std	Y+15, r24	; 0x0f
    162a:	8f 85       	ldd	r24, Y+15	; 0x0f
    162c:	98 89       	ldd	r25, Y+16	; 0x10
    162e:	01 97       	sbiw	r24, 0x01	; 1
    1630:	f1 f7       	brne	.-4      	; 0x162e <main+0xaf8>
    1632:	98 8b       	std	Y+16, r25	; 0x10
    1634:	8f 87       	std	Y+15, r24	; 0x0f
_delay_ms(10);
PORTA=0b01000000;
    1636:	eb e3       	ldi	r30, 0x3B	; 59
    1638:	f0 e0       	ldi	r31, 0x00	; 0
    163a:	80 e4       	ldi	r24, 0x40	; 64
    163c:	80 83       	st	Z, r24
    163e:	80 e0       	ldi	r24, 0x00	; 0
    1640:	90 e0       	ldi	r25, 0x00	; 0
    1642:	a0 e2       	ldi	r26, 0x20	; 32
    1644:	b1 e4       	ldi	r27, 0x41	; 65
    1646:	8b 87       	std	Y+11, r24	; 0x0b
    1648:	9c 87       	std	Y+12, r25	; 0x0c
    164a:	ad 87       	std	Y+13, r26	; 0x0d
    164c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    164e:	6b 85       	ldd	r22, Y+11	; 0x0b
    1650:	7c 85       	ldd	r23, Y+12	; 0x0c
    1652:	8d 85       	ldd	r24, Y+13	; 0x0d
    1654:	9e 85       	ldd	r25, Y+14	; 0x0e
    1656:	20 e0       	ldi	r18, 0x00	; 0
    1658:	30 e0       	ldi	r19, 0x00	; 0
    165a:	4a ef       	ldi	r20, 0xFA	; 250
    165c:	54 e4       	ldi	r21, 0x44	; 68
    165e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1662:	dc 01       	movw	r26, r24
    1664:	cb 01       	movw	r24, r22
    1666:	8f 83       	std	Y+7, r24	; 0x07
    1668:	98 87       	std	Y+8, r25	; 0x08
    166a:	a9 87       	std	Y+9, r26	; 0x09
    166c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    166e:	6f 81       	ldd	r22, Y+7	; 0x07
    1670:	78 85       	ldd	r23, Y+8	; 0x08
    1672:	89 85       	ldd	r24, Y+9	; 0x09
    1674:	9a 85       	ldd	r25, Y+10	; 0x0a
    1676:	20 e0       	ldi	r18, 0x00	; 0
    1678:	30 e0       	ldi	r19, 0x00	; 0
    167a:	40 e8       	ldi	r20, 0x80	; 128
    167c:	5f e3       	ldi	r21, 0x3F	; 63
    167e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1682:	88 23       	and	r24, r24
    1684:	2c f4       	brge	.+10     	; 0x1690 <main+0xb5a>
		__ticks = 1;
    1686:	81 e0       	ldi	r24, 0x01	; 1
    1688:	90 e0       	ldi	r25, 0x00	; 0
    168a:	9e 83       	std	Y+6, r25	; 0x06
    168c:	8d 83       	std	Y+5, r24	; 0x05
    168e:	3f c0       	rjmp	.+126    	; 0x170e <main+0xbd8>
	else if (__tmp > 65535)
    1690:	6f 81       	ldd	r22, Y+7	; 0x07
    1692:	78 85       	ldd	r23, Y+8	; 0x08
    1694:	89 85       	ldd	r24, Y+9	; 0x09
    1696:	9a 85       	ldd	r25, Y+10	; 0x0a
    1698:	20 e0       	ldi	r18, 0x00	; 0
    169a:	3f ef       	ldi	r19, 0xFF	; 255
    169c:	4f e7       	ldi	r20, 0x7F	; 127
    169e:	57 e4       	ldi	r21, 0x47	; 71
    16a0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    16a4:	18 16       	cp	r1, r24
    16a6:	4c f5       	brge	.+82     	; 0x16fa <main+0xbc4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    16a8:	6b 85       	ldd	r22, Y+11	; 0x0b
    16aa:	7c 85       	ldd	r23, Y+12	; 0x0c
    16ac:	8d 85       	ldd	r24, Y+13	; 0x0d
    16ae:	9e 85       	ldd	r25, Y+14	; 0x0e
    16b0:	20 e0       	ldi	r18, 0x00	; 0
    16b2:	30 e0       	ldi	r19, 0x00	; 0
    16b4:	40 e2       	ldi	r20, 0x20	; 32
    16b6:	51 e4       	ldi	r21, 0x41	; 65
    16b8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    16bc:	dc 01       	movw	r26, r24
    16be:	cb 01       	movw	r24, r22
    16c0:	bc 01       	movw	r22, r24
    16c2:	cd 01       	movw	r24, r26
    16c4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    16c8:	dc 01       	movw	r26, r24
    16ca:	cb 01       	movw	r24, r22
    16cc:	9e 83       	std	Y+6, r25	; 0x06
    16ce:	8d 83       	std	Y+5, r24	; 0x05
    16d0:	0f c0       	rjmp	.+30     	; 0x16f0 <main+0xbba>
    16d2:	88 ec       	ldi	r24, 0xC8	; 200
    16d4:	90 e0       	ldi	r25, 0x00	; 0
    16d6:	9c 83       	std	Y+4, r25	; 0x04
    16d8:	8b 83       	std	Y+3, r24	; 0x03
    16da:	8b 81       	ldd	r24, Y+3	; 0x03
    16dc:	9c 81       	ldd	r25, Y+4	; 0x04
    16de:	01 97       	sbiw	r24, 0x01	; 1
    16e0:	f1 f7       	brne	.-4      	; 0x16de <main+0xba8>
    16e2:	9c 83       	std	Y+4, r25	; 0x04
    16e4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    16e6:	8d 81       	ldd	r24, Y+5	; 0x05
    16e8:	9e 81       	ldd	r25, Y+6	; 0x06
    16ea:	01 97       	sbiw	r24, 0x01	; 1
    16ec:	9e 83       	std	Y+6, r25	; 0x06
    16ee:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    16f0:	8d 81       	ldd	r24, Y+5	; 0x05
    16f2:	9e 81       	ldd	r25, Y+6	; 0x06
    16f4:	00 97       	sbiw	r24, 0x00	; 0
    16f6:	69 f7       	brne	.-38     	; 0x16d2 <main+0xb9c>
    16f8:	14 c0       	rjmp	.+40     	; 0x1722 <main+0xbec>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    16fa:	6f 81       	ldd	r22, Y+7	; 0x07
    16fc:	78 85       	ldd	r23, Y+8	; 0x08
    16fe:	89 85       	ldd	r24, Y+9	; 0x09
    1700:	9a 85       	ldd	r25, Y+10	; 0x0a
    1702:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1706:	dc 01       	movw	r26, r24
    1708:	cb 01       	movw	r24, r22
    170a:	9e 83       	std	Y+6, r25	; 0x06
    170c:	8d 83       	std	Y+5, r24	; 0x05
    170e:	8d 81       	ldd	r24, Y+5	; 0x05
    1710:	9e 81       	ldd	r25, Y+6	; 0x06
    1712:	9a 83       	std	Y+2, r25	; 0x02
    1714:	89 83       	std	Y+1, r24	; 0x01
    1716:	89 81       	ldd	r24, Y+1	; 0x01
    1718:	9a 81       	ldd	r25, Y+2	; 0x02
    171a:	01 97       	sbiw	r24, 0x01	; 1
    171c:	f1 f7       	brne	.-4      	; 0x171a <main+0xbe4>
    171e:	9a 83       	std	Y+2, r25	; 0x02
    1720:	89 83       	std	Y+1, r24	; 0x01
_delay_ms(10);
sevenseg();
    1722:	0e 94 a2 0b 	call	0x1744	; 0x1744 <sevenseg>
PORTD &=~(1<<4); // close the motor
    1726:	a2 e3       	ldi	r26, 0x32	; 50
    1728:	b0 e0       	ldi	r27, 0x00	; 0
    172a:	e2 e3       	ldi	r30, 0x32	; 50
    172c:	f0 e0       	ldi	r31, 0x00	; 0
    172e:	80 81       	ld	r24, Z
    1730:	8f 7e       	andi	r24, 0xEF	; 239
    1732:	8c 93       	st	X, r24
PORTD &=~(1<<1) ; // close yellow led
    1734:	a2 e3       	ldi	r26, 0x32	; 50
    1736:	b0 e0       	ldi	r27, 0x00	; 0
    1738:	e2 e3       	ldi	r30, 0x32	; 50
    173a:	f0 e0       	ldi	r31, 0x00	; 0
    173c:	80 81       	ld	r24, Z
    173e:	8d 7f       	andi	r24, 0xFD	; 253
    1740:	8c 93       	st	X, r24
    1742:	d6 cc       	rjmp	.-1620   	; 0x10f0 <main+0x5ba>

00001744 <sevenseg>:
  }
return 0;

}
void sevenseg(void)
{
    1744:	0f 93       	push	r16
    1746:	1f 93       	push	r17
    1748:	df 93       	push	r29
    174a:	cf 93       	push	r28
    174c:	cd b7       	in	r28, 0x3d	; 61
    174e:	de b7       	in	r29, 0x3e	; 62
    1750:	cc 58       	subi	r28, 0x8C	; 140
    1752:	d0 40       	sbci	r29, 0x00	; 0
    1754:	0f b6       	in	r0, 0x3f	; 63
    1756:	f8 94       	cli
    1758:	de bf       	out	0x3e, r29	; 62
    175a:	0f be       	out	0x3f, r0	; 63
    175c:	cd bf       	out	0x3d, r28	; 61
	PORTC=0b00010000; // number 9 left seg
    175e:	e5 e3       	ldi	r30, 0x35	; 53
    1760:	f0 e0       	ldi	r31, 0x00	; 0
    1762:	80 e1       	ldi	r24, 0x10	; 16
    1764:	80 83       	st	Z, r24
    1766:	fe 01       	movw	r30, r28
    1768:	e7 57       	subi	r30, 0x77	; 119
    176a:	ff 4f       	sbci	r31, 0xFF	; 255
    176c:	80 e0       	ldi	r24, 0x00	; 0
    176e:	90 e0       	ldi	r25, 0x00	; 0
    1770:	a6 e1       	ldi	r26, 0x16	; 22
    1772:	b3 e4       	ldi	r27, 0x43	; 67
    1774:	80 83       	st	Z, r24
    1776:	91 83       	std	Z+1, r25	; 0x01
    1778:	a2 83       	std	Z+2, r26	; 0x02
    177a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    177c:	8e 01       	movw	r16, r28
    177e:	0b 57       	subi	r16, 0x7B	; 123
    1780:	1f 4f       	sbci	r17, 0xFF	; 255
    1782:	fe 01       	movw	r30, r28
    1784:	e7 57       	subi	r30, 0x77	; 119
    1786:	ff 4f       	sbci	r31, 0xFF	; 255
    1788:	60 81       	ld	r22, Z
    178a:	71 81       	ldd	r23, Z+1	; 0x01
    178c:	82 81       	ldd	r24, Z+2	; 0x02
    178e:	93 81       	ldd	r25, Z+3	; 0x03
    1790:	20 e0       	ldi	r18, 0x00	; 0
    1792:	30 e0       	ldi	r19, 0x00	; 0
    1794:	4a ef       	ldi	r20, 0xFA	; 250
    1796:	54 e4       	ldi	r21, 0x44	; 68
    1798:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    179c:	dc 01       	movw	r26, r24
    179e:	cb 01       	movw	r24, r22
    17a0:	f8 01       	movw	r30, r16
    17a2:	80 83       	st	Z, r24
    17a4:	91 83       	std	Z+1, r25	; 0x01
    17a6:	a2 83       	std	Z+2, r26	; 0x02
    17a8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    17aa:	fe 01       	movw	r30, r28
    17ac:	eb 57       	subi	r30, 0x7B	; 123
    17ae:	ff 4f       	sbci	r31, 0xFF	; 255
    17b0:	60 81       	ld	r22, Z
    17b2:	71 81       	ldd	r23, Z+1	; 0x01
    17b4:	82 81       	ldd	r24, Z+2	; 0x02
    17b6:	93 81       	ldd	r25, Z+3	; 0x03
    17b8:	20 e0       	ldi	r18, 0x00	; 0
    17ba:	30 e0       	ldi	r19, 0x00	; 0
    17bc:	40 e8       	ldi	r20, 0x80	; 128
    17be:	5f e3       	ldi	r21, 0x3F	; 63
    17c0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    17c4:	88 23       	and	r24, r24
    17c6:	44 f4       	brge	.+16     	; 0x17d8 <sevenseg+0x94>
		__ticks = 1;
    17c8:	fe 01       	movw	r30, r28
    17ca:	ed 57       	subi	r30, 0x7D	; 125
    17cc:	ff 4f       	sbci	r31, 0xFF	; 255
    17ce:	81 e0       	ldi	r24, 0x01	; 1
    17d0:	90 e0       	ldi	r25, 0x00	; 0
    17d2:	91 83       	std	Z+1, r25	; 0x01
    17d4:	80 83       	st	Z, r24
    17d6:	64 c0       	rjmp	.+200    	; 0x18a0 <sevenseg+0x15c>
	else if (__tmp > 65535)
    17d8:	fe 01       	movw	r30, r28
    17da:	eb 57       	subi	r30, 0x7B	; 123
    17dc:	ff 4f       	sbci	r31, 0xFF	; 255
    17de:	60 81       	ld	r22, Z
    17e0:	71 81       	ldd	r23, Z+1	; 0x01
    17e2:	82 81       	ldd	r24, Z+2	; 0x02
    17e4:	93 81       	ldd	r25, Z+3	; 0x03
    17e6:	20 e0       	ldi	r18, 0x00	; 0
    17e8:	3f ef       	ldi	r19, 0xFF	; 255
    17ea:	4f e7       	ldi	r20, 0x7F	; 127
    17ec:	57 e4       	ldi	r21, 0x47	; 71
    17ee:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    17f2:	18 16       	cp	r1, r24
    17f4:	0c f0       	brlt	.+2      	; 0x17f8 <sevenseg+0xb4>
    17f6:	43 c0       	rjmp	.+134    	; 0x187e <sevenseg+0x13a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    17f8:	fe 01       	movw	r30, r28
    17fa:	e7 57       	subi	r30, 0x77	; 119
    17fc:	ff 4f       	sbci	r31, 0xFF	; 255
    17fe:	60 81       	ld	r22, Z
    1800:	71 81       	ldd	r23, Z+1	; 0x01
    1802:	82 81       	ldd	r24, Z+2	; 0x02
    1804:	93 81       	ldd	r25, Z+3	; 0x03
    1806:	20 e0       	ldi	r18, 0x00	; 0
    1808:	30 e0       	ldi	r19, 0x00	; 0
    180a:	40 e2       	ldi	r20, 0x20	; 32
    180c:	51 e4       	ldi	r21, 0x41	; 65
    180e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1812:	dc 01       	movw	r26, r24
    1814:	cb 01       	movw	r24, r22
    1816:	8e 01       	movw	r16, r28
    1818:	0d 57       	subi	r16, 0x7D	; 125
    181a:	1f 4f       	sbci	r17, 0xFF	; 255
    181c:	bc 01       	movw	r22, r24
    181e:	cd 01       	movw	r24, r26
    1820:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1824:	dc 01       	movw	r26, r24
    1826:	cb 01       	movw	r24, r22
    1828:	f8 01       	movw	r30, r16
    182a:	91 83       	std	Z+1, r25	; 0x01
    182c:	80 83       	st	Z, r24
    182e:	1f c0       	rjmp	.+62     	; 0x186e <sevenseg+0x12a>
    1830:	fe 01       	movw	r30, r28
    1832:	ef 57       	subi	r30, 0x7F	; 127
    1834:	ff 4f       	sbci	r31, 0xFF	; 255
    1836:	88 ec       	ldi	r24, 0xC8	; 200
    1838:	90 e0       	ldi	r25, 0x00	; 0
    183a:	91 83       	std	Z+1, r25	; 0x01
    183c:	80 83       	st	Z, r24
    183e:	fe 01       	movw	r30, r28
    1840:	ef 57       	subi	r30, 0x7F	; 127
    1842:	ff 4f       	sbci	r31, 0xFF	; 255
    1844:	80 81       	ld	r24, Z
    1846:	91 81       	ldd	r25, Z+1	; 0x01
    1848:	01 97       	sbiw	r24, 0x01	; 1
    184a:	f1 f7       	brne	.-4      	; 0x1848 <sevenseg+0x104>
    184c:	fe 01       	movw	r30, r28
    184e:	ef 57       	subi	r30, 0x7F	; 127
    1850:	ff 4f       	sbci	r31, 0xFF	; 255
    1852:	91 83       	std	Z+1, r25	; 0x01
    1854:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1856:	de 01       	movw	r26, r28
    1858:	ad 57       	subi	r26, 0x7D	; 125
    185a:	bf 4f       	sbci	r27, 0xFF	; 255
    185c:	fe 01       	movw	r30, r28
    185e:	ed 57       	subi	r30, 0x7D	; 125
    1860:	ff 4f       	sbci	r31, 0xFF	; 255
    1862:	80 81       	ld	r24, Z
    1864:	91 81       	ldd	r25, Z+1	; 0x01
    1866:	01 97       	sbiw	r24, 0x01	; 1
    1868:	11 96       	adiw	r26, 0x01	; 1
    186a:	9c 93       	st	X, r25
    186c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    186e:	fe 01       	movw	r30, r28
    1870:	ed 57       	subi	r30, 0x7D	; 125
    1872:	ff 4f       	sbci	r31, 0xFF	; 255
    1874:	80 81       	ld	r24, Z
    1876:	91 81       	ldd	r25, Z+1	; 0x01
    1878:	00 97       	sbiw	r24, 0x00	; 0
    187a:	d1 f6       	brne	.-76     	; 0x1830 <sevenseg+0xec>
    187c:	27 c0       	rjmp	.+78     	; 0x18cc <sevenseg+0x188>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    187e:	8e 01       	movw	r16, r28
    1880:	0d 57       	subi	r16, 0x7D	; 125
    1882:	1f 4f       	sbci	r17, 0xFF	; 255
    1884:	fe 01       	movw	r30, r28
    1886:	eb 57       	subi	r30, 0x7B	; 123
    1888:	ff 4f       	sbci	r31, 0xFF	; 255
    188a:	60 81       	ld	r22, Z
    188c:	71 81       	ldd	r23, Z+1	; 0x01
    188e:	82 81       	ldd	r24, Z+2	; 0x02
    1890:	93 81       	ldd	r25, Z+3	; 0x03
    1892:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1896:	dc 01       	movw	r26, r24
    1898:	cb 01       	movw	r24, r22
    189a:	f8 01       	movw	r30, r16
    189c:	91 83       	std	Z+1, r25	; 0x01
    189e:	80 83       	st	Z, r24
    18a0:	de 01       	movw	r26, r28
    18a2:	a1 58       	subi	r26, 0x81	; 129
    18a4:	bf 4f       	sbci	r27, 0xFF	; 255
    18a6:	fe 01       	movw	r30, r28
    18a8:	ed 57       	subi	r30, 0x7D	; 125
    18aa:	ff 4f       	sbci	r31, 0xFF	; 255
    18ac:	80 81       	ld	r24, Z
    18ae:	91 81       	ldd	r25, Z+1	; 0x01
    18b0:	8d 93       	st	X+, r24
    18b2:	9c 93       	st	X, r25
    18b4:	fe 01       	movw	r30, r28
    18b6:	e1 58       	subi	r30, 0x81	; 129
    18b8:	ff 4f       	sbci	r31, 0xFF	; 255
    18ba:	80 81       	ld	r24, Z
    18bc:	91 81       	ldd	r25, Z+1	; 0x01
    18be:	01 97       	sbiw	r24, 0x01	; 1
    18c0:	f1 f7       	brne	.-4      	; 0x18be <sevenseg+0x17a>
    18c2:	fe 01       	movw	r30, r28
    18c4:	e1 58       	subi	r30, 0x81	; 129
    18c6:	ff 4f       	sbci	r31, 0xFF	; 255
    18c8:	91 83       	std	Z+1, r25	; 0x01
    18ca:	80 83       	st	Z, r24
	 _delay_ms(150);
	 PORTC=0b00000000;// number 8 left seg
    18cc:	e5 e3       	ldi	r30, 0x35	; 53
    18ce:	f0 e0       	ldi	r31, 0x00	; 0
    18d0:	10 82       	st	Z, r1
    18d2:	fe 01       	movw	r30, r28
    18d4:	e5 58       	subi	r30, 0x85	; 133
    18d6:	ff 4f       	sbci	r31, 0xFF	; 255
    18d8:	80 e0       	ldi	r24, 0x00	; 0
    18da:	90 e0       	ldi	r25, 0x00	; 0
    18dc:	a6 e1       	ldi	r26, 0x16	; 22
    18de:	b3 e4       	ldi	r27, 0x43	; 67
    18e0:	80 83       	st	Z, r24
    18e2:	91 83       	std	Z+1, r25	; 0x01
    18e4:	a2 83       	std	Z+2, r26	; 0x02
    18e6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    18e8:	8e 01       	movw	r16, r28
    18ea:	09 58       	subi	r16, 0x89	; 137
    18ec:	1f 4f       	sbci	r17, 0xFF	; 255
    18ee:	fe 01       	movw	r30, r28
    18f0:	e5 58       	subi	r30, 0x85	; 133
    18f2:	ff 4f       	sbci	r31, 0xFF	; 255
    18f4:	60 81       	ld	r22, Z
    18f6:	71 81       	ldd	r23, Z+1	; 0x01
    18f8:	82 81       	ldd	r24, Z+2	; 0x02
    18fa:	93 81       	ldd	r25, Z+3	; 0x03
    18fc:	20 e0       	ldi	r18, 0x00	; 0
    18fe:	30 e0       	ldi	r19, 0x00	; 0
    1900:	4a ef       	ldi	r20, 0xFA	; 250
    1902:	54 e4       	ldi	r21, 0x44	; 68
    1904:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1908:	dc 01       	movw	r26, r24
    190a:	cb 01       	movw	r24, r22
    190c:	f8 01       	movw	r30, r16
    190e:	80 83       	st	Z, r24
    1910:	91 83       	std	Z+1, r25	; 0x01
    1912:	a2 83       	std	Z+2, r26	; 0x02
    1914:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1916:	fe 01       	movw	r30, r28
    1918:	e9 58       	subi	r30, 0x89	; 137
    191a:	ff 4f       	sbci	r31, 0xFF	; 255
    191c:	60 81       	ld	r22, Z
    191e:	71 81       	ldd	r23, Z+1	; 0x01
    1920:	82 81       	ldd	r24, Z+2	; 0x02
    1922:	93 81       	ldd	r25, Z+3	; 0x03
    1924:	20 e0       	ldi	r18, 0x00	; 0
    1926:	30 e0       	ldi	r19, 0x00	; 0
    1928:	40 e8       	ldi	r20, 0x80	; 128
    192a:	5f e3       	ldi	r21, 0x3F	; 63
    192c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1930:	88 23       	and	r24, r24
    1932:	44 f4       	brge	.+16     	; 0x1944 <sevenseg+0x200>
		__ticks = 1;
    1934:	fe 01       	movw	r30, r28
    1936:	eb 58       	subi	r30, 0x8B	; 139
    1938:	ff 4f       	sbci	r31, 0xFF	; 255
    193a:	81 e0       	ldi	r24, 0x01	; 1
    193c:	90 e0       	ldi	r25, 0x00	; 0
    193e:	91 83       	std	Z+1, r25	; 0x01
    1940:	80 83       	st	Z, r24
    1942:	64 c0       	rjmp	.+200    	; 0x1a0c <sevenseg+0x2c8>
	else if (__tmp > 65535)
    1944:	fe 01       	movw	r30, r28
    1946:	e9 58       	subi	r30, 0x89	; 137
    1948:	ff 4f       	sbci	r31, 0xFF	; 255
    194a:	60 81       	ld	r22, Z
    194c:	71 81       	ldd	r23, Z+1	; 0x01
    194e:	82 81       	ldd	r24, Z+2	; 0x02
    1950:	93 81       	ldd	r25, Z+3	; 0x03
    1952:	20 e0       	ldi	r18, 0x00	; 0
    1954:	3f ef       	ldi	r19, 0xFF	; 255
    1956:	4f e7       	ldi	r20, 0x7F	; 127
    1958:	57 e4       	ldi	r21, 0x47	; 71
    195a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    195e:	18 16       	cp	r1, r24
    1960:	0c f0       	brlt	.+2      	; 0x1964 <sevenseg+0x220>
    1962:	43 c0       	rjmp	.+134    	; 0x19ea <sevenseg+0x2a6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1964:	fe 01       	movw	r30, r28
    1966:	e5 58       	subi	r30, 0x85	; 133
    1968:	ff 4f       	sbci	r31, 0xFF	; 255
    196a:	60 81       	ld	r22, Z
    196c:	71 81       	ldd	r23, Z+1	; 0x01
    196e:	82 81       	ldd	r24, Z+2	; 0x02
    1970:	93 81       	ldd	r25, Z+3	; 0x03
    1972:	20 e0       	ldi	r18, 0x00	; 0
    1974:	30 e0       	ldi	r19, 0x00	; 0
    1976:	40 e2       	ldi	r20, 0x20	; 32
    1978:	51 e4       	ldi	r21, 0x41	; 65
    197a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    197e:	dc 01       	movw	r26, r24
    1980:	cb 01       	movw	r24, r22
    1982:	8e 01       	movw	r16, r28
    1984:	0b 58       	subi	r16, 0x8B	; 139
    1986:	1f 4f       	sbci	r17, 0xFF	; 255
    1988:	bc 01       	movw	r22, r24
    198a:	cd 01       	movw	r24, r26
    198c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1990:	dc 01       	movw	r26, r24
    1992:	cb 01       	movw	r24, r22
    1994:	f8 01       	movw	r30, r16
    1996:	91 83       	std	Z+1, r25	; 0x01
    1998:	80 83       	st	Z, r24
    199a:	1f c0       	rjmp	.+62     	; 0x19da <sevenseg+0x296>
    199c:	fe 01       	movw	r30, r28
    199e:	ed 58       	subi	r30, 0x8D	; 141
    19a0:	ff 4f       	sbci	r31, 0xFF	; 255
    19a2:	88 ec       	ldi	r24, 0xC8	; 200
    19a4:	90 e0       	ldi	r25, 0x00	; 0
    19a6:	91 83       	std	Z+1, r25	; 0x01
    19a8:	80 83       	st	Z, r24
    19aa:	fe 01       	movw	r30, r28
    19ac:	ed 58       	subi	r30, 0x8D	; 141
    19ae:	ff 4f       	sbci	r31, 0xFF	; 255
    19b0:	80 81       	ld	r24, Z
    19b2:	91 81       	ldd	r25, Z+1	; 0x01
    19b4:	01 97       	sbiw	r24, 0x01	; 1
    19b6:	f1 f7       	brne	.-4      	; 0x19b4 <sevenseg+0x270>
    19b8:	fe 01       	movw	r30, r28
    19ba:	ed 58       	subi	r30, 0x8D	; 141
    19bc:	ff 4f       	sbci	r31, 0xFF	; 255
    19be:	91 83       	std	Z+1, r25	; 0x01
    19c0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    19c2:	de 01       	movw	r26, r28
    19c4:	ab 58       	subi	r26, 0x8B	; 139
    19c6:	bf 4f       	sbci	r27, 0xFF	; 255
    19c8:	fe 01       	movw	r30, r28
    19ca:	eb 58       	subi	r30, 0x8B	; 139
    19cc:	ff 4f       	sbci	r31, 0xFF	; 255
    19ce:	80 81       	ld	r24, Z
    19d0:	91 81       	ldd	r25, Z+1	; 0x01
    19d2:	01 97       	sbiw	r24, 0x01	; 1
    19d4:	11 96       	adiw	r26, 0x01	; 1
    19d6:	9c 93       	st	X, r25
    19d8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    19da:	fe 01       	movw	r30, r28
    19dc:	eb 58       	subi	r30, 0x8B	; 139
    19de:	ff 4f       	sbci	r31, 0xFF	; 255
    19e0:	80 81       	ld	r24, Z
    19e2:	91 81       	ldd	r25, Z+1	; 0x01
    19e4:	00 97       	sbiw	r24, 0x00	; 0
    19e6:	d1 f6       	brne	.-76     	; 0x199c <sevenseg+0x258>
    19e8:	27 c0       	rjmp	.+78     	; 0x1a38 <sevenseg+0x2f4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    19ea:	8e 01       	movw	r16, r28
    19ec:	0b 58       	subi	r16, 0x8B	; 139
    19ee:	1f 4f       	sbci	r17, 0xFF	; 255
    19f0:	fe 01       	movw	r30, r28
    19f2:	e9 58       	subi	r30, 0x89	; 137
    19f4:	ff 4f       	sbci	r31, 0xFF	; 255
    19f6:	60 81       	ld	r22, Z
    19f8:	71 81       	ldd	r23, Z+1	; 0x01
    19fa:	82 81       	ldd	r24, Z+2	; 0x02
    19fc:	93 81       	ldd	r25, Z+3	; 0x03
    19fe:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a02:	dc 01       	movw	r26, r24
    1a04:	cb 01       	movw	r24, r22
    1a06:	f8 01       	movw	r30, r16
    1a08:	91 83       	std	Z+1, r25	; 0x01
    1a0a:	80 83       	st	Z, r24
    1a0c:	de 01       	movw	r26, r28
    1a0e:	af 58       	subi	r26, 0x8F	; 143
    1a10:	bf 4f       	sbci	r27, 0xFF	; 255
    1a12:	fe 01       	movw	r30, r28
    1a14:	eb 58       	subi	r30, 0x8B	; 139
    1a16:	ff 4f       	sbci	r31, 0xFF	; 255
    1a18:	80 81       	ld	r24, Z
    1a1a:	91 81       	ldd	r25, Z+1	; 0x01
    1a1c:	8d 93       	st	X+, r24
    1a1e:	9c 93       	st	X, r25
    1a20:	fe 01       	movw	r30, r28
    1a22:	ef 58       	subi	r30, 0x8F	; 143
    1a24:	ff 4f       	sbci	r31, 0xFF	; 255
    1a26:	80 81       	ld	r24, Z
    1a28:	91 81       	ldd	r25, Z+1	; 0x01
    1a2a:	01 97       	sbiw	r24, 0x01	; 1
    1a2c:	f1 f7       	brne	.-4      	; 0x1a2a <sevenseg+0x2e6>
    1a2e:	fe 01       	movw	r30, r28
    1a30:	ef 58       	subi	r30, 0x8F	; 143
    1a32:	ff 4f       	sbci	r31, 0xFF	; 255
    1a34:	91 83       	std	Z+1, r25	; 0x01
    1a36:	80 83       	st	Z, r24
	 _delay_ms(150);
	 PORTC=0b01111000;// number 7 left seg
    1a38:	e5 e3       	ldi	r30, 0x35	; 53
    1a3a:	f0 e0       	ldi	r31, 0x00	; 0
    1a3c:	88 e7       	ldi	r24, 0x78	; 120
    1a3e:	80 83       	st	Z, r24
    1a40:	fe 01       	movw	r30, r28
    1a42:	e3 59       	subi	r30, 0x93	; 147
    1a44:	ff 4f       	sbci	r31, 0xFF	; 255
    1a46:	80 e0       	ldi	r24, 0x00	; 0
    1a48:	90 e0       	ldi	r25, 0x00	; 0
    1a4a:	a6 e1       	ldi	r26, 0x16	; 22
    1a4c:	b3 e4       	ldi	r27, 0x43	; 67
    1a4e:	80 83       	st	Z, r24
    1a50:	91 83       	std	Z+1, r25	; 0x01
    1a52:	a2 83       	std	Z+2, r26	; 0x02
    1a54:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a56:	8e 01       	movw	r16, r28
    1a58:	07 59       	subi	r16, 0x97	; 151
    1a5a:	1f 4f       	sbci	r17, 0xFF	; 255
    1a5c:	fe 01       	movw	r30, r28
    1a5e:	e3 59       	subi	r30, 0x93	; 147
    1a60:	ff 4f       	sbci	r31, 0xFF	; 255
    1a62:	60 81       	ld	r22, Z
    1a64:	71 81       	ldd	r23, Z+1	; 0x01
    1a66:	82 81       	ldd	r24, Z+2	; 0x02
    1a68:	93 81       	ldd	r25, Z+3	; 0x03
    1a6a:	20 e0       	ldi	r18, 0x00	; 0
    1a6c:	30 e0       	ldi	r19, 0x00	; 0
    1a6e:	4a ef       	ldi	r20, 0xFA	; 250
    1a70:	54 e4       	ldi	r21, 0x44	; 68
    1a72:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1a76:	dc 01       	movw	r26, r24
    1a78:	cb 01       	movw	r24, r22
    1a7a:	f8 01       	movw	r30, r16
    1a7c:	80 83       	st	Z, r24
    1a7e:	91 83       	std	Z+1, r25	; 0x01
    1a80:	a2 83       	std	Z+2, r26	; 0x02
    1a82:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1a84:	fe 01       	movw	r30, r28
    1a86:	e7 59       	subi	r30, 0x97	; 151
    1a88:	ff 4f       	sbci	r31, 0xFF	; 255
    1a8a:	60 81       	ld	r22, Z
    1a8c:	71 81       	ldd	r23, Z+1	; 0x01
    1a8e:	82 81       	ldd	r24, Z+2	; 0x02
    1a90:	93 81       	ldd	r25, Z+3	; 0x03
    1a92:	20 e0       	ldi	r18, 0x00	; 0
    1a94:	30 e0       	ldi	r19, 0x00	; 0
    1a96:	40 e8       	ldi	r20, 0x80	; 128
    1a98:	5f e3       	ldi	r21, 0x3F	; 63
    1a9a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1a9e:	88 23       	and	r24, r24
    1aa0:	44 f4       	brge	.+16     	; 0x1ab2 <sevenseg+0x36e>
		__ticks = 1;
    1aa2:	fe 01       	movw	r30, r28
    1aa4:	e9 59       	subi	r30, 0x99	; 153
    1aa6:	ff 4f       	sbci	r31, 0xFF	; 255
    1aa8:	81 e0       	ldi	r24, 0x01	; 1
    1aaa:	90 e0       	ldi	r25, 0x00	; 0
    1aac:	91 83       	std	Z+1, r25	; 0x01
    1aae:	80 83       	st	Z, r24
    1ab0:	64 c0       	rjmp	.+200    	; 0x1b7a <sevenseg+0x436>
	else if (__tmp > 65535)
    1ab2:	fe 01       	movw	r30, r28
    1ab4:	e7 59       	subi	r30, 0x97	; 151
    1ab6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ab8:	60 81       	ld	r22, Z
    1aba:	71 81       	ldd	r23, Z+1	; 0x01
    1abc:	82 81       	ldd	r24, Z+2	; 0x02
    1abe:	93 81       	ldd	r25, Z+3	; 0x03
    1ac0:	20 e0       	ldi	r18, 0x00	; 0
    1ac2:	3f ef       	ldi	r19, 0xFF	; 255
    1ac4:	4f e7       	ldi	r20, 0x7F	; 127
    1ac6:	57 e4       	ldi	r21, 0x47	; 71
    1ac8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1acc:	18 16       	cp	r1, r24
    1ace:	0c f0       	brlt	.+2      	; 0x1ad2 <sevenseg+0x38e>
    1ad0:	43 c0       	rjmp	.+134    	; 0x1b58 <sevenseg+0x414>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ad2:	fe 01       	movw	r30, r28
    1ad4:	e3 59       	subi	r30, 0x93	; 147
    1ad6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ad8:	60 81       	ld	r22, Z
    1ada:	71 81       	ldd	r23, Z+1	; 0x01
    1adc:	82 81       	ldd	r24, Z+2	; 0x02
    1ade:	93 81       	ldd	r25, Z+3	; 0x03
    1ae0:	20 e0       	ldi	r18, 0x00	; 0
    1ae2:	30 e0       	ldi	r19, 0x00	; 0
    1ae4:	40 e2       	ldi	r20, 0x20	; 32
    1ae6:	51 e4       	ldi	r21, 0x41	; 65
    1ae8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1aec:	dc 01       	movw	r26, r24
    1aee:	cb 01       	movw	r24, r22
    1af0:	8e 01       	movw	r16, r28
    1af2:	09 59       	subi	r16, 0x99	; 153
    1af4:	1f 4f       	sbci	r17, 0xFF	; 255
    1af6:	bc 01       	movw	r22, r24
    1af8:	cd 01       	movw	r24, r26
    1afa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1afe:	dc 01       	movw	r26, r24
    1b00:	cb 01       	movw	r24, r22
    1b02:	f8 01       	movw	r30, r16
    1b04:	91 83       	std	Z+1, r25	; 0x01
    1b06:	80 83       	st	Z, r24
    1b08:	1f c0       	rjmp	.+62     	; 0x1b48 <sevenseg+0x404>
    1b0a:	fe 01       	movw	r30, r28
    1b0c:	eb 59       	subi	r30, 0x9B	; 155
    1b0e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b10:	88 ec       	ldi	r24, 0xC8	; 200
    1b12:	90 e0       	ldi	r25, 0x00	; 0
    1b14:	91 83       	std	Z+1, r25	; 0x01
    1b16:	80 83       	st	Z, r24
    1b18:	fe 01       	movw	r30, r28
    1b1a:	eb 59       	subi	r30, 0x9B	; 155
    1b1c:	ff 4f       	sbci	r31, 0xFF	; 255
    1b1e:	80 81       	ld	r24, Z
    1b20:	91 81       	ldd	r25, Z+1	; 0x01
    1b22:	01 97       	sbiw	r24, 0x01	; 1
    1b24:	f1 f7       	brne	.-4      	; 0x1b22 <sevenseg+0x3de>
    1b26:	fe 01       	movw	r30, r28
    1b28:	eb 59       	subi	r30, 0x9B	; 155
    1b2a:	ff 4f       	sbci	r31, 0xFF	; 255
    1b2c:	91 83       	std	Z+1, r25	; 0x01
    1b2e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b30:	de 01       	movw	r26, r28
    1b32:	a9 59       	subi	r26, 0x99	; 153
    1b34:	bf 4f       	sbci	r27, 0xFF	; 255
    1b36:	fe 01       	movw	r30, r28
    1b38:	e9 59       	subi	r30, 0x99	; 153
    1b3a:	ff 4f       	sbci	r31, 0xFF	; 255
    1b3c:	80 81       	ld	r24, Z
    1b3e:	91 81       	ldd	r25, Z+1	; 0x01
    1b40:	01 97       	sbiw	r24, 0x01	; 1
    1b42:	11 96       	adiw	r26, 0x01	; 1
    1b44:	9c 93       	st	X, r25
    1b46:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b48:	fe 01       	movw	r30, r28
    1b4a:	e9 59       	subi	r30, 0x99	; 153
    1b4c:	ff 4f       	sbci	r31, 0xFF	; 255
    1b4e:	80 81       	ld	r24, Z
    1b50:	91 81       	ldd	r25, Z+1	; 0x01
    1b52:	00 97       	sbiw	r24, 0x00	; 0
    1b54:	d1 f6       	brne	.-76     	; 0x1b0a <sevenseg+0x3c6>
    1b56:	27 c0       	rjmp	.+78     	; 0x1ba6 <sevenseg+0x462>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b58:	8e 01       	movw	r16, r28
    1b5a:	09 59       	subi	r16, 0x99	; 153
    1b5c:	1f 4f       	sbci	r17, 0xFF	; 255
    1b5e:	fe 01       	movw	r30, r28
    1b60:	e7 59       	subi	r30, 0x97	; 151
    1b62:	ff 4f       	sbci	r31, 0xFF	; 255
    1b64:	60 81       	ld	r22, Z
    1b66:	71 81       	ldd	r23, Z+1	; 0x01
    1b68:	82 81       	ldd	r24, Z+2	; 0x02
    1b6a:	93 81       	ldd	r25, Z+3	; 0x03
    1b6c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b70:	dc 01       	movw	r26, r24
    1b72:	cb 01       	movw	r24, r22
    1b74:	f8 01       	movw	r30, r16
    1b76:	91 83       	std	Z+1, r25	; 0x01
    1b78:	80 83       	st	Z, r24
    1b7a:	de 01       	movw	r26, r28
    1b7c:	ad 59       	subi	r26, 0x9D	; 157
    1b7e:	bf 4f       	sbci	r27, 0xFF	; 255
    1b80:	fe 01       	movw	r30, r28
    1b82:	e9 59       	subi	r30, 0x99	; 153
    1b84:	ff 4f       	sbci	r31, 0xFF	; 255
    1b86:	80 81       	ld	r24, Z
    1b88:	91 81       	ldd	r25, Z+1	; 0x01
    1b8a:	8d 93       	st	X+, r24
    1b8c:	9c 93       	st	X, r25
    1b8e:	fe 01       	movw	r30, r28
    1b90:	ed 59       	subi	r30, 0x9D	; 157
    1b92:	ff 4f       	sbci	r31, 0xFF	; 255
    1b94:	80 81       	ld	r24, Z
    1b96:	91 81       	ldd	r25, Z+1	; 0x01
    1b98:	01 97       	sbiw	r24, 0x01	; 1
    1b9a:	f1 f7       	brne	.-4      	; 0x1b98 <sevenseg+0x454>
    1b9c:	fe 01       	movw	r30, r28
    1b9e:	ed 59       	subi	r30, 0x9D	; 157
    1ba0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ba2:	91 83       	std	Z+1, r25	; 0x01
    1ba4:	80 83       	st	Z, r24
	 _delay_ms(150);
	 PORTC=0b00000010;// number 6 left seg
    1ba6:	e5 e3       	ldi	r30, 0x35	; 53
    1ba8:	f0 e0       	ldi	r31, 0x00	; 0
    1baa:	82 e0       	ldi	r24, 0x02	; 2
    1bac:	80 83       	st	Z, r24
    1bae:	fe 01       	movw	r30, r28
    1bb0:	e1 5a       	subi	r30, 0xA1	; 161
    1bb2:	ff 4f       	sbci	r31, 0xFF	; 255
    1bb4:	80 e0       	ldi	r24, 0x00	; 0
    1bb6:	90 e0       	ldi	r25, 0x00	; 0
    1bb8:	a6 e1       	ldi	r26, 0x16	; 22
    1bba:	b3 e4       	ldi	r27, 0x43	; 67
    1bbc:	80 83       	st	Z, r24
    1bbe:	91 83       	std	Z+1, r25	; 0x01
    1bc0:	a2 83       	std	Z+2, r26	; 0x02
    1bc2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1bc4:	8e 01       	movw	r16, r28
    1bc6:	05 5a       	subi	r16, 0xA5	; 165
    1bc8:	1f 4f       	sbci	r17, 0xFF	; 255
    1bca:	fe 01       	movw	r30, r28
    1bcc:	e1 5a       	subi	r30, 0xA1	; 161
    1bce:	ff 4f       	sbci	r31, 0xFF	; 255
    1bd0:	60 81       	ld	r22, Z
    1bd2:	71 81       	ldd	r23, Z+1	; 0x01
    1bd4:	82 81       	ldd	r24, Z+2	; 0x02
    1bd6:	93 81       	ldd	r25, Z+3	; 0x03
    1bd8:	20 e0       	ldi	r18, 0x00	; 0
    1bda:	30 e0       	ldi	r19, 0x00	; 0
    1bdc:	4a ef       	ldi	r20, 0xFA	; 250
    1bde:	54 e4       	ldi	r21, 0x44	; 68
    1be0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1be4:	dc 01       	movw	r26, r24
    1be6:	cb 01       	movw	r24, r22
    1be8:	f8 01       	movw	r30, r16
    1bea:	80 83       	st	Z, r24
    1bec:	91 83       	std	Z+1, r25	; 0x01
    1bee:	a2 83       	std	Z+2, r26	; 0x02
    1bf0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1bf2:	fe 01       	movw	r30, r28
    1bf4:	e5 5a       	subi	r30, 0xA5	; 165
    1bf6:	ff 4f       	sbci	r31, 0xFF	; 255
    1bf8:	60 81       	ld	r22, Z
    1bfa:	71 81       	ldd	r23, Z+1	; 0x01
    1bfc:	82 81       	ldd	r24, Z+2	; 0x02
    1bfe:	93 81       	ldd	r25, Z+3	; 0x03
    1c00:	20 e0       	ldi	r18, 0x00	; 0
    1c02:	30 e0       	ldi	r19, 0x00	; 0
    1c04:	40 e8       	ldi	r20, 0x80	; 128
    1c06:	5f e3       	ldi	r21, 0x3F	; 63
    1c08:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1c0c:	88 23       	and	r24, r24
    1c0e:	44 f4       	brge	.+16     	; 0x1c20 <sevenseg+0x4dc>
		__ticks = 1;
    1c10:	fe 01       	movw	r30, r28
    1c12:	e7 5a       	subi	r30, 0xA7	; 167
    1c14:	ff 4f       	sbci	r31, 0xFF	; 255
    1c16:	81 e0       	ldi	r24, 0x01	; 1
    1c18:	90 e0       	ldi	r25, 0x00	; 0
    1c1a:	91 83       	std	Z+1, r25	; 0x01
    1c1c:	80 83       	st	Z, r24
    1c1e:	64 c0       	rjmp	.+200    	; 0x1ce8 <sevenseg+0x5a4>
	else if (__tmp > 65535)
    1c20:	fe 01       	movw	r30, r28
    1c22:	e5 5a       	subi	r30, 0xA5	; 165
    1c24:	ff 4f       	sbci	r31, 0xFF	; 255
    1c26:	60 81       	ld	r22, Z
    1c28:	71 81       	ldd	r23, Z+1	; 0x01
    1c2a:	82 81       	ldd	r24, Z+2	; 0x02
    1c2c:	93 81       	ldd	r25, Z+3	; 0x03
    1c2e:	20 e0       	ldi	r18, 0x00	; 0
    1c30:	3f ef       	ldi	r19, 0xFF	; 255
    1c32:	4f e7       	ldi	r20, 0x7F	; 127
    1c34:	57 e4       	ldi	r21, 0x47	; 71
    1c36:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1c3a:	18 16       	cp	r1, r24
    1c3c:	0c f0       	brlt	.+2      	; 0x1c40 <sevenseg+0x4fc>
    1c3e:	43 c0       	rjmp	.+134    	; 0x1cc6 <sevenseg+0x582>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c40:	fe 01       	movw	r30, r28
    1c42:	e1 5a       	subi	r30, 0xA1	; 161
    1c44:	ff 4f       	sbci	r31, 0xFF	; 255
    1c46:	60 81       	ld	r22, Z
    1c48:	71 81       	ldd	r23, Z+1	; 0x01
    1c4a:	82 81       	ldd	r24, Z+2	; 0x02
    1c4c:	93 81       	ldd	r25, Z+3	; 0x03
    1c4e:	20 e0       	ldi	r18, 0x00	; 0
    1c50:	30 e0       	ldi	r19, 0x00	; 0
    1c52:	40 e2       	ldi	r20, 0x20	; 32
    1c54:	51 e4       	ldi	r21, 0x41	; 65
    1c56:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c5a:	dc 01       	movw	r26, r24
    1c5c:	cb 01       	movw	r24, r22
    1c5e:	8e 01       	movw	r16, r28
    1c60:	07 5a       	subi	r16, 0xA7	; 167
    1c62:	1f 4f       	sbci	r17, 0xFF	; 255
    1c64:	bc 01       	movw	r22, r24
    1c66:	cd 01       	movw	r24, r26
    1c68:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c6c:	dc 01       	movw	r26, r24
    1c6e:	cb 01       	movw	r24, r22
    1c70:	f8 01       	movw	r30, r16
    1c72:	91 83       	std	Z+1, r25	; 0x01
    1c74:	80 83       	st	Z, r24
    1c76:	1f c0       	rjmp	.+62     	; 0x1cb6 <sevenseg+0x572>
    1c78:	fe 01       	movw	r30, r28
    1c7a:	e9 5a       	subi	r30, 0xA9	; 169
    1c7c:	ff 4f       	sbci	r31, 0xFF	; 255
    1c7e:	88 ec       	ldi	r24, 0xC8	; 200
    1c80:	90 e0       	ldi	r25, 0x00	; 0
    1c82:	91 83       	std	Z+1, r25	; 0x01
    1c84:	80 83       	st	Z, r24
    1c86:	fe 01       	movw	r30, r28
    1c88:	e9 5a       	subi	r30, 0xA9	; 169
    1c8a:	ff 4f       	sbci	r31, 0xFF	; 255
    1c8c:	80 81       	ld	r24, Z
    1c8e:	91 81       	ldd	r25, Z+1	; 0x01
    1c90:	01 97       	sbiw	r24, 0x01	; 1
    1c92:	f1 f7       	brne	.-4      	; 0x1c90 <sevenseg+0x54c>
    1c94:	fe 01       	movw	r30, r28
    1c96:	e9 5a       	subi	r30, 0xA9	; 169
    1c98:	ff 4f       	sbci	r31, 0xFF	; 255
    1c9a:	91 83       	std	Z+1, r25	; 0x01
    1c9c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c9e:	de 01       	movw	r26, r28
    1ca0:	a7 5a       	subi	r26, 0xA7	; 167
    1ca2:	bf 4f       	sbci	r27, 0xFF	; 255
    1ca4:	fe 01       	movw	r30, r28
    1ca6:	e7 5a       	subi	r30, 0xA7	; 167
    1ca8:	ff 4f       	sbci	r31, 0xFF	; 255
    1caa:	80 81       	ld	r24, Z
    1cac:	91 81       	ldd	r25, Z+1	; 0x01
    1cae:	01 97       	sbiw	r24, 0x01	; 1
    1cb0:	11 96       	adiw	r26, 0x01	; 1
    1cb2:	9c 93       	st	X, r25
    1cb4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1cb6:	fe 01       	movw	r30, r28
    1cb8:	e7 5a       	subi	r30, 0xA7	; 167
    1cba:	ff 4f       	sbci	r31, 0xFF	; 255
    1cbc:	80 81       	ld	r24, Z
    1cbe:	91 81       	ldd	r25, Z+1	; 0x01
    1cc0:	00 97       	sbiw	r24, 0x00	; 0
    1cc2:	d1 f6       	brne	.-76     	; 0x1c78 <sevenseg+0x534>
    1cc4:	27 c0       	rjmp	.+78     	; 0x1d14 <sevenseg+0x5d0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1cc6:	8e 01       	movw	r16, r28
    1cc8:	07 5a       	subi	r16, 0xA7	; 167
    1cca:	1f 4f       	sbci	r17, 0xFF	; 255
    1ccc:	fe 01       	movw	r30, r28
    1cce:	e5 5a       	subi	r30, 0xA5	; 165
    1cd0:	ff 4f       	sbci	r31, 0xFF	; 255
    1cd2:	60 81       	ld	r22, Z
    1cd4:	71 81       	ldd	r23, Z+1	; 0x01
    1cd6:	82 81       	ldd	r24, Z+2	; 0x02
    1cd8:	93 81       	ldd	r25, Z+3	; 0x03
    1cda:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1cde:	dc 01       	movw	r26, r24
    1ce0:	cb 01       	movw	r24, r22
    1ce2:	f8 01       	movw	r30, r16
    1ce4:	91 83       	std	Z+1, r25	; 0x01
    1ce6:	80 83       	st	Z, r24
    1ce8:	de 01       	movw	r26, r28
    1cea:	ab 5a       	subi	r26, 0xAB	; 171
    1cec:	bf 4f       	sbci	r27, 0xFF	; 255
    1cee:	fe 01       	movw	r30, r28
    1cf0:	e7 5a       	subi	r30, 0xA7	; 167
    1cf2:	ff 4f       	sbci	r31, 0xFF	; 255
    1cf4:	80 81       	ld	r24, Z
    1cf6:	91 81       	ldd	r25, Z+1	; 0x01
    1cf8:	8d 93       	st	X+, r24
    1cfa:	9c 93       	st	X, r25
    1cfc:	fe 01       	movw	r30, r28
    1cfe:	eb 5a       	subi	r30, 0xAB	; 171
    1d00:	ff 4f       	sbci	r31, 0xFF	; 255
    1d02:	80 81       	ld	r24, Z
    1d04:	91 81       	ldd	r25, Z+1	; 0x01
    1d06:	01 97       	sbiw	r24, 0x01	; 1
    1d08:	f1 f7       	brne	.-4      	; 0x1d06 <sevenseg+0x5c2>
    1d0a:	fe 01       	movw	r30, r28
    1d0c:	eb 5a       	subi	r30, 0xAB	; 171
    1d0e:	ff 4f       	sbci	r31, 0xFF	; 255
    1d10:	91 83       	std	Z+1, r25	; 0x01
    1d12:	80 83       	st	Z, r24
	 _delay_ms(150);
	 PORTC=0b00010010;// number 5 left seg
    1d14:	e5 e3       	ldi	r30, 0x35	; 53
    1d16:	f0 e0       	ldi	r31, 0x00	; 0
    1d18:	82 e1       	ldi	r24, 0x12	; 18
    1d1a:	80 83       	st	Z, r24
    1d1c:	fe 01       	movw	r30, r28
    1d1e:	ef 5a       	subi	r30, 0xAF	; 175
    1d20:	ff 4f       	sbci	r31, 0xFF	; 255
    1d22:	80 e0       	ldi	r24, 0x00	; 0
    1d24:	90 e0       	ldi	r25, 0x00	; 0
    1d26:	a6 e1       	ldi	r26, 0x16	; 22
    1d28:	b3 e4       	ldi	r27, 0x43	; 67
    1d2a:	80 83       	st	Z, r24
    1d2c:	91 83       	std	Z+1, r25	; 0x01
    1d2e:	a2 83       	std	Z+2, r26	; 0x02
    1d30:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d32:	8e 01       	movw	r16, r28
    1d34:	03 5b       	subi	r16, 0xB3	; 179
    1d36:	1f 4f       	sbci	r17, 0xFF	; 255
    1d38:	fe 01       	movw	r30, r28
    1d3a:	ef 5a       	subi	r30, 0xAF	; 175
    1d3c:	ff 4f       	sbci	r31, 0xFF	; 255
    1d3e:	60 81       	ld	r22, Z
    1d40:	71 81       	ldd	r23, Z+1	; 0x01
    1d42:	82 81       	ldd	r24, Z+2	; 0x02
    1d44:	93 81       	ldd	r25, Z+3	; 0x03
    1d46:	20 e0       	ldi	r18, 0x00	; 0
    1d48:	30 e0       	ldi	r19, 0x00	; 0
    1d4a:	4a ef       	ldi	r20, 0xFA	; 250
    1d4c:	54 e4       	ldi	r21, 0x44	; 68
    1d4e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d52:	dc 01       	movw	r26, r24
    1d54:	cb 01       	movw	r24, r22
    1d56:	f8 01       	movw	r30, r16
    1d58:	80 83       	st	Z, r24
    1d5a:	91 83       	std	Z+1, r25	; 0x01
    1d5c:	a2 83       	std	Z+2, r26	; 0x02
    1d5e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1d60:	fe 01       	movw	r30, r28
    1d62:	e3 5b       	subi	r30, 0xB3	; 179
    1d64:	ff 4f       	sbci	r31, 0xFF	; 255
    1d66:	60 81       	ld	r22, Z
    1d68:	71 81       	ldd	r23, Z+1	; 0x01
    1d6a:	82 81       	ldd	r24, Z+2	; 0x02
    1d6c:	93 81       	ldd	r25, Z+3	; 0x03
    1d6e:	20 e0       	ldi	r18, 0x00	; 0
    1d70:	30 e0       	ldi	r19, 0x00	; 0
    1d72:	40 e8       	ldi	r20, 0x80	; 128
    1d74:	5f e3       	ldi	r21, 0x3F	; 63
    1d76:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1d7a:	88 23       	and	r24, r24
    1d7c:	44 f4       	brge	.+16     	; 0x1d8e <sevenseg+0x64a>
		__ticks = 1;
    1d7e:	fe 01       	movw	r30, r28
    1d80:	e5 5b       	subi	r30, 0xB5	; 181
    1d82:	ff 4f       	sbci	r31, 0xFF	; 255
    1d84:	81 e0       	ldi	r24, 0x01	; 1
    1d86:	90 e0       	ldi	r25, 0x00	; 0
    1d88:	91 83       	std	Z+1, r25	; 0x01
    1d8a:	80 83       	st	Z, r24
    1d8c:	64 c0       	rjmp	.+200    	; 0x1e56 <sevenseg+0x712>
	else if (__tmp > 65535)
    1d8e:	fe 01       	movw	r30, r28
    1d90:	e3 5b       	subi	r30, 0xB3	; 179
    1d92:	ff 4f       	sbci	r31, 0xFF	; 255
    1d94:	60 81       	ld	r22, Z
    1d96:	71 81       	ldd	r23, Z+1	; 0x01
    1d98:	82 81       	ldd	r24, Z+2	; 0x02
    1d9a:	93 81       	ldd	r25, Z+3	; 0x03
    1d9c:	20 e0       	ldi	r18, 0x00	; 0
    1d9e:	3f ef       	ldi	r19, 0xFF	; 255
    1da0:	4f e7       	ldi	r20, 0x7F	; 127
    1da2:	57 e4       	ldi	r21, 0x47	; 71
    1da4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1da8:	18 16       	cp	r1, r24
    1daa:	0c f0       	brlt	.+2      	; 0x1dae <sevenseg+0x66a>
    1dac:	43 c0       	rjmp	.+134    	; 0x1e34 <sevenseg+0x6f0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1dae:	fe 01       	movw	r30, r28
    1db0:	ef 5a       	subi	r30, 0xAF	; 175
    1db2:	ff 4f       	sbci	r31, 0xFF	; 255
    1db4:	60 81       	ld	r22, Z
    1db6:	71 81       	ldd	r23, Z+1	; 0x01
    1db8:	82 81       	ldd	r24, Z+2	; 0x02
    1dba:	93 81       	ldd	r25, Z+3	; 0x03
    1dbc:	20 e0       	ldi	r18, 0x00	; 0
    1dbe:	30 e0       	ldi	r19, 0x00	; 0
    1dc0:	40 e2       	ldi	r20, 0x20	; 32
    1dc2:	51 e4       	ldi	r21, 0x41	; 65
    1dc4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1dc8:	dc 01       	movw	r26, r24
    1dca:	cb 01       	movw	r24, r22
    1dcc:	8e 01       	movw	r16, r28
    1dce:	05 5b       	subi	r16, 0xB5	; 181
    1dd0:	1f 4f       	sbci	r17, 0xFF	; 255
    1dd2:	bc 01       	movw	r22, r24
    1dd4:	cd 01       	movw	r24, r26
    1dd6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1dda:	dc 01       	movw	r26, r24
    1ddc:	cb 01       	movw	r24, r22
    1dde:	f8 01       	movw	r30, r16
    1de0:	91 83       	std	Z+1, r25	; 0x01
    1de2:	80 83       	st	Z, r24
    1de4:	1f c0       	rjmp	.+62     	; 0x1e24 <sevenseg+0x6e0>
    1de6:	fe 01       	movw	r30, r28
    1de8:	e7 5b       	subi	r30, 0xB7	; 183
    1dea:	ff 4f       	sbci	r31, 0xFF	; 255
    1dec:	88 ec       	ldi	r24, 0xC8	; 200
    1dee:	90 e0       	ldi	r25, 0x00	; 0
    1df0:	91 83       	std	Z+1, r25	; 0x01
    1df2:	80 83       	st	Z, r24
    1df4:	fe 01       	movw	r30, r28
    1df6:	e7 5b       	subi	r30, 0xB7	; 183
    1df8:	ff 4f       	sbci	r31, 0xFF	; 255
    1dfa:	80 81       	ld	r24, Z
    1dfc:	91 81       	ldd	r25, Z+1	; 0x01
    1dfe:	01 97       	sbiw	r24, 0x01	; 1
    1e00:	f1 f7       	brne	.-4      	; 0x1dfe <sevenseg+0x6ba>
    1e02:	fe 01       	movw	r30, r28
    1e04:	e7 5b       	subi	r30, 0xB7	; 183
    1e06:	ff 4f       	sbci	r31, 0xFF	; 255
    1e08:	91 83       	std	Z+1, r25	; 0x01
    1e0a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e0c:	de 01       	movw	r26, r28
    1e0e:	a5 5b       	subi	r26, 0xB5	; 181
    1e10:	bf 4f       	sbci	r27, 0xFF	; 255
    1e12:	fe 01       	movw	r30, r28
    1e14:	e5 5b       	subi	r30, 0xB5	; 181
    1e16:	ff 4f       	sbci	r31, 0xFF	; 255
    1e18:	80 81       	ld	r24, Z
    1e1a:	91 81       	ldd	r25, Z+1	; 0x01
    1e1c:	01 97       	sbiw	r24, 0x01	; 1
    1e1e:	11 96       	adiw	r26, 0x01	; 1
    1e20:	9c 93       	st	X, r25
    1e22:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e24:	fe 01       	movw	r30, r28
    1e26:	e5 5b       	subi	r30, 0xB5	; 181
    1e28:	ff 4f       	sbci	r31, 0xFF	; 255
    1e2a:	80 81       	ld	r24, Z
    1e2c:	91 81       	ldd	r25, Z+1	; 0x01
    1e2e:	00 97       	sbiw	r24, 0x00	; 0
    1e30:	d1 f6       	brne	.-76     	; 0x1de6 <sevenseg+0x6a2>
    1e32:	27 c0       	rjmp	.+78     	; 0x1e82 <sevenseg+0x73e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e34:	8e 01       	movw	r16, r28
    1e36:	05 5b       	subi	r16, 0xB5	; 181
    1e38:	1f 4f       	sbci	r17, 0xFF	; 255
    1e3a:	fe 01       	movw	r30, r28
    1e3c:	e3 5b       	subi	r30, 0xB3	; 179
    1e3e:	ff 4f       	sbci	r31, 0xFF	; 255
    1e40:	60 81       	ld	r22, Z
    1e42:	71 81       	ldd	r23, Z+1	; 0x01
    1e44:	82 81       	ldd	r24, Z+2	; 0x02
    1e46:	93 81       	ldd	r25, Z+3	; 0x03
    1e48:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e4c:	dc 01       	movw	r26, r24
    1e4e:	cb 01       	movw	r24, r22
    1e50:	f8 01       	movw	r30, r16
    1e52:	91 83       	std	Z+1, r25	; 0x01
    1e54:	80 83       	st	Z, r24
    1e56:	de 01       	movw	r26, r28
    1e58:	a9 5b       	subi	r26, 0xB9	; 185
    1e5a:	bf 4f       	sbci	r27, 0xFF	; 255
    1e5c:	fe 01       	movw	r30, r28
    1e5e:	e5 5b       	subi	r30, 0xB5	; 181
    1e60:	ff 4f       	sbci	r31, 0xFF	; 255
    1e62:	80 81       	ld	r24, Z
    1e64:	91 81       	ldd	r25, Z+1	; 0x01
    1e66:	8d 93       	st	X+, r24
    1e68:	9c 93       	st	X, r25
    1e6a:	fe 01       	movw	r30, r28
    1e6c:	e9 5b       	subi	r30, 0xB9	; 185
    1e6e:	ff 4f       	sbci	r31, 0xFF	; 255
    1e70:	80 81       	ld	r24, Z
    1e72:	91 81       	ldd	r25, Z+1	; 0x01
    1e74:	01 97       	sbiw	r24, 0x01	; 1
    1e76:	f1 f7       	brne	.-4      	; 0x1e74 <sevenseg+0x730>
    1e78:	fe 01       	movw	r30, r28
    1e7a:	e9 5b       	subi	r30, 0xB9	; 185
    1e7c:	ff 4f       	sbci	r31, 0xFF	; 255
    1e7e:	91 83       	std	Z+1, r25	; 0x01
    1e80:	80 83       	st	Z, r24
	 _delay_ms(150);
	 PORTC=0b00011001;// number 4 left seg
    1e82:	e5 e3       	ldi	r30, 0x35	; 53
    1e84:	f0 e0       	ldi	r31, 0x00	; 0
    1e86:	89 e1       	ldi	r24, 0x19	; 25
    1e88:	80 83       	st	Z, r24
    1e8a:	fe 01       	movw	r30, r28
    1e8c:	ed 5b       	subi	r30, 0xBD	; 189
    1e8e:	ff 4f       	sbci	r31, 0xFF	; 255
    1e90:	80 e0       	ldi	r24, 0x00	; 0
    1e92:	90 e0       	ldi	r25, 0x00	; 0
    1e94:	a6 e1       	ldi	r26, 0x16	; 22
    1e96:	b3 e4       	ldi	r27, 0x43	; 67
    1e98:	80 83       	st	Z, r24
    1e9a:	91 83       	std	Z+1, r25	; 0x01
    1e9c:	a2 83       	std	Z+2, r26	; 0x02
    1e9e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1ea0:	8e 01       	movw	r16, r28
    1ea2:	01 5c       	subi	r16, 0xC1	; 193
    1ea4:	1f 4f       	sbci	r17, 0xFF	; 255
    1ea6:	fe 01       	movw	r30, r28
    1ea8:	ed 5b       	subi	r30, 0xBD	; 189
    1eaa:	ff 4f       	sbci	r31, 0xFF	; 255
    1eac:	60 81       	ld	r22, Z
    1eae:	71 81       	ldd	r23, Z+1	; 0x01
    1eb0:	82 81       	ldd	r24, Z+2	; 0x02
    1eb2:	93 81       	ldd	r25, Z+3	; 0x03
    1eb4:	20 e0       	ldi	r18, 0x00	; 0
    1eb6:	30 e0       	ldi	r19, 0x00	; 0
    1eb8:	4a ef       	ldi	r20, 0xFA	; 250
    1eba:	54 e4       	ldi	r21, 0x44	; 68
    1ebc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ec0:	dc 01       	movw	r26, r24
    1ec2:	cb 01       	movw	r24, r22
    1ec4:	f8 01       	movw	r30, r16
    1ec6:	80 83       	st	Z, r24
    1ec8:	91 83       	std	Z+1, r25	; 0x01
    1eca:	a2 83       	std	Z+2, r26	; 0x02
    1ecc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1ece:	fe 01       	movw	r30, r28
    1ed0:	ff 96       	adiw	r30, 0x3f	; 63
    1ed2:	60 81       	ld	r22, Z
    1ed4:	71 81       	ldd	r23, Z+1	; 0x01
    1ed6:	82 81       	ldd	r24, Z+2	; 0x02
    1ed8:	93 81       	ldd	r25, Z+3	; 0x03
    1eda:	20 e0       	ldi	r18, 0x00	; 0
    1edc:	30 e0       	ldi	r19, 0x00	; 0
    1ede:	40 e8       	ldi	r20, 0x80	; 128
    1ee0:	5f e3       	ldi	r21, 0x3F	; 63
    1ee2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1ee6:	88 23       	and	r24, r24
    1ee8:	2c f4       	brge	.+10     	; 0x1ef4 <sevenseg+0x7b0>
		__ticks = 1;
    1eea:	81 e0       	ldi	r24, 0x01	; 1
    1eec:	90 e0       	ldi	r25, 0x00	; 0
    1eee:	9e af       	std	Y+62, r25	; 0x3e
    1ef0:	8d af       	std	Y+61, r24	; 0x3d
    1ef2:	46 c0       	rjmp	.+140    	; 0x1f80 <sevenseg+0x83c>
	else if (__tmp > 65535)
    1ef4:	fe 01       	movw	r30, r28
    1ef6:	ff 96       	adiw	r30, 0x3f	; 63
    1ef8:	60 81       	ld	r22, Z
    1efa:	71 81       	ldd	r23, Z+1	; 0x01
    1efc:	82 81       	ldd	r24, Z+2	; 0x02
    1efe:	93 81       	ldd	r25, Z+3	; 0x03
    1f00:	20 e0       	ldi	r18, 0x00	; 0
    1f02:	3f ef       	ldi	r19, 0xFF	; 255
    1f04:	4f e7       	ldi	r20, 0x7F	; 127
    1f06:	57 e4       	ldi	r21, 0x47	; 71
    1f08:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1f0c:	18 16       	cp	r1, r24
    1f0e:	64 f5       	brge	.+88     	; 0x1f68 <sevenseg+0x824>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f10:	fe 01       	movw	r30, r28
    1f12:	ed 5b       	subi	r30, 0xBD	; 189
    1f14:	ff 4f       	sbci	r31, 0xFF	; 255
    1f16:	60 81       	ld	r22, Z
    1f18:	71 81       	ldd	r23, Z+1	; 0x01
    1f1a:	82 81       	ldd	r24, Z+2	; 0x02
    1f1c:	93 81       	ldd	r25, Z+3	; 0x03
    1f1e:	20 e0       	ldi	r18, 0x00	; 0
    1f20:	30 e0       	ldi	r19, 0x00	; 0
    1f22:	40 e2       	ldi	r20, 0x20	; 32
    1f24:	51 e4       	ldi	r21, 0x41	; 65
    1f26:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f2a:	dc 01       	movw	r26, r24
    1f2c:	cb 01       	movw	r24, r22
    1f2e:	bc 01       	movw	r22, r24
    1f30:	cd 01       	movw	r24, r26
    1f32:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f36:	dc 01       	movw	r26, r24
    1f38:	cb 01       	movw	r24, r22
    1f3a:	9e af       	std	Y+62, r25	; 0x3e
    1f3c:	8d af       	std	Y+61, r24	; 0x3d
    1f3e:	0f c0       	rjmp	.+30     	; 0x1f5e <sevenseg+0x81a>
    1f40:	88 ec       	ldi	r24, 0xC8	; 200
    1f42:	90 e0       	ldi	r25, 0x00	; 0
    1f44:	9c af       	std	Y+60, r25	; 0x3c
    1f46:	8b af       	std	Y+59, r24	; 0x3b
    1f48:	8b ad       	ldd	r24, Y+59	; 0x3b
    1f4a:	9c ad       	ldd	r25, Y+60	; 0x3c
    1f4c:	01 97       	sbiw	r24, 0x01	; 1
    1f4e:	f1 f7       	brne	.-4      	; 0x1f4c <sevenseg+0x808>
    1f50:	9c af       	std	Y+60, r25	; 0x3c
    1f52:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f54:	8d ad       	ldd	r24, Y+61	; 0x3d
    1f56:	9e ad       	ldd	r25, Y+62	; 0x3e
    1f58:	01 97       	sbiw	r24, 0x01	; 1
    1f5a:	9e af       	std	Y+62, r25	; 0x3e
    1f5c:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f5e:	8d ad       	ldd	r24, Y+61	; 0x3d
    1f60:	9e ad       	ldd	r25, Y+62	; 0x3e
    1f62:	00 97       	sbiw	r24, 0x00	; 0
    1f64:	69 f7       	brne	.-38     	; 0x1f40 <sevenseg+0x7fc>
    1f66:	16 c0       	rjmp	.+44     	; 0x1f94 <sevenseg+0x850>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f68:	fe 01       	movw	r30, r28
    1f6a:	ff 96       	adiw	r30, 0x3f	; 63
    1f6c:	60 81       	ld	r22, Z
    1f6e:	71 81       	ldd	r23, Z+1	; 0x01
    1f70:	82 81       	ldd	r24, Z+2	; 0x02
    1f72:	93 81       	ldd	r25, Z+3	; 0x03
    1f74:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f78:	dc 01       	movw	r26, r24
    1f7a:	cb 01       	movw	r24, r22
    1f7c:	9e af       	std	Y+62, r25	; 0x3e
    1f7e:	8d af       	std	Y+61, r24	; 0x3d
    1f80:	8d ad       	ldd	r24, Y+61	; 0x3d
    1f82:	9e ad       	ldd	r25, Y+62	; 0x3e
    1f84:	9a af       	std	Y+58, r25	; 0x3a
    1f86:	89 af       	std	Y+57, r24	; 0x39
    1f88:	89 ad       	ldd	r24, Y+57	; 0x39
    1f8a:	9a ad       	ldd	r25, Y+58	; 0x3a
    1f8c:	01 97       	sbiw	r24, 0x01	; 1
    1f8e:	f1 f7       	brne	.-4      	; 0x1f8c <sevenseg+0x848>
    1f90:	9a af       	std	Y+58, r25	; 0x3a
    1f92:	89 af       	std	Y+57, r24	; 0x39
	 _delay_ms(150);
	 PORTC=0b00110000;// number 3 left seg
    1f94:	e5 e3       	ldi	r30, 0x35	; 53
    1f96:	f0 e0       	ldi	r31, 0x00	; 0
    1f98:	80 e3       	ldi	r24, 0x30	; 48
    1f9a:	80 83       	st	Z, r24
    1f9c:	80 e0       	ldi	r24, 0x00	; 0
    1f9e:	90 e0       	ldi	r25, 0x00	; 0
    1fa0:	a6 e1       	ldi	r26, 0x16	; 22
    1fa2:	b3 e4       	ldi	r27, 0x43	; 67
    1fa4:	8d ab       	std	Y+53, r24	; 0x35
    1fa6:	9e ab       	std	Y+54, r25	; 0x36
    1fa8:	af ab       	std	Y+55, r26	; 0x37
    1faa:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1fac:	6d a9       	ldd	r22, Y+53	; 0x35
    1fae:	7e a9       	ldd	r23, Y+54	; 0x36
    1fb0:	8f a9       	ldd	r24, Y+55	; 0x37
    1fb2:	98 ad       	ldd	r25, Y+56	; 0x38
    1fb4:	20 e0       	ldi	r18, 0x00	; 0
    1fb6:	30 e0       	ldi	r19, 0x00	; 0
    1fb8:	4a ef       	ldi	r20, 0xFA	; 250
    1fba:	54 e4       	ldi	r21, 0x44	; 68
    1fbc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1fc0:	dc 01       	movw	r26, r24
    1fc2:	cb 01       	movw	r24, r22
    1fc4:	89 ab       	std	Y+49, r24	; 0x31
    1fc6:	9a ab       	std	Y+50, r25	; 0x32
    1fc8:	ab ab       	std	Y+51, r26	; 0x33
    1fca:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1fcc:	69 a9       	ldd	r22, Y+49	; 0x31
    1fce:	7a a9       	ldd	r23, Y+50	; 0x32
    1fd0:	8b a9       	ldd	r24, Y+51	; 0x33
    1fd2:	9c a9       	ldd	r25, Y+52	; 0x34
    1fd4:	20 e0       	ldi	r18, 0x00	; 0
    1fd6:	30 e0       	ldi	r19, 0x00	; 0
    1fd8:	40 e8       	ldi	r20, 0x80	; 128
    1fda:	5f e3       	ldi	r21, 0x3F	; 63
    1fdc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1fe0:	88 23       	and	r24, r24
    1fe2:	2c f4       	brge	.+10     	; 0x1fee <sevenseg+0x8aa>
		__ticks = 1;
    1fe4:	81 e0       	ldi	r24, 0x01	; 1
    1fe6:	90 e0       	ldi	r25, 0x00	; 0
    1fe8:	98 ab       	std	Y+48, r25	; 0x30
    1fea:	8f a7       	std	Y+47, r24	; 0x2f
    1fec:	3f c0       	rjmp	.+126    	; 0x206c <sevenseg+0x928>
	else if (__tmp > 65535)
    1fee:	69 a9       	ldd	r22, Y+49	; 0x31
    1ff0:	7a a9       	ldd	r23, Y+50	; 0x32
    1ff2:	8b a9       	ldd	r24, Y+51	; 0x33
    1ff4:	9c a9       	ldd	r25, Y+52	; 0x34
    1ff6:	20 e0       	ldi	r18, 0x00	; 0
    1ff8:	3f ef       	ldi	r19, 0xFF	; 255
    1ffa:	4f e7       	ldi	r20, 0x7F	; 127
    1ffc:	57 e4       	ldi	r21, 0x47	; 71
    1ffe:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2002:	18 16       	cp	r1, r24
    2004:	4c f5       	brge	.+82     	; 0x2058 <sevenseg+0x914>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2006:	6d a9       	ldd	r22, Y+53	; 0x35
    2008:	7e a9       	ldd	r23, Y+54	; 0x36
    200a:	8f a9       	ldd	r24, Y+55	; 0x37
    200c:	98 ad       	ldd	r25, Y+56	; 0x38
    200e:	20 e0       	ldi	r18, 0x00	; 0
    2010:	30 e0       	ldi	r19, 0x00	; 0
    2012:	40 e2       	ldi	r20, 0x20	; 32
    2014:	51 e4       	ldi	r21, 0x41	; 65
    2016:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    201a:	dc 01       	movw	r26, r24
    201c:	cb 01       	movw	r24, r22
    201e:	bc 01       	movw	r22, r24
    2020:	cd 01       	movw	r24, r26
    2022:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2026:	dc 01       	movw	r26, r24
    2028:	cb 01       	movw	r24, r22
    202a:	98 ab       	std	Y+48, r25	; 0x30
    202c:	8f a7       	std	Y+47, r24	; 0x2f
    202e:	0f c0       	rjmp	.+30     	; 0x204e <sevenseg+0x90a>
    2030:	88 ec       	ldi	r24, 0xC8	; 200
    2032:	90 e0       	ldi	r25, 0x00	; 0
    2034:	9e a7       	std	Y+46, r25	; 0x2e
    2036:	8d a7       	std	Y+45, r24	; 0x2d
    2038:	8d a5       	ldd	r24, Y+45	; 0x2d
    203a:	9e a5       	ldd	r25, Y+46	; 0x2e
    203c:	01 97       	sbiw	r24, 0x01	; 1
    203e:	f1 f7       	brne	.-4      	; 0x203c <sevenseg+0x8f8>
    2040:	9e a7       	std	Y+46, r25	; 0x2e
    2042:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2044:	8f a5       	ldd	r24, Y+47	; 0x2f
    2046:	98 a9       	ldd	r25, Y+48	; 0x30
    2048:	01 97       	sbiw	r24, 0x01	; 1
    204a:	98 ab       	std	Y+48, r25	; 0x30
    204c:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    204e:	8f a5       	ldd	r24, Y+47	; 0x2f
    2050:	98 a9       	ldd	r25, Y+48	; 0x30
    2052:	00 97       	sbiw	r24, 0x00	; 0
    2054:	69 f7       	brne	.-38     	; 0x2030 <sevenseg+0x8ec>
    2056:	14 c0       	rjmp	.+40     	; 0x2080 <sevenseg+0x93c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2058:	69 a9       	ldd	r22, Y+49	; 0x31
    205a:	7a a9       	ldd	r23, Y+50	; 0x32
    205c:	8b a9       	ldd	r24, Y+51	; 0x33
    205e:	9c a9       	ldd	r25, Y+52	; 0x34
    2060:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2064:	dc 01       	movw	r26, r24
    2066:	cb 01       	movw	r24, r22
    2068:	98 ab       	std	Y+48, r25	; 0x30
    206a:	8f a7       	std	Y+47, r24	; 0x2f
    206c:	8f a5       	ldd	r24, Y+47	; 0x2f
    206e:	98 a9       	ldd	r25, Y+48	; 0x30
    2070:	9c a7       	std	Y+44, r25	; 0x2c
    2072:	8b a7       	std	Y+43, r24	; 0x2b
    2074:	8b a5       	ldd	r24, Y+43	; 0x2b
    2076:	9c a5       	ldd	r25, Y+44	; 0x2c
    2078:	01 97       	sbiw	r24, 0x01	; 1
    207a:	f1 f7       	brne	.-4      	; 0x2078 <sevenseg+0x934>
    207c:	9c a7       	std	Y+44, r25	; 0x2c
    207e:	8b a7       	std	Y+43, r24	; 0x2b
	 _delay_ms(150);
	 PORTC=0b00100100;// number 2 left seg
    2080:	e5 e3       	ldi	r30, 0x35	; 53
    2082:	f0 e0       	ldi	r31, 0x00	; 0
    2084:	84 e2       	ldi	r24, 0x24	; 36
    2086:	80 83       	st	Z, r24
    2088:	80 e0       	ldi	r24, 0x00	; 0
    208a:	90 e0       	ldi	r25, 0x00	; 0
    208c:	a6 e1       	ldi	r26, 0x16	; 22
    208e:	b3 e4       	ldi	r27, 0x43	; 67
    2090:	8f a3       	std	Y+39, r24	; 0x27
    2092:	98 a7       	std	Y+40, r25	; 0x28
    2094:	a9 a7       	std	Y+41, r26	; 0x29
    2096:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2098:	6f a1       	ldd	r22, Y+39	; 0x27
    209a:	78 a5       	ldd	r23, Y+40	; 0x28
    209c:	89 a5       	ldd	r24, Y+41	; 0x29
    209e:	9a a5       	ldd	r25, Y+42	; 0x2a
    20a0:	20 e0       	ldi	r18, 0x00	; 0
    20a2:	30 e0       	ldi	r19, 0x00	; 0
    20a4:	4a ef       	ldi	r20, 0xFA	; 250
    20a6:	54 e4       	ldi	r21, 0x44	; 68
    20a8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    20ac:	dc 01       	movw	r26, r24
    20ae:	cb 01       	movw	r24, r22
    20b0:	8b a3       	std	Y+35, r24	; 0x23
    20b2:	9c a3       	std	Y+36, r25	; 0x24
    20b4:	ad a3       	std	Y+37, r26	; 0x25
    20b6:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    20b8:	6b a1       	ldd	r22, Y+35	; 0x23
    20ba:	7c a1       	ldd	r23, Y+36	; 0x24
    20bc:	8d a1       	ldd	r24, Y+37	; 0x25
    20be:	9e a1       	ldd	r25, Y+38	; 0x26
    20c0:	20 e0       	ldi	r18, 0x00	; 0
    20c2:	30 e0       	ldi	r19, 0x00	; 0
    20c4:	40 e8       	ldi	r20, 0x80	; 128
    20c6:	5f e3       	ldi	r21, 0x3F	; 63
    20c8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    20cc:	88 23       	and	r24, r24
    20ce:	2c f4       	brge	.+10     	; 0x20da <sevenseg+0x996>
		__ticks = 1;
    20d0:	81 e0       	ldi	r24, 0x01	; 1
    20d2:	90 e0       	ldi	r25, 0x00	; 0
    20d4:	9a a3       	std	Y+34, r25	; 0x22
    20d6:	89 a3       	std	Y+33, r24	; 0x21
    20d8:	3f c0       	rjmp	.+126    	; 0x2158 <sevenseg+0xa14>
	else if (__tmp > 65535)
    20da:	6b a1       	ldd	r22, Y+35	; 0x23
    20dc:	7c a1       	ldd	r23, Y+36	; 0x24
    20de:	8d a1       	ldd	r24, Y+37	; 0x25
    20e0:	9e a1       	ldd	r25, Y+38	; 0x26
    20e2:	20 e0       	ldi	r18, 0x00	; 0
    20e4:	3f ef       	ldi	r19, 0xFF	; 255
    20e6:	4f e7       	ldi	r20, 0x7F	; 127
    20e8:	57 e4       	ldi	r21, 0x47	; 71
    20ea:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    20ee:	18 16       	cp	r1, r24
    20f0:	4c f5       	brge	.+82     	; 0x2144 <sevenseg+0xa00>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    20f2:	6f a1       	ldd	r22, Y+39	; 0x27
    20f4:	78 a5       	ldd	r23, Y+40	; 0x28
    20f6:	89 a5       	ldd	r24, Y+41	; 0x29
    20f8:	9a a5       	ldd	r25, Y+42	; 0x2a
    20fa:	20 e0       	ldi	r18, 0x00	; 0
    20fc:	30 e0       	ldi	r19, 0x00	; 0
    20fe:	40 e2       	ldi	r20, 0x20	; 32
    2100:	51 e4       	ldi	r21, 0x41	; 65
    2102:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2106:	dc 01       	movw	r26, r24
    2108:	cb 01       	movw	r24, r22
    210a:	bc 01       	movw	r22, r24
    210c:	cd 01       	movw	r24, r26
    210e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2112:	dc 01       	movw	r26, r24
    2114:	cb 01       	movw	r24, r22
    2116:	9a a3       	std	Y+34, r25	; 0x22
    2118:	89 a3       	std	Y+33, r24	; 0x21
    211a:	0f c0       	rjmp	.+30     	; 0x213a <sevenseg+0x9f6>
    211c:	88 ec       	ldi	r24, 0xC8	; 200
    211e:	90 e0       	ldi	r25, 0x00	; 0
    2120:	98 a3       	std	Y+32, r25	; 0x20
    2122:	8f 8f       	std	Y+31, r24	; 0x1f
    2124:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2126:	98 a1       	ldd	r25, Y+32	; 0x20
    2128:	01 97       	sbiw	r24, 0x01	; 1
    212a:	f1 f7       	brne	.-4      	; 0x2128 <sevenseg+0x9e4>
    212c:	98 a3       	std	Y+32, r25	; 0x20
    212e:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2130:	89 a1       	ldd	r24, Y+33	; 0x21
    2132:	9a a1       	ldd	r25, Y+34	; 0x22
    2134:	01 97       	sbiw	r24, 0x01	; 1
    2136:	9a a3       	std	Y+34, r25	; 0x22
    2138:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    213a:	89 a1       	ldd	r24, Y+33	; 0x21
    213c:	9a a1       	ldd	r25, Y+34	; 0x22
    213e:	00 97       	sbiw	r24, 0x00	; 0
    2140:	69 f7       	brne	.-38     	; 0x211c <sevenseg+0x9d8>
    2142:	14 c0       	rjmp	.+40     	; 0x216c <sevenseg+0xa28>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2144:	6b a1       	ldd	r22, Y+35	; 0x23
    2146:	7c a1       	ldd	r23, Y+36	; 0x24
    2148:	8d a1       	ldd	r24, Y+37	; 0x25
    214a:	9e a1       	ldd	r25, Y+38	; 0x26
    214c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2150:	dc 01       	movw	r26, r24
    2152:	cb 01       	movw	r24, r22
    2154:	9a a3       	std	Y+34, r25	; 0x22
    2156:	89 a3       	std	Y+33, r24	; 0x21
    2158:	89 a1       	ldd	r24, Y+33	; 0x21
    215a:	9a a1       	ldd	r25, Y+34	; 0x22
    215c:	9e 8f       	std	Y+30, r25	; 0x1e
    215e:	8d 8f       	std	Y+29, r24	; 0x1d
    2160:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2162:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2164:	01 97       	sbiw	r24, 0x01	; 1
    2166:	f1 f7       	brne	.-4      	; 0x2164 <sevenseg+0xa20>
    2168:	9e 8f       	std	Y+30, r25	; 0x1e
    216a:	8d 8f       	std	Y+29, r24	; 0x1d
	 _delay_ms(150);
	 PORTC=0b01111001;// number 1 left seg
    216c:	e5 e3       	ldi	r30, 0x35	; 53
    216e:	f0 e0       	ldi	r31, 0x00	; 0
    2170:	89 e7       	ldi	r24, 0x79	; 121
    2172:	80 83       	st	Z, r24
    2174:	80 e0       	ldi	r24, 0x00	; 0
    2176:	90 e0       	ldi	r25, 0x00	; 0
    2178:	a6 e1       	ldi	r26, 0x16	; 22
    217a:	b3 e4       	ldi	r27, 0x43	; 67
    217c:	89 8f       	std	Y+25, r24	; 0x19
    217e:	9a 8f       	std	Y+26, r25	; 0x1a
    2180:	ab 8f       	std	Y+27, r26	; 0x1b
    2182:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2184:	69 8d       	ldd	r22, Y+25	; 0x19
    2186:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2188:	8b 8d       	ldd	r24, Y+27	; 0x1b
    218a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    218c:	20 e0       	ldi	r18, 0x00	; 0
    218e:	30 e0       	ldi	r19, 0x00	; 0
    2190:	4a ef       	ldi	r20, 0xFA	; 250
    2192:	54 e4       	ldi	r21, 0x44	; 68
    2194:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2198:	dc 01       	movw	r26, r24
    219a:	cb 01       	movw	r24, r22
    219c:	8d 8b       	std	Y+21, r24	; 0x15
    219e:	9e 8b       	std	Y+22, r25	; 0x16
    21a0:	af 8b       	std	Y+23, r26	; 0x17
    21a2:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    21a4:	6d 89       	ldd	r22, Y+21	; 0x15
    21a6:	7e 89       	ldd	r23, Y+22	; 0x16
    21a8:	8f 89       	ldd	r24, Y+23	; 0x17
    21aa:	98 8d       	ldd	r25, Y+24	; 0x18
    21ac:	20 e0       	ldi	r18, 0x00	; 0
    21ae:	30 e0       	ldi	r19, 0x00	; 0
    21b0:	40 e8       	ldi	r20, 0x80	; 128
    21b2:	5f e3       	ldi	r21, 0x3F	; 63
    21b4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    21b8:	88 23       	and	r24, r24
    21ba:	2c f4       	brge	.+10     	; 0x21c6 <sevenseg+0xa82>
		__ticks = 1;
    21bc:	81 e0       	ldi	r24, 0x01	; 1
    21be:	90 e0       	ldi	r25, 0x00	; 0
    21c0:	9c 8b       	std	Y+20, r25	; 0x14
    21c2:	8b 8b       	std	Y+19, r24	; 0x13
    21c4:	3f c0       	rjmp	.+126    	; 0x2244 <sevenseg+0xb00>
	else if (__tmp > 65535)
    21c6:	6d 89       	ldd	r22, Y+21	; 0x15
    21c8:	7e 89       	ldd	r23, Y+22	; 0x16
    21ca:	8f 89       	ldd	r24, Y+23	; 0x17
    21cc:	98 8d       	ldd	r25, Y+24	; 0x18
    21ce:	20 e0       	ldi	r18, 0x00	; 0
    21d0:	3f ef       	ldi	r19, 0xFF	; 255
    21d2:	4f e7       	ldi	r20, 0x7F	; 127
    21d4:	57 e4       	ldi	r21, 0x47	; 71
    21d6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    21da:	18 16       	cp	r1, r24
    21dc:	4c f5       	brge	.+82     	; 0x2230 <sevenseg+0xaec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    21de:	69 8d       	ldd	r22, Y+25	; 0x19
    21e0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    21e2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    21e4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    21e6:	20 e0       	ldi	r18, 0x00	; 0
    21e8:	30 e0       	ldi	r19, 0x00	; 0
    21ea:	40 e2       	ldi	r20, 0x20	; 32
    21ec:	51 e4       	ldi	r21, 0x41	; 65
    21ee:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    21f2:	dc 01       	movw	r26, r24
    21f4:	cb 01       	movw	r24, r22
    21f6:	bc 01       	movw	r22, r24
    21f8:	cd 01       	movw	r24, r26
    21fa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    21fe:	dc 01       	movw	r26, r24
    2200:	cb 01       	movw	r24, r22
    2202:	9c 8b       	std	Y+20, r25	; 0x14
    2204:	8b 8b       	std	Y+19, r24	; 0x13
    2206:	0f c0       	rjmp	.+30     	; 0x2226 <sevenseg+0xae2>
    2208:	88 ec       	ldi	r24, 0xC8	; 200
    220a:	90 e0       	ldi	r25, 0x00	; 0
    220c:	9a 8b       	std	Y+18, r25	; 0x12
    220e:	89 8b       	std	Y+17, r24	; 0x11
    2210:	89 89       	ldd	r24, Y+17	; 0x11
    2212:	9a 89       	ldd	r25, Y+18	; 0x12
    2214:	01 97       	sbiw	r24, 0x01	; 1
    2216:	f1 f7       	brne	.-4      	; 0x2214 <sevenseg+0xad0>
    2218:	9a 8b       	std	Y+18, r25	; 0x12
    221a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    221c:	8b 89       	ldd	r24, Y+19	; 0x13
    221e:	9c 89       	ldd	r25, Y+20	; 0x14
    2220:	01 97       	sbiw	r24, 0x01	; 1
    2222:	9c 8b       	std	Y+20, r25	; 0x14
    2224:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2226:	8b 89       	ldd	r24, Y+19	; 0x13
    2228:	9c 89       	ldd	r25, Y+20	; 0x14
    222a:	00 97       	sbiw	r24, 0x00	; 0
    222c:	69 f7       	brne	.-38     	; 0x2208 <sevenseg+0xac4>
    222e:	14 c0       	rjmp	.+40     	; 0x2258 <sevenseg+0xb14>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2230:	6d 89       	ldd	r22, Y+21	; 0x15
    2232:	7e 89       	ldd	r23, Y+22	; 0x16
    2234:	8f 89       	ldd	r24, Y+23	; 0x17
    2236:	98 8d       	ldd	r25, Y+24	; 0x18
    2238:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    223c:	dc 01       	movw	r26, r24
    223e:	cb 01       	movw	r24, r22
    2240:	9c 8b       	std	Y+20, r25	; 0x14
    2242:	8b 8b       	std	Y+19, r24	; 0x13
    2244:	8b 89       	ldd	r24, Y+19	; 0x13
    2246:	9c 89       	ldd	r25, Y+20	; 0x14
    2248:	98 8b       	std	Y+16, r25	; 0x10
    224a:	8f 87       	std	Y+15, r24	; 0x0f
    224c:	8f 85       	ldd	r24, Y+15	; 0x0f
    224e:	98 89       	ldd	r25, Y+16	; 0x10
    2250:	01 97       	sbiw	r24, 0x01	; 1
    2252:	f1 f7       	brne	.-4      	; 0x2250 <sevenseg+0xb0c>
    2254:	98 8b       	std	Y+16, r25	; 0x10
    2256:	8f 87       	std	Y+15, r24	; 0x0f
	 _delay_ms(150);
	 PORTC=0b01000000;// number 0 left seg
    2258:	e5 e3       	ldi	r30, 0x35	; 53
    225a:	f0 e0       	ldi	r31, 0x00	; 0
    225c:	80 e4       	ldi	r24, 0x40	; 64
    225e:	80 83       	st	Z, r24
    2260:	80 e0       	ldi	r24, 0x00	; 0
    2262:	90 e0       	ldi	r25, 0x00	; 0
    2264:	a6 e1       	ldi	r26, 0x16	; 22
    2266:	b3 e4       	ldi	r27, 0x43	; 67
    2268:	8b 87       	std	Y+11, r24	; 0x0b
    226a:	9c 87       	std	Y+12, r25	; 0x0c
    226c:	ad 87       	std	Y+13, r26	; 0x0d
    226e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2270:	6b 85       	ldd	r22, Y+11	; 0x0b
    2272:	7c 85       	ldd	r23, Y+12	; 0x0c
    2274:	8d 85       	ldd	r24, Y+13	; 0x0d
    2276:	9e 85       	ldd	r25, Y+14	; 0x0e
    2278:	20 e0       	ldi	r18, 0x00	; 0
    227a:	30 e0       	ldi	r19, 0x00	; 0
    227c:	4a ef       	ldi	r20, 0xFA	; 250
    227e:	54 e4       	ldi	r21, 0x44	; 68
    2280:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2284:	dc 01       	movw	r26, r24
    2286:	cb 01       	movw	r24, r22
    2288:	8f 83       	std	Y+7, r24	; 0x07
    228a:	98 87       	std	Y+8, r25	; 0x08
    228c:	a9 87       	std	Y+9, r26	; 0x09
    228e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2290:	6f 81       	ldd	r22, Y+7	; 0x07
    2292:	78 85       	ldd	r23, Y+8	; 0x08
    2294:	89 85       	ldd	r24, Y+9	; 0x09
    2296:	9a 85       	ldd	r25, Y+10	; 0x0a
    2298:	20 e0       	ldi	r18, 0x00	; 0
    229a:	30 e0       	ldi	r19, 0x00	; 0
    229c:	40 e8       	ldi	r20, 0x80	; 128
    229e:	5f e3       	ldi	r21, 0x3F	; 63
    22a0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    22a4:	88 23       	and	r24, r24
    22a6:	2c f4       	brge	.+10     	; 0x22b2 <sevenseg+0xb6e>
		__ticks = 1;
    22a8:	81 e0       	ldi	r24, 0x01	; 1
    22aa:	90 e0       	ldi	r25, 0x00	; 0
    22ac:	9e 83       	std	Y+6, r25	; 0x06
    22ae:	8d 83       	std	Y+5, r24	; 0x05
    22b0:	3f c0       	rjmp	.+126    	; 0x2330 <sevenseg+0xbec>
	else if (__tmp > 65535)
    22b2:	6f 81       	ldd	r22, Y+7	; 0x07
    22b4:	78 85       	ldd	r23, Y+8	; 0x08
    22b6:	89 85       	ldd	r24, Y+9	; 0x09
    22b8:	9a 85       	ldd	r25, Y+10	; 0x0a
    22ba:	20 e0       	ldi	r18, 0x00	; 0
    22bc:	3f ef       	ldi	r19, 0xFF	; 255
    22be:	4f e7       	ldi	r20, 0x7F	; 127
    22c0:	57 e4       	ldi	r21, 0x47	; 71
    22c2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    22c6:	18 16       	cp	r1, r24
    22c8:	4c f5       	brge	.+82     	; 0x231c <sevenseg+0xbd8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    22ca:	6b 85       	ldd	r22, Y+11	; 0x0b
    22cc:	7c 85       	ldd	r23, Y+12	; 0x0c
    22ce:	8d 85       	ldd	r24, Y+13	; 0x0d
    22d0:	9e 85       	ldd	r25, Y+14	; 0x0e
    22d2:	20 e0       	ldi	r18, 0x00	; 0
    22d4:	30 e0       	ldi	r19, 0x00	; 0
    22d6:	40 e2       	ldi	r20, 0x20	; 32
    22d8:	51 e4       	ldi	r21, 0x41	; 65
    22da:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    22de:	dc 01       	movw	r26, r24
    22e0:	cb 01       	movw	r24, r22
    22e2:	bc 01       	movw	r22, r24
    22e4:	cd 01       	movw	r24, r26
    22e6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    22ea:	dc 01       	movw	r26, r24
    22ec:	cb 01       	movw	r24, r22
    22ee:	9e 83       	std	Y+6, r25	; 0x06
    22f0:	8d 83       	std	Y+5, r24	; 0x05
    22f2:	0f c0       	rjmp	.+30     	; 0x2312 <sevenseg+0xbce>
    22f4:	88 ec       	ldi	r24, 0xC8	; 200
    22f6:	90 e0       	ldi	r25, 0x00	; 0
    22f8:	9c 83       	std	Y+4, r25	; 0x04
    22fa:	8b 83       	std	Y+3, r24	; 0x03
    22fc:	8b 81       	ldd	r24, Y+3	; 0x03
    22fe:	9c 81       	ldd	r25, Y+4	; 0x04
    2300:	01 97       	sbiw	r24, 0x01	; 1
    2302:	f1 f7       	brne	.-4      	; 0x2300 <sevenseg+0xbbc>
    2304:	9c 83       	std	Y+4, r25	; 0x04
    2306:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2308:	8d 81       	ldd	r24, Y+5	; 0x05
    230a:	9e 81       	ldd	r25, Y+6	; 0x06
    230c:	01 97       	sbiw	r24, 0x01	; 1
    230e:	9e 83       	std	Y+6, r25	; 0x06
    2310:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2312:	8d 81       	ldd	r24, Y+5	; 0x05
    2314:	9e 81       	ldd	r25, Y+6	; 0x06
    2316:	00 97       	sbiw	r24, 0x00	; 0
    2318:	69 f7       	brne	.-38     	; 0x22f4 <sevenseg+0xbb0>
    231a:	14 c0       	rjmp	.+40     	; 0x2344 <sevenseg+0xc00>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    231c:	6f 81       	ldd	r22, Y+7	; 0x07
    231e:	78 85       	ldd	r23, Y+8	; 0x08
    2320:	89 85       	ldd	r24, Y+9	; 0x09
    2322:	9a 85       	ldd	r25, Y+10	; 0x0a
    2324:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2328:	dc 01       	movw	r26, r24
    232a:	cb 01       	movw	r24, r22
    232c:	9e 83       	std	Y+6, r25	; 0x06
    232e:	8d 83       	std	Y+5, r24	; 0x05
    2330:	8d 81       	ldd	r24, Y+5	; 0x05
    2332:	9e 81       	ldd	r25, Y+6	; 0x06
    2334:	9a 83       	std	Y+2, r25	; 0x02
    2336:	89 83       	std	Y+1, r24	; 0x01
    2338:	89 81       	ldd	r24, Y+1	; 0x01
    233a:	9a 81       	ldd	r25, Y+2	; 0x02
    233c:	01 97       	sbiw	r24, 0x01	; 1
    233e:	f1 f7       	brne	.-4      	; 0x233c <sevenseg+0xbf8>
    2340:	9a 83       	std	Y+2, r25	; 0x02
    2342:	89 83       	std	Y+1, r24	; 0x01
	 _delay_ms(150);
	 return ;
	}
    2344:	c4 57       	subi	r28, 0x74	; 116
    2346:	df 4f       	sbci	r29, 0xFF	; 255
    2348:	0f b6       	in	r0, 0x3f	; 63
    234a:	f8 94       	cli
    234c:	de bf       	out	0x3e, r29	; 62
    234e:	0f be       	out	0x3f, r0	; 63
    2350:	cd bf       	out	0x3d, r28	; 61
    2352:	cf 91       	pop	r28
    2354:	df 91       	pop	r29
    2356:	1f 91       	pop	r17
    2358:	0f 91       	pop	r16
    235a:	08 95       	ret

0000235c <LCD_firstadd>:


void LCD_firstadd()
{
    235c:	0f 93       	push	r16
    235e:	1f 93       	push	r17
    2360:	df 93       	push	r29
    2362:	cf 93       	push	r28
    2364:	cd b7       	in	r28, 0x3d	; 61
    2366:	de b7       	in	r29, 0x3e	; 62
    2368:	c6 59       	subi	r28, 0x96	; 150
    236a:	d1 40       	sbci	r29, 0x01	; 1
    236c:	0f b6       	in	r0, 0x3f	; 63
    236e:	f8 94       	cli
    2370:	de bf       	out	0x3e, r29	; 62
    2372:	0f be       	out	0x3f, r0	; 63
    2374:	cd bf       	out	0x3d, r28	; 61
	LCD_cmd(0x1);
    2376:	81 e0       	ldi	r24, 0x01	; 1
    2378:	0e 94 85 2e 	call	0x5d0a	; 0x5d0a <LCD_cmd>
	LCD_cmd(0x80);
    237c:	80 e8       	ldi	r24, 0x80	; 128
    237e:	0e 94 85 2e 	call	0x5d0a	; 0x5d0a <LCD_cmd>
	LCD_write('M');
    2382:	8d e4       	ldi	r24, 0x4D	; 77
    2384:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
    2388:	fe 01       	movw	r30, r28
    238a:	ed 56       	subi	r30, 0x6D	; 109
    238c:	fe 4f       	sbci	r31, 0xFE	; 254
    238e:	80 e0       	ldi	r24, 0x00	; 0
    2390:	90 e0       	ldi	r25, 0x00	; 0
    2392:	a0 e2       	ldi	r26, 0x20	; 32
    2394:	b1 e4       	ldi	r27, 0x41	; 65
    2396:	80 83       	st	Z, r24
    2398:	91 83       	std	Z+1, r25	; 0x01
    239a:	a2 83       	std	Z+2, r26	; 0x02
    239c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    239e:	8e 01       	movw	r16, r28
    23a0:	01 57       	subi	r16, 0x71	; 113
    23a2:	1e 4f       	sbci	r17, 0xFE	; 254
    23a4:	fe 01       	movw	r30, r28
    23a6:	ed 56       	subi	r30, 0x6D	; 109
    23a8:	fe 4f       	sbci	r31, 0xFE	; 254
    23aa:	60 81       	ld	r22, Z
    23ac:	71 81       	ldd	r23, Z+1	; 0x01
    23ae:	82 81       	ldd	r24, Z+2	; 0x02
    23b0:	93 81       	ldd	r25, Z+3	; 0x03
    23b2:	20 e0       	ldi	r18, 0x00	; 0
    23b4:	30 e0       	ldi	r19, 0x00	; 0
    23b6:	4a ef       	ldi	r20, 0xFA	; 250
    23b8:	54 e4       	ldi	r21, 0x44	; 68
    23ba:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    23be:	dc 01       	movw	r26, r24
    23c0:	cb 01       	movw	r24, r22
    23c2:	f8 01       	movw	r30, r16
    23c4:	80 83       	st	Z, r24
    23c6:	91 83       	std	Z+1, r25	; 0x01
    23c8:	a2 83       	std	Z+2, r26	; 0x02
    23ca:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    23cc:	fe 01       	movw	r30, r28
    23ce:	e1 57       	subi	r30, 0x71	; 113
    23d0:	fe 4f       	sbci	r31, 0xFE	; 254
    23d2:	60 81       	ld	r22, Z
    23d4:	71 81       	ldd	r23, Z+1	; 0x01
    23d6:	82 81       	ldd	r24, Z+2	; 0x02
    23d8:	93 81       	ldd	r25, Z+3	; 0x03
    23da:	20 e0       	ldi	r18, 0x00	; 0
    23dc:	30 e0       	ldi	r19, 0x00	; 0
    23de:	40 e8       	ldi	r20, 0x80	; 128
    23e0:	5f e3       	ldi	r21, 0x3F	; 63
    23e2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    23e6:	88 23       	and	r24, r24
    23e8:	44 f4       	brge	.+16     	; 0x23fa <LCD_firstadd+0x9e>
		__ticks = 1;
    23ea:	fe 01       	movw	r30, r28
    23ec:	e3 57       	subi	r30, 0x73	; 115
    23ee:	fe 4f       	sbci	r31, 0xFE	; 254
    23f0:	81 e0       	ldi	r24, 0x01	; 1
    23f2:	90 e0       	ldi	r25, 0x00	; 0
    23f4:	91 83       	std	Z+1, r25	; 0x01
    23f6:	80 83       	st	Z, r24
    23f8:	64 c0       	rjmp	.+200    	; 0x24c2 <LCD_firstadd+0x166>
	else if (__tmp > 65535)
    23fa:	fe 01       	movw	r30, r28
    23fc:	e1 57       	subi	r30, 0x71	; 113
    23fe:	fe 4f       	sbci	r31, 0xFE	; 254
    2400:	60 81       	ld	r22, Z
    2402:	71 81       	ldd	r23, Z+1	; 0x01
    2404:	82 81       	ldd	r24, Z+2	; 0x02
    2406:	93 81       	ldd	r25, Z+3	; 0x03
    2408:	20 e0       	ldi	r18, 0x00	; 0
    240a:	3f ef       	ldi	r19, 0xFF	; 255
    240c:	4f e7       	ldi	r20, 0x7F	; 127
    240e:	57 e4       	ldi	r21, 0x47	; 71
    2410:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2414:	18 16       	cp	r1, r24
    2416:	0c f0       	brlt	.+2      	; 0x241a <LCD_firstadd+0xbe>
    2418:	43 c0       	rjmp	.+134    	; 0x24a0 <LCD_firstadd+0x144>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    241a:	fe 01       	movw	r30, r28
    241c:	ed 56       	subi	r30, 0x6D	; 109
    241e:	fe 4f       	sbci	r31, 0xFE	; 254
    2420:	60 81       	ld	r22, Z
    2422:	71 81       	ldd	r23, Z+1	; 0x01
    2424:	82 81       	ldd	r24, Z+2	; 0x02
    2426:	93 81       	ldd	r25, Z+3	; 0x03
    2428:	20 e0       	ldi	r18, 0x00	; 0
    242a:	30 e0       	ldi	r19, 0x00	; 0
    242c:	40 e2       	ldi	r20, 0x20	; 32
    242e:	51 e4       	ldi	r21, 0x41	; 65
    2430:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2434:	dc 01       	movw	r26, r24
    2436:	cb 01       	movw	r24, r22
    2438:	8e 01       	movw	r16, r28
    243a:	03 57       	subi	r16, 0x73	; 115
    243c:	1e 4f       	sbci	r17, 0xFE	; 254
    243e:	bc 01       	movw	r22, r24
    2440:	cd 01       	movw	r24, r26
    2442:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2446:	dc 01       	movw	r26, r24
    2448:	cb 01       	movw	r24, r22
    244a:	f8 01       	movw	r30, r16
    244c:	91 83       	std	Z+1, r25	; 0x01
    244e:	80 83       	st	Z, r24
    2450:	1f c0       	rjmp	.+62     	; 0x2490 <LCD_firstadd+0x134>
    2452:	fe 01       	movw	r30, r28
    2454:	e5 57       	subi	r30, 0x75	; 117
    2456:	fe 4f       	sbci	r31, 0xFE	; 254
    2458:	88 ec       	ldi	r24, 0xC8	; 200
    245a:	90 e0       	ldi	r25, 0x00	; 0
    245c:	91 83       	std	Z+1, r25	; 0x01
    245e:	80 83       	st	Z, r24
    2460:	fe 01       	movw	r30, r28
    2462:	e5 57       	subi	r30, 0x75	; 117
    2464:	fe 4f       	sbci	r31, 0xFE	; 254
    2466:	80 81       	ld	r24, Z
    2468:	91 81       	ldd	r25, Z+1	; 0x01
    246a:	01 97       	sbiw	r24, 0x01	; 1
    246c:	f1 f7       	brne	.-4      	; 0x246a <LCD_firstadd+0x10e>
    246e:	fe 01       	movw	r30, r28
    2470:	e5 57       	subi	r30, 0x75	; 117
    2472:	fe 4f       	sbci	r31, 0xFE	; 254
    2474:	91 83       	std	Z+1, r25	; 0x01
    2476:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2478:	de 01       	movw	r26, r28
    247a:	a3 57       	subi	r26, 0x73	; 115
    247c:	be 4f       	sbci	r27, 0xFE	; 254
    247e:	fe 01       	movw	r30, r28
    2480:	e3 57       	subi	r30, 0x73	; 115
    2482:	fe 4f       	sbci	r31, 0xFE	; 254
    2484:	80 81       	ld	r24, Z
    2486:	91 81       	ldd	r25, Z+1	; 0x01
    2488:	01 97       	sbiw	r24, 0x01	; 1
    248a:	11 96       	adiw	r26, 0x01	; 1
    248c:	9c 93       	st	X, r25
    248e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2490:	fe 01       	movw	r30, r28
    2492:	e3 57       	subi	r30, 0x73	; 115
    2494:	fe 4f       	sbci	r31, 0xFE	; 254
    2496:	80 81       	ld	r24, Z
    2498:	91 81       	ldd	r25, Z+1	; 0x01
    249a:	00 97       	sbiw	r24, 0x00	; 0
    249c:	d1 f6       	brne	.-76     	; 0x2452 <LCD_firstadd+0xf6>
    249e:	27 c0       	rjmp	.+78     	; 0x24ee <LCD_firstadd+0x192>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    24a0:	8e 01       	movw	r16, r28
    24a2:	03 57       	subi	r16, 0x73	; 115
    24a4:	1e 4f       	sbci	r17, 0xFE	; 254
    24a6:	fe 01       	movw	r30, r28
    24a8:	e1 57       	subi	r30, 0x71	; 113
    24aa:	fe 4f       	sbci	r31, 0xFE	; 254
    24ac:	60 81       	ld	r22, Z
    24ae:	71 81       	ldd	r23, Z+1	; 0x01
    24b0:	82 81       	ldd	r24, Z+2	; 0x02
    24b2:	93 81       	ldd	r25, Z+3	; 0x03
    24b4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    24b8:	dc 01       	movw	r26, r24
    24ba:	cb 01       	movw	r24, r22
    24bc:	f8 01       	movw	r30, r16
    24be:	91 83       	std	Z+1, r25	; 0x01
    24c0:	80 83       	st	Z, r24
    24c2:	de 01       	movw	r26, r28
    24c4:	a7 57       	subi	r26, 0x77	; 119
    24c6:	be 4f       	sbci	r27, 0xFE	; 254
    24c8:	fe 01       	movw	r30, r28
    24ca:	e3 57       	subi	r30, 0x73	; 115
    24cc:	fe 4f       	sbci	r31, 0xFE	; 254
    24ce:	80 81       	ld	r24, Z
    24d0:	91 81       	ldd	r25, Z+1	; 0x01
    24d2:	8d 93       	st	X+, r24
    24d4:	9c 93       	st	X, r25
    24d6:	fe 01       	movw	r30, r28
    24d8:	e7 57       	subi	r30, 0x77	; 119
    24da:	fe 4f       	sbci	r31, 0xFE	; 254
    24dc:	80 81       	ld	r24, Z
    24de:	91 81       	ldd	r25, Z+1	; 0x01
    24e0:	01 97       	sbiw	r24, 0x01	; 1
    24e2:	f1 f7       	brne	.-4      	; 0x24e0 <LCD_firstadd+0x184>
    24e4:	fe 01       	movw	r30, r28
    24e6:	e7 57       	subi	r30, 0x77	; 119
    24e8:	fe 4f       	sbci	r31, 0xFE	; 254
    24ea:	91 83       	std	Z+1, r25	; 0x01
    24ec:	80 83       	st	Z, r24
	_delay_ms(10);
	LCD_write('o');
    24ee:	8f e6       	ldi	r24, 0x6F	; 111
    24f0:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
    24f4:	fe 01       	movw	r30, r28
    24f6:	eb 57       	subi	r30, 0x7B	; 123
    24f8:	fe 4f       	sbci	r31, 0xFE	; 254
    24fa:	80 e0       	ldi	r24, 0x00	; 0
    24fc:	90 e0       	ldi	r25, 0x00	; 0
    24fe:	a0 e2       	ldi	r26, 0x20	; 32
    2500:	b1 e4       	ldi	r27, 0x41	; 65
    2502:	80 83       	st	Z, r24
    2504:	91 83       	std	Z+1, r25	; 0x01
    2506:	a2 83       	std	Z+2, r26	; 0x02
    2508:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    250a:	8e 01       	movw	r16, r28
    250c:	0f 57       	subi	r16, 0x7F	; 127
    250e:	1e 4f       	sbci	r17, 0xFE	; 254
    2510:	fe 01       	movw	r30, r28
    2512:	eb 57       	subi	r30, 0x7B	; 123
    2514:	fe 4f       	sbci	r31, 0xFE	; 254
    2516:	60 81       	ld	r22, Z
    2518:	71 81       	ldd	r23, Z+1	; 0x01
    251a:	82 81       	ldd	r24, Z+2	; 0x02
    251c:	93 81       	ldd	r25, Z+3	; 0x03
    251e:	20 e0       	ldi	r18, 0x00	; 0
    2520:	30 e0       	ldi	r19, 0x00	; 0
    2522:	4a ef       	ldi	r20, 0xFA	; 250
    2524:	54 e4       	ldi	r21, 0x44	; 68
    2526:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    252a:	dc 01       	movw	r26, r24
    252c:	cb 01       	movw	r24, r22
    252e:	f8 01       	movw	r30, r16
    2530:	80 83       	st	Z, r24
    2532:	91 83       	std	Z+1, r25	; 0x01
    2534:	a2 83       	std	Z+2, r26	; 0x02
    2536:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2538:	fe 01       	movw	r30, r28
    253a:	ef 57       	subi	r30, 0x7F	; 127
    253c:	fe 4f       	sbci	r31, 0xFE	; 254
    253e:	60 81       	ld	r22, Z
    2540:	71 81       	ldd	r23, Z+1	; 0x01
    2542:	82 81       	ldd	r24, Z+2	; 0x02
    2544:	93 81       	ldd	r25, Z+3	; 0x03
    2546:	20 e0       	ldi	r18, 0x00	; 0
    2548:	30 e0       	ldi	r19, 0x00	; 0
    254a:	40 e8       	ldi	r20, 0x80	; 128
    254c:	5f e3       	ldi	r21, 0x3F	; 63
    254e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2552:	88 23       	and	r24, r24
    2554:	44 f4       	brge	.+16     	; 0x2566 <LCD_firstadd+0x20a>
		__ticks = 1;
    2556:	fe 01       	movw	r30, r28
    2558:	e1 58       	subi	r30, 0x81	; 129
    255a:	fe 4f       	sbci	r31, 0xFE	; 254
    255c:	81 e0       	ldi	r24, 0x01	; 1
    255e:	90 e0       	ldi	r25, 0x00	; 0
    2560:	91 83       	std	Z+1, r25	; 0x01
    2562:	80 83       	st	Z, r24
    2564:	64 c0       	rjmp	.+200    	; 0x262e <LCD_firstadd+0x2d2>
	else if (__tmp > 65535)
    2566:	fe 01       	movw	r30, r28
    2568:	ef 57       	subi	r30, 0x7F	; 127
    256a:	fe 4f       	sbci	r31, 0xFE	; 254
    256c:	60 81       	ld	r22, Z
    256e:	71 81       	ldd	r23, Z+1	; 0x01
    2570:	82 81       	ldd	r24, Z+2	; 0x02
    2572:	93 81       	ldd	r25, Z+3	; 0x03
    2574:	20 e0       	ldi	r18, 0x00	; 0
    2576:	3f ef       	ldi	r19, 0xFF	; 255
    2578:	4f e7       	ldi	r20, 0x7F	; 127
    257a:	57 e4       	ldi	r21, 0x47	; 71
    257c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2580:	18 16       	cp	r1, r24
    2582:	0c f0       	brlt	.+2      	; 0x2586 <LCD_firstadd+0x22a>
    2584:	43 c0       	rjmp	.+134    	; 0x260c <LCD_firstadd+0x2b0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2586:	fe 01       	movw	r30, r28
    2588:	eb 57       	subi	r30, 0x7B	; 123
    258a:	fe 4f       	sbci	r31, 0xFE	; 254
    258c:	60 81       	ld	r22, Z
    258e:	71 81       	ldd	r23, Z+1	; 0x01
    2590:	82 81       	ldd	r24, Z+2	; 0x02
    2592:	93 81       	ldd	r25, Z+3	; 0x03
    2594:	20 e0       	ldi	r18, 0x00	; 0
    2596:	30 e0       	ldi	r19, 0x00	; 0
    2598:	40 e2       	ldi	r20, 0x20	; 32
    259a:	51 e4       	ldi	r21, 0x41	; 65
    259c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    25a0:	dc 01       	movw	r26, r24
    25a2:	cb 01       	movw	r24, r22
    25a4:	8e 01       	movw	r16, r28
    25a6:	01 58       	subi	r16, 0x81	; 129
    25a8:	1e 4f       	sbci	r17, 0xFE	; 254
    25aa:	bc 01       	movw	r22, r24
    25ac:	cd 01       	movw	r24, r26
    25ae:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    25b2:	dc 01       	movw	r26, r24
    25b4:	cb 01       	movw	r24, r22
    25b6:	f8 01       	movw	r30, r16
    25b8:	91 83       	std	Z+1, r25	; 0x01
    25ba:	80 83       	st	Z, r24
    25bc:	1f c0       	rjmp	.+62     	; 0x25fc <LCD_firstadd+0x2a0>
    25be:	fe 01       	movw	r30, r28
    25c0:	e3 58       	subi	r30, 0x83	; 131
    25c2:	fe 4f       	sbci	r31, 0xFE	; 254
    25c4:	88 ec       	ldi	r24, 0xC8	; 200
    25c6:	90 e0       	ldi	r25, 0x00	; 0
    25c8:	91 83       	std	Z+1, r25	; 0x01
    25ca:	80 83       	st	Z, r24
    25cc:	fe 01       	movw	r30, r28
    25ce:	e3 58       	subi	r30, 0x83	; 131
    25d0:	fe 4f       	sbci	r31, 0xFE	; 254
    25d2:	80 81       	ld	r24, Z
    25d4:	91 81       	ldd	r25, Z+1	; 0x01
    25d6:	01 97       	sbiw	r24, 0x01	; 1
    25d8:	f1 f7       	brne	.-4      	; 0x25d6 <LCD_firstadd+0x27a>
    25da:	fe 01       	movw	r30, r28
    25dc:	e3 58       	subi	r30, 0x83	; 131
    25de:	fe 4f       	sbci	r31, 0xFE	; 254
    25e0:	91 83       	std	Z+1, r25	; 0x01
    25e2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    25e4:	de 01       	movw	r26, r28
    25e6:	a1 58       	subi	r26, 0x81	; 129
    25e8:	be 4f       	sbci	r27, 0xFE	; 254
    25ea:	fe 01       	movw	r30, r28
    25ec:	e1 58       	subi	r30, 0x81	; 129
    25ee:	fe 4f       	sbci	r31, 0xFE	; 254
    25f0:	80 81       	ld	r24, Z
    25f2:	91 81       	ldd	r25, Z+1	; 0x01
    25f4:	01 97       	sbiw	r24, 0x01	; 1
    25f6:	11 96       	adiw	r26, 0x01	; 1
    25f8:	9c 93       	st	X, r25
    25fa:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    25fc:	fe 01       	movw	r30, r28
    25fe:	e1 58       	subi	r30, 0x81	; 129
    2600:	fe 4f       	sbci	r31, 0xFE	; 254
    2602:	80 81       	ld	r24, Z
    2604:	91 81       	ldd	r25, Z+1	; 0x01
    2606:	00 97       	sbiw	r24, 0x00	; 0
    2608:	d1 f6       	brne	.-76     	; 0x25be <LCD_firstadd+0x262>
    260a:	27 c0       	rjmp	.+78     	; 0x265a <LCD_firstadd+0x2fe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    260c:	8e 01       	movw	r16, r28
    260e:	01 58       	subi	r16, 0x81	; 129
    2610:	1e 4f       	sbci	r17, 0xFE	; 254
    2612:	fe 01       	movw	r30, r28
    2614:	ef 57       	subi	r30, 0x7F	; 127
    2616:	fe 4f       	sbci	r31, 0xFE	; 254
    2618:	60 81       	ld	r22, Z
    261a:	71 81       	ldd	r23, Z+1	; 0x01
    261c:	82 81       	ldd	r24, Z+2	; 0x02
    261e:	93 81       	ldd	r25, Z+3	; 0x03
    2620:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2624:	dc 01       	movw	r26, r24
    2626:	cb 01       	movw	r24, r22
    2628:	f8 01       	movw	r30, r16
    262a:	91 83       	std	Z+1, r25	; 0x01
    262c:	80 83       	st	Z, r24
    262e:	de 01       	movw	r26, r28
    2630:	a5 58       	subi	r26, 0x85	; 133
    2632:	be 4f       	sbci	r27, 0xFE	; 254
    2634:	fe 01       	movw	r30, r28
    2636:	e1 58       	subi	r30, 0x81	; 129
    2638:	fe 4f       	sbci	r31, 0xFE	; 254
    263a:	80 81       	ld	r24, Z
    263c:	91 81       	ldd	r25, Z+1	; 0x01
    263e:	8d 93       	st	X+, r24
    2640:	9c 93       	st	X, r25
    2642:	fe 01       	movw	r30, r28
    2644:	e5 58       	subi	r30, 0x85	; 133
    2646:	fe 4f       	sbci	r31, 0xFE	; 254
    2648:	80 81       	ld	r24, Z
    264a:	91 81       	ldd	r25, Z+1	; 0x01
    264c:	01 97       	sbiw	r24, 0x01	; 1
    264e:	f1 f7       	brne	.-4      	; 0x264c <LCD_firstadd+0x2f0>
    2650:	fe 01       	movw	r30, r28
    2652:	e5 58       	subi	r30, 0x85	; 133
    2654:	fe 4f       	sbci	r31, 0xFE	; 254
    2656:	91 83       	std	Z+1, r25	; 0x01
    2658:	80 83       	st	Z, r24
	_delay_ms(10);
	LCD_write('d');
    265a:	84 e6       	ldi	r24, 0x64	; 100
    265c:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
    2660:	fe 01       	movw	r30, r28
    2662:	e9 58       	subi	r30, 0x89	; 137
    2664:	fe 4f       	sbci	r31, 0xFE	; 254
    2666:	80 e0       	ldi	r24, 0x00	; 0
    2668:	90 e0       	ldi	r25, 0x00	; 0
    266a:	a0 e2       	ldi	r26, 0x20	; 32
    266c:	b1 e4       	ldi	r27, 0x41	; 65
    266e:	80 83       	st	Z, r24
    2670:	91 83       	std	Z+1, r25	; 0x01
    2672:	a2 83       	std	Z+2, r26	; 0x02
    2674:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2676:	8e 01       	movw	r16, r28
    2678:	0d 58       	subi	r16, 0x8D	; 141
    267a:	1e 4f       	sbci	r17, 0xFE	; 254
    267c:	fe 01       	movw	r30, r28
    267e:	e9 58       	subi	r30, 0x89	; 137
    2680:	fe 4f       	sbci	r31, 0xFE	; 254
    2682:	60 81       	ld	r22, Z
    2684:	71 81       	ldd	r23, Z+1	; 0x01
    2686:	82 81       	ldd	r24, Z+2	; 0x02
    2688:	93 81       	ldd	r25, Z+3	; 0x03
    268a:	20 e0       	ldi	r18, 0x00	; 0
    268c:	30 e0       	ldi	r19, 0x00	; 0
    268e:	4a ef       	ldi	r20, 0xFA	; 250
    2690:	54 e4       	ldi	r21, 0x44	; 68
    2692:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2696:	dc 01       	movw	r26, r24
    2698:	cb 01       	movw	r24, r22
    269a:	f8 01       	movw	r30, r16
    269c:	80 83       	st	Z, r24
    269e:	91 83       	std	Z+1, r25	; 0x01
    26a0:	a2 83       	std	Z+2, r26	; 0x02
    26a2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    26a4:	fe 01       	movw	r30, r28
    26a6:	ed 58       	subi	r30, 0x8D	; 141
    26a8:	fe 4f       	sbci	r31, 0xFE	; 254
    26aa:	60 81       	ld	r22, Z
    26ac:	71 81       	ldd	r23, Z+1	; 0x01
    26ae:	82 81       	ldd	r24, Z+2	; 0x02
    26b0:	93 81       	ldd	r25, Z+3	; 0x03
    26b2:	20 e0       	ldi	r18, 0x00	; 0
    26b4:	30 e0       	ldi	r19, 0x00	; 0
    26b6:	40 e8       	ldi	r20, 0x80	; 128
    26b8:	5f e3       	ldi	r21, 0x3F	; 63
    26ba:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    26be:	88 23       	and	r24, r24
    26c0:	44 f4       	brge	.+16     	; 0x26d2 <LCD_firstadd+0x376>
		__ticks = 1;
    26c2:	fe 01       	movw	r30, r28
    26c4:	ef 58       	subi	r30, 0x8F	; 143
    26c6:	fe 4f       	sbci	r31, 0xFE	; 254
    26c8:	81 e0       	ldi	r24, 0x01	; 1
    26ca:	90 e0       	ldi	r25, 0x00	; 0
    26cc:	91 83       	std	Z+1, r25	; 0x01
    26ce:	80 83       	st	Z, r24
    26d0:	64 c0       	rjmp	.+200    	; 0x279a <LCD_firstadd+0x43e>
	else if (__tmp > 65535)
    26d2:	fe 01       	movw	r30, r28
    26d4:	ed 58       	subi	r30, 0x8D	; 141
    26d6:	fe 4f       	sbci	r31, 0xFE	; 254
    26d8:	60 81       	ld	r22, Z
    26da:	71 81       	ldd	r23, Z+1	; 0x01
    26dc:	82 81       	ldd	r24, Z+2	; 0x02
    26de:	93 81       	ldd	r25, Z+3	; 0x03
    26e0:	20 e0       	ldi	r18, 0x00	; 0
    26e2:	3f ef       	ldi	r19, 0xFF	; 255
    26e4:	4f e7       	ldi	r20, 0x7F	; 127
    26e6:	57 e4       	ldi	r21, 0x47	; 71
    26e8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    26ec:	18 16       	cp	r1, r24
    26ee:	0c f0       	brlt	.+2      	; 0x26f2 <LCD_firstadd+0x396>
    26f0:	43 c0       	rjmp	.+134    	; 0x2778 <LCD_firstadd+0x41c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    26f2:	fe 01       	movw	r30, r28
    26f4:	e9 58       	subi	r30, 0x89	; 137
    26f6:	fe 4f       	sbci	r31, 0xFE	; 254
    26f8:	60 81       	ld	r22, Z
    26fa:	71 81       	ldd	r23, Z+1	; 0x01
    26fc:	82 81       	ldd	r24, Z+2	; 0x02
    26fe:	93 81       	ldd	r25, Z+3	; 0x03
    2700:	20 e0       	ldi	r18, 0x00	; 0
    2702:	30 e0       	ldi	r19, 0x00	; 0
    2704:	40 e2       	ldi	r20, 0x20	; 32
    2706:	51 e4       	ldi	r21, 0x41	; 65
    2708:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    270c:	dc 01       	movw	r26, r24
    270e:	cb 01       	movw	r24, r22
    2710:	8e 01       	movw	r16, r28
    2712:	0f 58       	subi	r16, 0x8F	; 143
    2714:	1e 4f       	sbci	r17, 0xFE	; 254
    2716:	bc 01       	movw	r22, r24
    2718:	cd 01       	movw	r24, r26
    271a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    271e:	dc 01       	movw	r26, r24
    2720:	cb 01       	movw	r24, r22
    2722:	f8 01       	movw	r30, r16
    2724:	91 83       	std	Z+1, r25	; 0x01
    2726:	80 83       	st	Z, r24
    2728:	1f c0       	rjmp	.+62     	; 0x2768 <LCD_firstadd+0x40c>
    272a:	fe 01       	movw	r30, r28
    272c:	e1 59       	subi	r30, 0x91	; 145
    272e:	fe 4f       	sbci	r31, 0xFE	; 254
    2730:	88 ec       	ldi	r24, 0xC8	; 200
    2732:	90 e0       	ldi	r25, 0x00	; 0
    2734:	91 83       	std	Z+1, r25	; 0x01
    2736:	80 83       	st	Z, r24
    2738:	fe 01       	movw	r30, r28
    273a:	e1 59       	subi	r30, 0x91	; 145
    273c:	fe 4f       	sbci	r31, 0xFE	; 254
    273e:	80 81       	ld	r24, Z
    2740:	91 81       	ldd	r25, Z+1	; 0x01
    2742:	01 97       	sbiw	r24, 0x01	; 1
    2744:	f1 f7       	brne	.-4      	; 0x2742 <LCD_firstadd+0x3e6>
    2746:	fe 01       	movw	r30, r28
    2748:	e1 59       	subi	r30, 0x91	; 145
    274a:	fe 4f       	sbci	r31, 0xFE	; 254
    274c:	91 83       	std	Z+1, r25	; 0x01
    274e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2750:	de 01       	movw	r26, r28
    2752:	af 58       	subi	r26, 0x8F	; 143
    2754:	be 4f       	sbci	r27, 0xFE	; 254
    2756:	fe 01       	movw	r30, r28
    2758:	ef 58       	subi	r30, 0x8F	; 143
    275a:	fe 4f       	sbci	r31, 0xFE	; 254
    275c:	80 81       	ld	r24, Z
    275e:	91 81       	ldd	r25, Z+1	; 0x01
    2760:	01 97       	sbiw	r24, 0x01	; 1
    2762:	11 96       	adiw	r26, 0x01	; 1
    2764:	9c 93       	st	X, r25
    2766:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2768:	fe 01       	movw	r30, r28
    276a:	ef 58       	subi	r30, 0x8F	; 143
    276c:	fe 4f       	sbci	r31, 0xFE	; 254
    276e:	80 81       	ld	r24, Z
    2770:	91 81       	ldd	r25, Z+1	; 0x01
    2772:	00 97       	sbiw	r24, 0x00	; 0
    2774:	d1 f6       	brne	.-76     	; 0x272a <LCD_firstadd+0x3ce>
    2776:	27 c0       	rjmp	.+78     	; 0x27c6 <LCD_firstadd+0x46a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2778:	8e 01       	movw	r16, r28
    277a:	0f 58       	subi	r16, 0x8F	; 143
    277c:	1e 4f       	sbci	r17, 0xFE	; 254
    277e:	fe 01       	movw	r30, r28
    2780:	ed 58       	subi	r30, 0x8D	; 141
    2782:	fe 4f       	sbci	r31, 0xFE	; 254
    2784:	60 81       	ld	r22, Z
    2786:	71 81       	ldd	r23, Z+1	; 0x01
    2788:	82 81       	ldd	r24, Z+2	; 0x02
    278a:	93 81       	ldd	r25, Z+3	; 0x03
    278c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2790:	dc 01       	movw	r26, r24
    2792:	cb 01       	movw	r24, r22
    2794:	f8 01       	movw	r30, r16
    2796:	91 83       	std	Z+1, r25	; 0x01
    2798:	80 83       	st	Z, r24
    279a:	de 01       	movw	r26, r28
    279c:	a3 59       	subi	r26, 0x93	; 147
    279e:	be 4f       	sbci	r27, 0xFE	; 254
    27a0:	fe 01       	movw	r30, r28
    27a2:	ef 58       	subi	r30, 0x8F	; 143
    27a4:	fe 4f       	sbci	r31, 0xFE	; 254
    27a6:	80 81       	ld	r24, Z
    27a8:	91 81       	ldd	r25, Z+1	; 0x01
    27aa:	8d 93       	st	X+, r24
    27ac:	9c 93       	st	X, r25
    27ae:	fe 01       	movw	r30, r28
    27b0:	e3 59       	subi	r30, 0x93	; 147
    27b2:	fe 4f       	sbci	r31, 0xFE	; 254
    27b4:	80 81       	ld	r24, Z
    27b6:	91 81       	ldd	r25, Z+1	; 0x01
    27b8:	01 97       	sbiw	r24, 0x01	; 1
    27ba:	f1 f7       	brne	.-4      	; 0x27b8 <LCD_firstadd+0x45c>
    27bc:	fe 01       	movw	r30, r28
    27be:	e3 59       	subi	r30, 0x93	; 147
    27c0:	fe 4f       	sbci	r31, 0xFE	; 254
    27c2:	91 83       	std	Z+1, r25	; 0x01
    27c4:	80 83       	st	Z, r24
	_delay_ms(10);
	LCD_write('e');
    27c6:	85 e6       	ldi	r24, 0x65	; 101
    27c8:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
    27cc:	fe 01       	movw	r30, r28
    27ce:	e7 59       	subi	r30, 0x97	; 151
    27d0:	fe 4f       	sbci	r31, 0xFE	; 254
    27d2:	80 e0       	ldi	r24, 0x00	; 0
    27d4:	90 e0       	ldi	r25, 0x00	; 0
    27d6:	a0 e2       	ldi	r26, 0x20	; 32
    27d8:	b1 e4       	ldi	r27, 0x41	; 65
    27da:	80 83       	st	Z, r24
    27dc:	91 83       	std	Z+1, r25	; 0x01
    27de:	a2 83       	std	Z+2, r26	; 0x02
    27e0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    27e2:	8e 01       	movw	r16, r28
    27e4:	0b 59       	subi	r16, 0x9B	; 155
    27e6:	1e 4f       	sbci	r17, 0xFE	; 254
    27e8:	fe 01       	movw	r30, r28
    27ea:	e7 59       	subi	r30, 0x97	; 151
    27ec:	fe 4f       	sbci	r31, 0xFE	; 254
    27ee:	60 81       	ld	r22, Z
    27f0:	71 81       	ldd	r23, Z+1	; 0x01
    27f2:	82 81       	ldd	r24, Z+2	; 0x02
    27f4:	93 81       	ldd	r25, Z+3	; 0x03
    27f6:	20 e0       	ldi	r18, 0x00	; 0
    27f8:	30 e0       	ldi	r19, 0x00	; 0
    27fa:	4a ef       	ldi	r20, 0xFA	; 250
    27fc:	54 e4       	ldi	r21, 0x44	; 68
    27fe:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2802:	dc 01       	movw	r26, r24
    2804:	cb 01       	movw	r24, r22
    2806:	f8 01       	movw	r30, r16
    2808:	80 83       	st	Z, r24
    280a:	91 83       	std	Z+1, r25	; 0x01
    280c:	a2 83       	std	Z+2, r26	; 0x02
    280e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2810:	fe 01       	movw	r30, r28
    2812:	eb 59       	subi	r30, 0x9B	; 155
    2814:	fe 4f       	sbci	r31, 0xFE	; 254
    2816:	60 81       	ld	r22, Z
    2818:	71 81       	ldd	r23, Z+1	; 0x01
    281a:	82 81       	ldd	r24, Z+2	; 0x02
    281c:	93 81       	ldd	r25, Z+3	; 0x03
    281e:	20 e0       	ldi	r18, 0x00	; 0
    2820:	30 e0       	ldi	r19, 0x00	; 0
    2822:	40 e8       	ldi	r20, 0x80	; 128
    2824:	5f e3       	ldi	r21, 0x3F	; 63
    2826:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    282a:	88 23       	and	r24, r24
    282c:	44 f4       	brge	.+16     	; 0x283e <LCD_firstadd+0x4e2>
		__ticks = 1;
    282e:	fe 01       	movw	r30, r28
    2830:	ed 59       	subi	r30, 0x9D	; 157
    2832:	fe 4f       	sbci	r31, 0xFE	; 254
    2834:	81 e0       	ldi	r24, 0x01	; 1
    2836:	90 e0       	ldi	r25, 0x00	; 0
    2838:	91 83       	std	Z+1, r25	; 0x01
    283a:	80 83       	st	Z, r24
    283c:	64 c0       	rjmp	.+200    	; 0x2906 <LCD_firstadd+0x5aa>
	else if (__tmp > 65535)
    283e:	fe 01       	movw	r30, r28
    2840:	eb 59       	subi	r30, 0x9B	; 155
    2842:	fe 4f       	sbci	r31, 0xFE	; 254
    2844:	60 81       	ld	r22, Z
    2846:	71 81       	ldd	r23, Z+1	; 0x01
    2848:	82 81       	ldd	r24, Z+2	; 0x02
    284a:	93 81       	ldd	r25, Z+3	; 0x03
    284c:	20 e0       	ldi	r18, 0x00	; 0
    284e:	3f ef       	ldi	r19, 0xFF	; 255
    2850:	4f e7       	ldi	r20, 0x7F	; 127
    2852:	57 e4       	ldi	r21, 0x47	; 71
    2854:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2858:	18 16       	cp	r1, r24
    285a:	0c f0       	brlt	.+2      	; 0x285e <LCD_firstadd+0x502>
    285c:	43 c0       	rjmp	.+134    	; 0x28e4 <LCD_firstadd+0x588>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    285e:	fe 01       	movw	r30, r28
    2860:	e7 59       	subi	r30, 0x97	; 151
    2862:	fe 4f       	sbci	r31, 0xFE	; 254
    2864:	60 81       	ld	r22, Z
    2866:	71 81       	ldd	r23, Z+1	; 0x01
    2868:	82 81       	ldd	r24, Z+2	; 0x02
    286a:	93 81       	ldd	r25, Z+3	; 0x03
    286c:	20 e0       	ldi	r18, 0x00	; 0
    286e:	30 e0       	ldi	r19, 0x00	; 0
    2870:	40 e2       	ldi	r20, 0x20	; 32
    2872:	51 e4       	ldi	r21, 0x41	; 65
    2874:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2878:	dc 01       	movw	r26, r24
    287a:	cb 01       	movw	r24, r22
    287c:	8e 01       	movw	r16, r28
    287e:	0d 59       	subi	r16, 0x9D	; 157
    2880:	1e 4f       	sbci	r17, 0xFE	; 254
    2882:	bc 01       	movw	r22, r24
    2884:	cd 01       	movw	r24, r26
    2886:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    288a:	dc 01       	movw	r26, r24
    288c:	cb 01       	movw	r24, r22
    288e:	f8 01       	movw	r30, r16
    2890:	91 83       	std	Z+1, r25	; 0x01
    2892:	80 83       	st	Z, r24
    2894:	1f c0       	rjmp	.+62     	; 0x28d4 <LCD_firstadd+0x578>
    2896:	fe 01       	movw	r30, r28
    2898:	ef 59       	subi	r30, 0x9F	; 159
    289a:	fe 4f       	sbci	r31, 0xFE	; 254
    289c:	88 ec       	ldi	r24, 0xC8	; 200
    289e:	90 e0       	ldi	r25, 0x00	; 0
    28a0:	91 83       	std	Z+1, r25	; 0x01
    28a2:	80 83       	st	Z, r24
    28a4:	fe 01       	movw	r30, r28
    28a6:	ef 59       	subi	r30, 0x9F	; 159
    28a8:	fe 4f       	sbci	r31, 0xFE	; 254
    28aa:	80 81       	ld	r24, Z
    28ac:	91 81       	ldd	r25, Z+1	; 0x01
    28ae:	01 97       	sbiw	r24, 0x01	; 1
    28b0:	f1 f7       	brne	.-4      	; 0x28ae <LCD_firstadd+0x552>
    28b2:	fe 01       	movw	r30, r28
    28b4:	ef 59       	subi	r30, 0x9F	; 159
    28b6:	fe 4f       	sbci	r31, 0xFE	; 254
    28b8:	91 83       	std	Z+1, r25	; 0x01
    28ba:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    28bc:	de 01       	movw	r26, r28
    28be:	ad 59       	subi	r26, 0x9D	; 157
    28c0:	be 4f       	sbci	r27, 0xFE	; 254
    28c2:	fe 01       	movw	r30, r28
    28c4:	ed 59       	subi	r30, 0x9D	; 157
    28c6:	fe 4f       	sbci	r31, 0xFE	; 254
    28c8:	80 81       	ld	r24, Z
    28ca:	91 81       	ldd	r25, Z+1	; 0x01
    28cc:	01 97       	sbiw	r24, 0x01	; 1
    28ce:	11 96       	adiw	r26, 0x01	; 1
    28d0:	9c 93       	st	X, r25
    28d2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    28d4:	fe 01       	movw	r30, r28
    28d6:	ed 59       	subi	r30, 0x9D	; 157
    28d8:	fe 4f       	sbci	r31, 0xFE	; 254
    28da:	80 81       	ld	r24, Z
    28dc:	91 81       	ldd	r25, Z+1	; 0x01
    28de:	00 97       	sbiw	r24, 0x00	; 0
    28e0:	d1 f6       	brne	.-76     	; 0x2896 <LCD_firstadd+0x53a>
    28e2:	27 c0       	rjmp	.+78     	; 0x2932 <LCD_firstadd+0x5d6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    28e4:	8e 01       	movw	r16, r28
    28e6:	0d 59       	subi	r16, 0x9D	; 157
    28e8:	1e 4f       	sbci	r17, 0xFE	; 254
    28ea:	fe 01       	movw	r30, r28
    28ec:	eb 59       	subi	r30, 0x9B	; 155
    28ee:	fe 4f       	sbci	r31, 0xFE	; 254
    28f0:	60 81       	ld	r22, Z
    28f2:	71 81       	ldd	r23, Z+1	; 0x01
    28f4:	82 81       	ldd	r24, Z+2	; 0x02
    28f6:	93 81       	ldd	r25, Z+3	; 0x03
    28f8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    28fc:	dc 01       	movw	r26, r24
    28fe:	cb 01       	movw	r24, r22
    2900:	f8 01       	movw	r30, r16
    2902:	91 83       	std	Z+1, r25	; 0x01
    2904:	80 83       	st	Z, r24
    2906:	de 01       	movw	r26, r28
    2908:	a1 5a       	subi	r26, 0xA1	; 161
    290a:	be 4f       	sbci	r27, 0xFE	; 254
    290c:	fe 01       	movw	r30, r28
    290e:	ed 59       	subi	r30, 0x9D	; 157
    2910:	fe 4f       	sbci	r31, 0xFE	; 254
    2912:	80 81       	ld	r24, Z
    2914:	91 81       	ldd	r25, Z+1	; 0x01
    2916:	8d 93       	st	X+, r24
    2918:	9c 93       	st	X, r25
    291a:	fe 01       	movw	r30, r28
    291c:	e1 5a       	subi	r30, 0xA1	; 161
    291e:	fe 4f       	sbci	r31, 0xFE	; 254
    2920:	80 81       	ld	r24, Z
    2922:	91 81       	ldd	r25, Z+1	; 0x01
    2924:	01 97       	sbiw	r24, 0x01	; 1
    2926:	f1 f7       	brne	.-4      	; 0x2924 <LCD_firstadd+0x5c8>
    2928:	fe 01       	movw	r30, r28
    292a:	e1 5a       	subi	r30, 0xA1	; 161
    292c:	fe 4f       	sbci	r31, 0xFE	; 254
    292e:	91 83       	std	Z+1, r25	; 0x01
    2930:	80 83       	st	Z, r24
	_delay_ms(10);
	LCD_write('r');
    2932:	82 e7       	ldi	r24, 0x72	; 114
    2934:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
    2938:	fe 01       	movw	r30, r28
    293a:	e5 5a       	subi	r30, 0xA5	; 165
    293c:	fe 4f       	sbci	r31, 0xFE	; 254
    293e:	80 e0       	ldi	r24, 0x00	; 0
    2940:	90 e0       	ldi	r25, 0x00	; 0
    2942:	a0 e2       	ldi	r26, 0x20	; 32
    2944:	b1 e4       	ldi	r27, 0x41	; 65
    2946:	80 83       	st	Z, r24
    2948:	91 83       	std	Z+1, r25	; 0x01
    294a:	a2 83       	std	Z+2, r26	; 0x02
    294c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    294e:	8e 01       	movw	r16, r28
    2950:	09 5a       	subi	r16, 0xA9	; 169
    2952:	1e 4f       	sbci	r17, 0xFE	; 254
    2954:	fe 01       	movw	r30, r28
    2956:	e5 5a       	subi	r30, 0xA5	; 165
    2958:	fe 4f       	sbci	r31, 0xFE	; 254
    295a:	60 81       	ld	r22, Z
    295c:	71 81       	ldd	r23, Z+1	; 0x01
    295e:	82 81       	ldd	r24, Z+2	; 0x02
    2960:	93 81       	ldd	r25, Z+3	; 0x03
    2962:	20 e0       	ldi	r18, 0x00	; 0
    2964:	30 e0       	ldi	r19, 0x00	; 0
    2966:	4a ef       	ldi	r20, 0xFA	; 250
    2968:	54 e4       	ldi	r21, 0x44	; 68
    296a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    296e:	dc 01       	movw	r26, r24
    2970:	cb 01       	movw	r24, r22
    2972:	f8 01       	movw	r30, r16
    2974:	80 83       	st	Z, r24
    2976:	91 83       	std	Z+1, r25	; 0x01
    2978:	a2 83       	std	Z+2, r26	; 0x02
    297a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    297c:	fe 01       	movw	r30, r28
    297e:	e9 5a       	subi	r30, 0xA9	; 169
    2980:	fe 4f       	sbci	r31, 0xFE	; 254
    2982:	60 81       	ld	r22, Z
    2984:	71 81       	ldd	r23, Z+1	; 0x01
    2986:	82 81       	ldd	r24, Z+2	; 0x02
    2988:	93 81       	ldd	r25, Z+3	; 0x03
    298a:	20 e0       	ldi	r18, 0x00	; 0
    298c:	30 e0       	ldi	r19, 0x00	; 0
    298e:	40 e8       	ldi	r20, 0x80	; 128
    2990:	5f e3       	ldi	r21, 0x3F	; 63
    2992:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2996:	88 23       	and	r24, r24
    2998:	44 f4       	brge	.+16     	; 0x29aa <LCD_firstadd+0x64e>
		__ticks = 1;
    299a:	fe 01       	movw	r30, r28
    299c:	eb 5a       	subi	r30, 0xAB	; 171
    299e:	fe 4f       	sbci	r31, 0xFE	; 254
    29a0:	81 e0       	ldi	r24, 0x01	; 1
    29a2:	90 e0       	ldi	r25, 0x00	; 0
    29a4:	91 83       	std	Z+1, r25	; 0x01
    29a6:	80 83       	st	Z, r24
    29a8:	64 c0       	rjmp	.+200    	; 0x2a72 <LCD_firstadd+0x716>
	else if (__tmp > 65535)
    29aa:	fe 01       	movw	r30, r28
    29ac:	e9 5a       	subi	r30, 0xA9	; 169
    29ae:	fe 4f       	sbci	r31, 0xFE	; 254
    29b0:	60 81       	ld	r22, Z
    29b2:	71 81       	ldd	r23, Z+1	; 0x01
    29b4:	82 81       	ldd	r24, Z+2	; 0x02
    29b6:	93 81       	ldd	r25, Z+3	; 0x03
    29b8:	20 e0       	ldi	r18, 0x00	; 0
    29ba:	3f ef       	ldi	r19, 0xFF	; 255
    29bc:	4f e7       	ldi	r20, 0x7F	; 127
    29be:	57 e4       	ldi	r21, 0x47	; 71
    29c0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    29c4:	18 16       	cp	r1, r24
    29c6:	0c f0       	brlt	.+2      	; 0x29ca <LCD_firstadd+0x66e>
    29c8:	43 c0       	rjmp	.+134    	; 0x2a50 <LCD_firstadd+0x6f4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    29ca:	fe 01       	movw	r30, r28
    29cc:	e5 5a       	subi	r30, 0xA5	; 165
    29ce:	fe 4f       	sbci	r31, 0xFE	; 254
    29d0:	60 81       	ld	r22, Z
    29d2:	71 81       	ldd	r23, Z+1	; 0x01
    29d4:	82 81       	ldd	r24, Z+2	; 0x02
    29d6:	93 81       	ldd	r25, Z+3	; 0x03
    29d8:	20 e0       	ldi	r18, 0x00	; 0
    29da:	30 e0       	ldi	r19, 0x00	; 0
    29dc:	40 e2       	ldi	r20, 0x20	; 32
    29de:	51 e4       	ldi	r21, 0x41	; 65
    29e0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    29e4:	dc 01       	movw	r26, r24
    29e6:	cb 01       	movw	r24, r22
    29e8:	8e 01       	movw	r16, r28
    29ea:	0b 5a       	subi	r16, 0xAB	; 171
    29ec:	1e 4f       	sbci	r17, 0xFE	; 254
    29ee:	bc 01       	movw	r22, r24
    29f0:	cd 01       	movw	r24, r26
    29f2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    29f6:	dc 01       	movw	r26, r24
    29f8:	cb 01       	movw	r24, r22
    29fa:	f8 01       	movw	r30, r16
    29fc:	91 83       	std	Z+1, r25	; 0x01
    29fe:	80 83       	st	Z, r24
    2a00:	1f c0       	rjmp	.+62     	; 0x2a40 <LCD_firstadd+0x6e4>
    2a02:	fe 01       	movw	r30, r28
    2a04:	ed 5a       	subi	r30, 0xAD	; 173
    2a06:	fe 4f       	sbci	r31, 0xFE	; 254
    2a08:	88 ec       	ldi	r24, 0xC8	; 200
    2a0a:	90 e0       	ldi	r25, 0x00	; 0
    2a0c:	91 83       	std	Z+1, r25	; 0x01
    2a0e:	80 83       	st	Z, r24
    2a10:	fe 01       	movw	r30, r28
    2a12:	ed 5a       	subi	r30, 0xAD	; 173
    2a14:	fe 4f       	sbci	r31, 0xFE	; 254
    2a16:	80 81       	ld	r24, Z
    2a18:	91 81       	ldd	r25, Z+1	; 0x01
    2a1a:	01 97       	sbiw	r24, 0x01	; 1
    2a1c:	f1 f7       	brne	.-4      	; 0x2a1a <LCD_firstadd+0x6be>
    2a1e:	fe 01       	movw	r30, r28
    2a20:	ed 5a       	subi	r30, 0xAD	; 173
    2a22:	fe 4f       	sbci	r31, 0xFE	; 254
    2a24:	91 83       	std	Z+1, r25	; 0x01
    2a26:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2a28:	de 01       	movw	r26, r28
    2a2a:	ab 5a       	subi	r26, 0xAB	; 171
    2a2c:	be 4f       	sbci	r27, 0xFE	; 254
    2a2e:	fe 01       	movw	r30, r28
    2a30:	eb 5a       	subi	r30, 0xAB	; 171
    2a32:	fe 4f       	sbci	r31, 0xFE	; 254
    2a34:	80 81       	ld	r24, Z
    2a36:	91 81       	ldd	r25, Z+1	; 0x01
    2a38:	01 97       	sbiw	r24, 0x01	; 1
    2a3a:	11 96       	adiw	r26, 0x01	; 1
    2a3c:	9c 93       	st	X, r25
    2a3e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2a40:	fe 01       	movw	r30, r28
    2a42:	eb 5a       	subi	r30, 0xAB	; 171
    2a44:	fe 4f       	sbci	r31, 0xFE	; 254
    2a46:	80 81       	ld	r24, Z
    2a48:	91 81       	ldd	r25, Z+1	; 0x01
    2a4a:	00 97       	sbiw	r24, 0x00	; 0
    2a4c:	d1 f6       	brne	.-76     	; 0x2a02 <LCD_firstadd+0x6a6>
    2a4e:	27 c0       	rjmp	.+78     	; 0x2a9e <LCD_firstadd+0x742>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a50:	8e 01       	movw	r16, r28
    2a52:	0b 5a       	subi	r16, 0xAB	; 171
    2a54:	1e 4f       	sbci	r17, 0xFE	; 254
    2a56:	fe 01       	movw	r30, r28
    2a58:	e9 5a       	subi	r30, 0xA9	; 169
    2a5a:	fe 4f       	sbci	r31, 0xFE	; 254
    2a5c:	60 81       	ld	r22, Z
    2a5e:	71 81       	ldd	r23, Z+1	; 0x01
    2a60:	82 81       	ldd	r24, Z+2	; 0x02
    2a62:	93 81       	ldd	r25, Z+3	; 0x03
    2a64:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a68:	dc 01       	movw	r26, r24
    2a6a:	cb 01       	movw	r24, r22
    2a6c:	f8 01       	movw	r30, r16
    2a6e:	91 83       	std	Z+1, r25	; 0x01
    2a70:	80 83       	st	Z, r24
    2a72:	de 01       	movw	r26, r28
    2a74:	af 5a       	subi	r26, 0xAF	; 175
    2a76:	be 4f       	sbci	r27, 0xFE	; 254
    2a78:	fe 01       	movw	r30, r28
    2a7a:	eb 5a       	subi	r30, 0xAB	; 171
    2a7c:	fe 4f       	sbci	r31, 0xFE	; 254
    2a7e:	80 81       	ld	r24, Z
    2a80:	91 81       	ldd	r25, Z+1	; 0x01
    2a82:	8d 93       	st	X+, r24
    2a84:	9c 93       	st	X, r25
    2a86:	fe 01       	movw	r30, r28
    2a88:	ef 5a       	subi	r30, 0xAF	; 175
    2a8a:	fe 4f       	sbci	r31, 0xFE	; 254
    2a8c:	80 81       	ld	r24, Z
    2a8e:	91 81       	ldd	r25, Z+1	; 0x01
    2a90:	01 97       	sbiw	r24, 0x01	; 1
    2a92:	f1 f7       	brne	.-4      	; 0x2a90 <LCD_firstadd+0x734>
    2a94:	fe 01       	movw	r30, r28
    2a96:	ef 5a       	subi	r30, 0xAF	; 175
    2a98:	fe 4f       	sbci	r31, 0xFE	; 254
    2a9a:	91 83       	std	Z+1, r25	; 0x01
    2a9c:	80 83       	st	Z, r24
	_delay_ms(10);
	LCD_write('n');
    2a9e:	8e e6       	ldi	r24, 0x6E	; 110
    2aa0:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
    2aa4:	fe 01       	movw	r30, r28
    2aa6:	e3 5b       	subi	r30, 0xB3	; 179
    2aa8:	fe 4f       	sbci	r31, 0xFE	; 254
    2aaa:	80 e0       	ldi	r24, 0x00	; 0
    2aac:	90 e0       	ldi	r25, 0x00	; 0
    2aae:	a0 e2       	ldi	r26, 0x20	; 32
    2ab0:	b1 e4       	ldi	r27, 0x41	; 65
    2ab2:	80 83       	st	Z, r24
    2ab4:	91 83       	std	Z+1, r25	; 0x01
    2ab6:	a2 83       	std	Z+2, r26	; 0x02
    2ab8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2aba:	8e 01       	movw	r16, r28
    2abc:	07 5b       	subi	r16, 0xB7	; 183
    2abe:	1e 4f       	sbci	r17, 0xFE	; 254
    2ac0:	fe 01       	movw	r30, r28
    2ac2:	e3 5b       	subi	r30, 0xB3	; 179
    2ac4:	fe 4f       	sbci	r31, 0xFE	; 254
    2ac6:	60 81       	ld	r22, Z
    2ac8:	71 81       	ldd	r23, Z+1	; 0x01
    2aca:	82 81       	ldd	r24, Z+2	; 0x02
    2acc:	93 81       	ldd	r25, Z+3	; 0x03
    2ace:	20 e0       	ldi	r18, 0x00	; 0
    2ad0:	30 e0       	ldi	r19, 0x00	; 0
    2ad2:	4a ef       	ldi	r20, 0xFA	; 250
    2ad4:	54 e4       	ldi	r21, 0x44	; 68
    2ad6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2ada:	dc 01       	movw	r26, r24
    2adc:	cb 01       	movw	r24, r22
    2ade:	f8 01       	movw	r30, r16
    2ae0:	80 83       	st	Z, r24
    2ae2:	91 83       	std	Z+1, r25	; 0x01
    2ae4:	a2 83       	std	Z+2, r26	; 0x02
    2ae6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2ae8:	fe 01       	movw	r30, r28
    2aea:	e7 5b       	subi	r30, 0xB7	; 183
    2aec:	fe 4f       	sbci	r31, 0xFE	; 254
    2aee:	60 81       	ld	r22, Z
    2af0:	71 81       	ldd	r23, Z+1	; 0x01
    2af2:	82 81       	ldd	r24, Z+2	; 0x02
    2af4:	93 81       	ldd	r25, Z+3	; 0x03
    2af6:	20 e0       	ldi	r18, 0x00	; 0
    2af8:	30 e0       	ldi	r19, 0x00	; 0
    2afa:	40 e8       	ldi	r20, 0x80	; 128
    2afc:	5f e3       	ldi	r21, 0x3F	; 63
    2afe:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2b02:	88 23       	and	r24, r24
    2b04:	44 f4       	brge	.+16     	; 0x2b16 <LCD_firstadd+0x7ba>
		__ticks = 1;
    2b06:	fe 01       	movw	r30, r28
    2b08:	e9 5b       	subi	r30, 0xB9	; 185
    2b0a:	fe 4f       	sbci	r31, 0xFE	; 254
    2b0c:	81 e0       	ldi	r24, 0x01	; 1
    2b0e:	90 e0       	ldi	r25, 0x00	; 0
    2b10:	91 83       	std	Z+1, r25	; 0x01
    2b12:	80 83       	st	Z, r24
    2b14:	64 c0       	rjmp	.+200    	; 0x2bde <LCD_firstadd+0x882>
	else if (__tmp > 65535)
    2b16:	fe 01       	movw	r30, r28
    2b18:	e7 5b       	subi	r30, 0xB7	; 183
    2b1a:	fe 4f       	sbci	r31, 0xFE	; 254
    2b1c:	60 81       	ld	r22, Z
    2b1e:	71 81       	ldd	r23, Z+1	; 0x01
    2b20:	82 81       	ldd	r24, Z+2	; 0x02
    2b22:	93 81       	ldd	r25, Z+3	; 0x03
    2b24:	20 e0       	ldi	r18, 0x00	; 0
    2b26:	3f ef       	ldi	r19, 0xFF	; 255
    2b28:	4f e7       	ldi	r20, 0x7F	; 127
    2b2a:	57 e4       	ldi	r21, 0x47	; 71
    2b2c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2b30:	18 16       	cp	r1, r24
    2b32:	0c f0       	brlt	.+2      	; 0x2b36 <LCD_firstadd+0x7da>
    2b34:	43 c0       	rjmp	.+134    	; 0x2bbc <LCD_firstadd+0x860>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2b36:	fe 01       	movw	r30, r28
    2b38:	e3 5b       	subi	r30, 0xB3	; 179
    2b3a:	fe 4f       	sbci	r31, 0xFE	; 254
    2b3c:	60 81       	ld	r22, Z
    2b3e:	71 81       	ldd	r23, Z+1	; 0x01
    2b40:	82 81       	ldd	r24, Z+2	; 0x02
    2b42:	93 81       	ldd	r25, Z+3	; 0x03
    2b44:	20 e0       	ldi	r18, 0x00	; 0
    2b46:	30 e0       	ldi	r19, 0x00	; 0
    2b48:	40 e2       	ldi	r20, 0x20	; 32
    2b4a:	51 e4       	ldi	r21, 0x41	; 65
    2b4c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b50:	dc 01       	movw	r26, r24
    2b52:	cb 01       	movw	r24, r22
    2b54:	8e 01       	movw	r16, r28
    2b56:	09 5b       	subi	r16, 0xB9	; 185
    2b58:	1e 4f       	sbci	r17, 0xFE	; 254
    2b5a:	bc 01       	movw	r22, r24
    2b5c:	cd 01       	movw	r24, r26
    2b5e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2b62:	dc 01       	movw	r26, r24
    2b64:	cb 01       	movw	r24, r22
    2b66:	f8 01       	movw	r30, r16
    2b68:	91 83       	std	Z+1, r25	; 0x01
    2b6a:	80 83       	st	Z, r24
    2b6c:	1f c0       	rjmp	.+62     	; 0x2bac <LCD_firstadd+0x850>
    2b6e:	fe 01       	movw	r30, r28
    2b70:	eb 5b       	subi	r30, 0xBB	; 187
    2b72:	fe 4f       	sbci	r31, 0xFE	; 254
    2b74:	88 ec       	ldi	r24, 0xC8	; 200
    2b76:	90 e0       	ldi	r25, 0x00	; 0
    2b78:	91 83       	std	Z+1, r25	; 0x01
    2b7a:	80 83       	st	Z, r24
    2b7c:	fe 01       	movw	r30, r28
    2b7e:	eb 5b       	subi	r30, 0xBB	; 187
    2b80:	fe 4f       	sbci	r31, 0xFE	; 254
    2b82:	80 81       	ld	r24, Z
    2b84:	91 81       	ldd	r25, Z+1	; 0x01
    2b86:	01 97       	sbiw	r24, 0x01	; 1
    2b88:	f1 f7       	brne	.-4      	; 0x2b86 <LCD_firstadd+0x82a>
    2b8a:	fe 01       	movw	r30, r28
    2b8c:	eb 5b       	subi	r30, 0xBB	; 187
    2b8e:	fe 4f       	sbci	r31, 0xFE	; 254
    2b90:	91 83       	std	Z+1, r25	; 0x01
    2b92:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2b94:	de 01       	movw	r26, r28
    2b96:	a9 5b       	subi	r26, 0xB9	; 185
    2b98:	be 4f       	sbci	r27, 0xFE	; 254
    2b9a:	fe 01       	movw	r30, r28
    2b9c:	e9 5b       	subi	r30, 0xB9	; 185
    2b9e:	fe 4f       	sbci	r31, 0xFE	; 254
    2ba0:	80 81       	ld	r24, Z
    2ba2:	91 81       	ldd	r25, Z+1	; 0x01
    2ba4:	01 97       	sbiw	r24, 0x01	; 1
    2ba6:	11 96       	adiw	r26, 0x01	; 1
    2ba8:	9c 93       	st	X, r25
    2baa:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2bac:	fe 01       	movw	r30, r28
    2bae:	e9 5b       	subi	r30, 0xB9	; 185
    2bb0:	fe 4f       	sbci	r31, 0xFE	; 254
    2bb2:	80 81       	ld	r24, Z
    2bb4:	91 81       	ldd	r25, Z+1	; 0x01
    2bb6:	00 97       	sbiw	r24, 0x00	; 0
    2bb8:	d1 f6       	brne	.-76     	; 0x2b6e <LCD_firstadd+0x812>
    2bba:	27 c0       	rjmp	.+78     	; 0x2c0a <LCD_firstadd+0x8ae>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2bbc:	8e 01       	movw	r16, r28
    2bbe:	09 5b       	subi	r16, 0xB9	; 185
    2bc0:	1e 4f       	sbci	r17, 0xFE	; 254
    2bc2:	fe 01       	movw	r30, r28
    2bc4:	e7 5b       	subi	r30, 0xB7	; 183
    2bc6:	fe 4f       	sbci	r31, 0xFE	; 254
    2bc8:	60 81       	ld	r22, Z
    2bca:	71 81       	ldd	r23, Z+1	; 0x01
    2bcc:	82 81       	ldd	r24, Z+2	; 0x02
    2bce:	93 81       	ldd	r25, Z+3	; 0x03
    2bd0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2bd4:	dc 01       	movw	r26, r24
    2bd6:	cb 01       	movw	r24, r22
    2bd8:	f8 01       	movw	r30, r16
    2bda:	91 83       	std	Z+1, r25	; 0x01
    2bdc:	80 83       	st	Z, r24
    2bde:	de 01       	movw	r26, r28
    2be0:	ad 5b       	subi	r26, 0xBD	; 189
    2be2:	be 4f       	sbci	r27, 0xFE	; 254
    2be4:	fe 01       	movw	r30, r28
    2be6:	e9 5b       	subi	r30, 0xB9	; 185
    2be8:	fe 4f       	sbci	r31, 0xFE	; 254
    2bea:	80 81       	ld	r24, Z
    2bec:	91 81       	ldd	r25, Z+1	; 0x01
    2bee:	8d 93       	st	X+, r24
    2bf0:	9c 93       	st	X, r25
    2bf2:	fe 01       	movw	r30, r28
    2bf4:	ed 5b       	subi	r30, 0xBD	; 189
    2bf6:	fe 4f       	sbci	r31, 0xFE	; 254
    2bf8:	80 81       	ld	r24, Z
    2bfa:	91 81       	ldd	r25, Z+1	; 0x01
    2bfc:	01 97       	sbiw	r24, 0x01	; 1
    2bfe:	f1 f7       	brne	.-4      	; 0x2bfc <LCD_firstadd+0x8a0>
    2c00:	fe 01       	movw	r30, r28
    2c02:	ed 5b       	subi	r30, 0xBD	; 189
    2c04:	fe 4f       	sbci	r31, 0xFE	; 254
    2c06:	91 83       	std	Z+1, r25	; 0x01
    2c08:	80 83       	st	Z, r24
	_delay_ms(10);
	LCD_write(' ');
    2c0a:	80 e2       	ldi	r24, 0x20	; 32
    2c0c:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
    2c10:	fe 01       	movw	r30, r28
    2c12:	e1 5c       	subi	r30, 0xC1	; 193
    2c14:	fe 4f       	sbci	r31, 0xFE	; 254
    2c16:	80 e0       	ldi	r24, 0x00	; 0
    2c18:	90 e0       	ldi	r25, 0x00	; 0
    2c1a:	a0 e2       	ldi	r26, 0x20	; 32
    2c1c:	b1 e4       	ldi	r27, 0x41	; 65
    2c1e:	80 83       	st	Z, r24
    2c20:	91 83       	std	Z+1, r25	; 0x01
    2c22:	a2 83       	std	Z+2, r26	; 0x02
    2c24:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2c26:	8e 01       	movw	r16, r28
    2c28:	05 5c       	subi	r16, 0xC5	; 197
    2c2a:	1e 4f       	sbci	r17, 0xFE	; 254
    2c2c:	fe 01       	movw	r30, r28
    2c2e:	e1 5c       	subi	r30, 0xC1	; 193
    2c30:	fe 4f       	sbci	r31, 0xFE	; 254
    2c32:	60 81       	ld	r22, Z
    2c34:	71 81       	ldd	r23, Z+1	; 0x01
    2c36:	82 81       	ldd	r24, Z+2	; 0x02
    2c38:	93 81       	ldd	r25, Z+3	; 0x03
    2c3a:	20 e0       	ldi	r18, 0x00	; 0
    2c3c:	30 e0       	ldi	r19, 0x00	; 0
    2c3e:	4a ef       	ldi	r20, 0xFA	; 250
    2c40:	54 e4       	ldi	r21, 0x44	; 68
    2c42:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2c46:	dc 01       	movw	r26, r24
    2c48:	cb 01       	movw	r24, r22
    2c4a:	f8 01       	movw	r30, r16
    2c4c:	80 83       	st	Z, r24
    2c4e:	91 83       	std	Z+1, r25	; 0x01
    2c50:	a2 83       	std	Z+2, r26	; 0x02
    2c52:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2c54:	fe 01       	movw	r30, r28
    2c56:	e5 5c       	subi	r30, 0xC5	; 197
    2c58:	fe 4f       	sbci	r31, 0xFE	; 254
    2c5a:	60 81       	ld	r22, Z
    2c5c:	71 81       	ldd	r23, Z+1	; 0x01
    2c5e:	82 81       	ldd	r24, Z+2	; 0x02
    2c60:	93 81       	ldd	r25, Z+3	; 0x03
    2c62:	20 e0       	ldi	r18, 0x00	; 0
    2c64:	30 e0       	ldi	r19, 0x00	; 0
    2c66:	40 e8       	ldi	r20, 0x80	; 128
    2c68:	5f e3       	ldi	r21, 0x3F	; 63
    2c6a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2c6e:	88 23       	and	r24, r24
    2c70:	44 f4       	brge	.+16     	; 0x2c82 <LCD_firstadd+0x926>
		__ticks = 1;
    2c72:	fe 01       	movw	r30, r28
    2c74:	e7 5c       	subi	r30, 0xC7	; 199
    2c76:	fe 4f       	sbci	r31, 0xFE	; 254
    2c78:	81 e0       	ldi	r24, 0x01	; 1
    2c7a:	90 e0       	ldi	r25, 0x00	; 0
    2c7c:	91 83       	std	Z+1, r25	; 0x01
    2c7e:	80 83       	st	Z, r24
    2c80:	64 c0       	rjmp	.+200    	; 0x2d4a <LCD_firstadd+0x9ee>
	else if (__tmp > 65535)
    2c82:	fe 01       	movw	r30, r28
    2c84:	e5 5c       	subi	r30, 0xC5	; 197
    2c86:	fe 4f       	sbci	r31, 0xFE	; 254
    2c88:	60 81       	ld	r22, Z
    2c8a:	71 81       	ldd	r23, Z+1	; 0x01
    2c8c:	82 81       	ldd	r24, Z+2	; 0x02
    2c8e:	93 81       	ldd	r25, Z+3	; 0x03
    2c90:	20 e0       	ldi	r18, 0x00	; 0
    2c92:	3f ef       	ldi	r19, 0xFF	; 255
    2c94:	4f e7       	ldi	r20, 0x7F	; 127
    2c96:	57 e4       	ldi	r21, 0x47	; 71
    2c98:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2c9c:	18 16       	cp	r1, r24
    2c9e:	0c f0       	brlt	.+2      	; 0x2ca2 <LCD_firstadd+0x946>
    2ca0:	43 c0       	rjmp	.+134    	; 0x2d28 <LCD_firstadd+0x9cc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2ca2:	fe 01       	movw	r30, r28
    2ca4:	e1 5c       	subi	r30, 0xC1	; 193
    2ca6:	fe 4f       	sbci	r31, 0xFE	; 254
    2ca8:	60 81       	ld	r22, Z
    2caa:	71 81       	ldd	r23, Z+1	; 0x01
    2cac:	82 81       	ldd	r24, Z+2	; 0x02
    2cae:	93 81       	ldd	r25, Z+3	; 0x03
    2cb0:	20 e0       	ldi	r18, 0x00	; 0
    2cb2:	30 e0       	ldi	r19, 0x00	; 0
    2cb4:	40 e2       	ldi	r20, 0x20	; 32
    2cb6:	51 e4       	ldi	r21, 0x41	; 65
    2cb8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2cbc:	dc 01       	movw	r26, r24
    2cbe:	cb 01       	movw	r24, r22
    2cc0:	8e 01       	movw	r16, r28
    2cc2:	07 5c       	subi	r16, 0xC7	; 199
    2cc4:	1e 4f       	sbci	r17, 0xFE	; 254
    2cc6:	bc 01       	movw	r22, r24
    2cc8:	cd 01       	movw	r24, r26
    2cca:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2cce:	dc 01       	movw	r26, r24
    2cd0:	cb 01       	movw	r24, r22
    2cd2:	f8 01       	movw	r30, r16
    2cd4:	91 83       	std	Z+1, r25	; 0x01
    2cd6:	80 83       	st	Z, r24
    2cd8:	1f c0       	rjmp	.+62     	; 0x2d18 <LCD_firstadd+0x9bc>
    2cda:	fe 01       	movw	r30, r28
    2cdc:	e9 5c       	subi	r30, 0xC9	; 201
    2cde:	fe 4f       	sbci	r31, 0xFE	; 254
    2ce0:	88 ec       	ldi	r24, 0xC8	; 200
    2ce2:	90 e0       	ldi	r25, 0x00	; 0
    2ce4:	91 83       	std	Z+1, r25	; 0x01
    2ce6:	80 83       	st	Z, r24
    2ce8:	fe 01       	movw	r30, r28
    2cea:	e9 5c       	subi	r30, 0xC9	; 201
    2cec:	fe 4f       	sbci	r31, 0xFE	; 254
    2cee:	80 81       	ld	r24, Z
    2cf0:	91 81       	ldd	r25, Z+1	; 0x01
    2cf2:	01 97       	sbiw	r24, 0x01	; 1
    2cf4:	f1 f7       	brne	.-4      	; 0x2cf2 <LCD_firstadd+0x996>
    2cf6:	fe 01       	movw	r30, r28
    2cf8:	e9 5c       	subi	r30, 0xC9	; 201
    2cfa:	fe 4f       	sbci	r31, 0xFE	; 254
    2cfc:	91 83       	std	Z+1, r25	; 0x01
    2cfe:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2d00:	de 01       	movw	r26, r28
    2d02:	a7 5c       	subi	r26, 0xC7	; 199
    2d04:	be 4f       	sbci	r27, 0xFE	; 254
    2d06:	fe 01       	movw	r30, r28
    2d08:	e7 5c       	subi	r30, 0xC7	; 199
    2d0a:	fe 4f       	sbci	r31, 0xFE	; 254
    2d0c:	80 81       	ld	r24, Z
    2d0e:	91 81       	ldd	r25, Z+1	; 0x01
    2d10:	01 97       	sbiw	r24, 0x01	; 1
    2d12:	11 96       	adiw	r26, 0x01	; 1
    2d14:	9c 93       	st	X, r25
    2d16:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2d18:	fe 01       	movw	r30, r28
    2d1a:	e7 5c       	subi	r30, 0xC7	; 199
    2d1c:	fe 4f       	sbci	r31, 0xFE	; 254
    2d1e:	80 81       	ld	r24, Z
    2d20:	91 81       	ldd	r25, Z+1	; 0x01
    2d22:	00 97       	sbiw	r24, 0x00	; 0
    2d24:	d1 f6       	brne	.-76     	; 0x2cda <LCD_firstadd+0x97e>
    2d26:	27 c0       	rjmp	.+78     	; 0x2d76 <LCD_firstadd+0xa1a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d28:	8e 01       	movw	r16, r28
    2d2a:	07 5c       	subi	r16, 0xC7	; 199
    2d2c:	1e 4f       	sbci	r17, 0xFE	; 254
    2d2e:	fe 01       	movw	r30, r28
    2d30:	e5 5c       	subi	r30, 0xC5	; 197
    2d32:	fe 4f       	sbci	r31, 0xFE	; 254
    2d34:	60 81       	ld	r22, Z
    2d36:	71 81       	ldd	r23, Z+1	; 0x01
    2d38:	82 81       	ldd	r24, Z+2	; 0x02
    2d3a:	93 81       	ldd	r25, Z+3	; 0x03
    2d3c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d40:	dc 01       	movw	r26, r24
    2d42:	cb 01       	movw	r24, r22
    2d44:	f8 01       	movw	r30, r16
    2d46:	91 83       	std	Z+1, r25	; 0x01
    2d48:	80 83       	st	Z, r24
    2d4a:	de 01       	movw	r26, r28
    2d4c:	ab 5c       	subi	r26, 0xCB	; 203
    2d4e:	be 4f       	sbci	r27, 0xFE	; 254
    2d50:	fe 01       	movw	r30, r28
    2d52:	e7 5c       	subi	r30, 0xC7	; 199
    2d54:	fe 4f       	sbci	r31, 0xFE	; 254
    2d56:	80 81       	ld	r24, Z
    2d58:	91 81       	ldd	r25, Z+1	; 0x01
    2d5a:	8d 93       	st	X+, r24
    2d5c:	9c 93       	st	X, r25
    2d5e:	fe 01       	movw	r30, r28
    2d60:	eb 5c       	subi	r30, 0xCB	; 203
    2d62:	fe 4f       	sbci	r31, 0xFE	; 254
    2d64:	80 81       	ld	r24, Z
    2d66:	91 81       	ldd	r25, Z+1	; 0x01
    2d68:	01 97       	sbiw	r24, 0x01	; 1
    2d6a:	f1 f7       	brne	.-4      	; 0x2d68 <LCD_firstadd+0xa0c>
    2d6c:	fe 01       	movw	r30, r28
    2d6e:	eb 5c       	subi	r30, 0xCB	; 203
    2d70:	fe 4f       	sbci	r31, 0xFE	; 254
    2d72:	91 83       	std	Z+1, r25	; 0x01
    2d74:	80 83       	st	Z, r24
	_delay_ms(10);
	LCD_write('A');
    2d76:	81 e4       	ldi	r24, 0x41	; 65
    2d78:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
    2d7c:	fe 01       	movw	r30, r28
    2d7e:	ef 5c       	subi	r30, 0xCF	; 207
    2d80:	fe 4f       	sbci	r31, 0xFE	; 254
    2d82:	80 e0       	ldi	r24, 0x00	; 0
    2d84:	90 e0       	ldi	r25, 0x00	; 0
    2d86:	a0 e2       	ldi	r26, 0x20	; 32
    2d88:	b1 e4       	ldi	r27, 0x41	; 65
    2d8a:	80 83       	st	Z, r24
    2d8c:	91 83       	std	Z+1, r25	; 0x01
    2d8e:	a2 83       	std	Z+2, r26	; 0x02
    2d90:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2d92:	8e 01       	movw	r16, r28
    2d94:	03 5d       	subi	r16, 0xD3	; 211
    2d96:	1e 4f       	sbci	r17, 0xFE	; 254
    2d98:	fe 01       	movw	r30, r28
    2d9a:	ef 5c       	subi	r30, 0xCF	; 207
    2d9c:	fe 4f       	sbci	r31, 0xFE	; 254
    2d9e:	60 81       	ld	r22, Z
    2da0:	71 81       	ldd	r23, Z+1	; 0x01
    2da2:	82 81       	ldd	r24, Z+2	; 0x02
    2da4:	93 81       	ldd	r25, Z+3	; 0x03
    2da6:	20 e0       	ldi	r18, 0x00	; 0
    2da8:	30 e0       	ldi	r19, 0x00	; 0
    2daa:	4a ef       	ldi	r20, 0xFA	; 250
    2dac:	54 e4       	ldi	r21, 0x44	; 68
    2dae:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2db2:	dc 01       	movw	r26, r24
    2db4:	cb 01       	movw	r24, r22
    2db6:	f8 01       	movw	r30, r16
    2db8:	80 83       	st	Z, r24
    2dba:	91 83       	std	Z+1, r25	; 0x01
    2dbc:	a2 83       	std	Z+2, r26	; 0x02
    2dbe:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2dc0:	fe 01       	movw	r30, r28
    2dc2:	e3 5d       	subi	r30, 0xD3	; 211
    2dc4:	fe 4f       	sbci	r31, 0xFE	; 254
    2dc6:	60 81       	ld	r22, Z
    2dc8:	71 81       	ldd	r23, Z+1	; 0x01
    2dca:	82 81       	ldd	r24, Z+2	; 0x02
    2dcc:	93 81       	ldd	r25, Z+3	; 0x03
    2dce:	20 e0       	ldi	r18, 0x00	; 0
    2dd0:	30 e0       	ldi	r19, 0x00	; 0
    2dd2:	40 e8       	ldi	r20, 0x80	; 128
    2dd4:	5f e3       	ldi	r21, 0x3F	; 63
    2dd6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2dda:	88 23       	and	r24, r24
    2ddc:	44 f4       	brge	.+16     	; 0x2dee <LCD_firstadd+0xa92>
		__ticks = 1;
    2dde:	fe 01       	movw	r30, r28
    2de0:	e5 5d       	subi	r30, 0xD5	; 213
    2de2:	fe 4f       	sbci	r31, 0xFE	; 254
    2de4:	81 e0       	ldi	r24, 0x01	; 1
    2de6:	90 e0       	ldi	r25, 0x00	; 0
    2de8:	91 83       	std	Z+1, r25	; 0x01
    2dea:	80 83       	st	Z, r24
    2dec:	64 c0       	rjmp	.+200    	; 0x2eb6 <LCD_firstadd+0xb5a>
	else if (__tmp > 65535)
    2dee:	fe 01       	movw	r30, r28
    2df0:	e3 5d       	subi	r30, 0xD3	; 211
    2df2:	fe 4f       	sbci	r31, 0xFE	; 254
    2df4:	60 81       	ld	r22, Z
    2df6:	71 81       	ldd	r23, Z+1	; 0x01
    2df8:	82 81       	ldd	r24, Z+2	; 0x02
    2dfa:	93 81       	ldd	r25, Z+3	; 0x03
    2dfc:	20 e0       	ldi	r18, 0x00	; 0
    2dfe:	3f ef       	ldi	r19, 0xFF	; 255
    2e00:	4f e7       	ldi	r20, 0x7F	; 127
    2e02:	57 e4       	ldi	r21, 0x47	; 71
    2e04:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2e08:	18 16       	cp	r1, r24
    2e0a:	0c f0       	brlt	.+2      	; 0x2e0e <LCD_firstadd+0xab2>
    2e0c:	43 c0       	rjmp	.+134    	; 0x2e94 <LCD_firstadd+0xb38>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2e0e:	fe 01       	movw	r30, r28
    2e10:	ef 5c       	subi	r30, 0xCF	; 207
    2e12:	fe 4f       	sbci	r31, 0xFE	; 254
    2e14:	60 81       	ld	r22, Z
    2e16:	71 81       	ldd	r23, Z+1	; 0x01
    2e18:	82 81       	ldd	r24, Z+2	; 0x02
    2e1a:	93 81       	ldd	r25, Z+3	; 0x03
    2e1c:	20 e0       	ldi	r18, 0x00	; 0
    2e1e:	30 e0       	ldi	r19, 0x00	; 0
    2e20:	40 e2       	ldi	r20, 0x20	; 32
    2e22:	51 e4       	ldi	r21, 0x41	; 65
    2e24:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2e28:	dc 01       	movw	r26, r24
    2e2a:	cb 01       	movw	r24, r22
    2e2c:	8e 01       	movw	r16, r28
    2e2e:	05 5d       	subi	r16, 0xD5	; 213
    2e30:	1e 4f       	sbci	r17, 0xFE	; 254
    2e32:	bc 01       	movw	r22, r24
    2e34:	cd 01       	movw	r24, r26
    2e36:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e3a:	dc 01       	movw	r26, r24
    2e3c:	cb 01       	movw	r24, r22
    2e3e:	f8 01       	movw	r30, r16
    2e40:	91 83       	std	Z+1, r25	; 0x01
    2e42:	80 83       	st	Z, r24
    2e44:	1f c0       	rjmp	.+62     	; 0x2e84 <LCD_firstadd+0xb28>
    2e46:	fe 01       	movw	r30, r28
    2e48:	e7 5d       	subi	r30, 0xD7	; 215
    2e4a:	fe 4f       	sbci	r31, 0xFE	; 254
    2e4c:	88 ec       	ldi	r24, 0xC8	; 200
    2e4e:	90 e0       	ldi	r25, 0x00	; 0
    2e50:	91 83       	std	Z+1, r25	; 0x01
    2e52:	80 83       	st	Z, r24
    2e54:	fe 01       	movw	r30, r28
    2e56:	e7 5d       	subi	r30, 0xD7	; 215
    2e58:	fe 4f       	sbci	r31, 0xFE	; 254
    2e5a:	80 81       	ld	r24, Z
    2e5c:	91 81       	ldd	r25, Z+1	; 0x01
    2e5e:	01 97       	sbiw	r24, 0x01	; 1
    2e60:	f1 f7       	brne	.-4      	; 0x2e5e <LCD_firstadd+0xb02>
    2e62:	fe 01       	movw	r30, r28
    2e64:	e7 5d       	subi	r30, 0xD7	; 215
    2e66:	fe 4f       	sbci	r31, 0xFE	; 254
    2e68:	91 83       	std	Z+1, r25	; 0x01
    2e6a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2e6c:	de 01       	movw	r26, r28
    2e6e:	a5 5d       	subi	r26, 0xD5	; 213
    2e70:	be 4f       	sbci	r27, 0xFE	; 254
    2e72:	fe 01       	movw	r30, r28
    2e74:	e5 5d       	subi	r30, 0xD5	; 213
    2e76:	fe 4f       	sbci	r31, 0xFE	; 254
    2e78:	80 81       	ld	r24, Z
    2e7a:	91 81       	ldd	r25, Z+1	; 0x01
    2e7c:	01 97       	sbiw	r24, 0x01	; 1
    2e7e:	11 96       	adiw	r26, 0x01	; 1
    2e80:	9c 93       	st	X, r25
    2e82:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2e84:	fe 01       	movw	r30, r28
    2e86:	e5 5d       	subi	r30, 0xD5	; 213
    2e88:	fe 4f       	sbci	r31, 0xFE	; 254
    2e8a:	80 81       	ld	r24, Z
    2e8c:	91 81       	ldd	r25, Z+1	; 0x01
    2e8e:	00 97       	sbiw	r24, 0x00	; 0
    2e90:	d1 f6       	brne	.-76     	; 0x2e46 <LCD_firstadd+0xaea>
    2e92:	27 c0       	rjmp	.+78     	; 0x2ee2 <LCD_firstadd+0xb86>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2e94:	8e 01       	movw	r16, r28
    2e96:	05 5d       	subi	r16, 0xD5	; 213
    2e98:	1e 4f       	sbci	r17, 0xFE	; 254
    2e9a:	fe 01       	movw	r30, r28
    2e9c:	e3 5d       	subi	r30, 0xD3	; 211
    2e9e:	fe 4f       	sbci	r31, 0xFE	; 254
    2ea0:	60 81       	ld	r22, Z
    2ea2:	71 81       	ldd	r23, Z+1	; 0x01
    2ea4:	82 81       	ldd	r24, Z+2	; 0x02
    2ea6:	93 81       	ldd	r25, Z+3	; 0x03
    2ea8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2eac:	dc 01       	movw	r26, r24
    2eae:	cb 01       	movw	r24, r22
    2eb0:	f8 01       	movw	r30, r16
    2eb2:	91 83       	std	Z+1, r25	; 0x01
    2eb4:	80 83       	st	Z, r24
    2eb6:	de 01       	movw	r26, r28
    2eb8:	a9 5d       	subi	r26, 0xD9	; 217
    2eba:	be 4f       	sbci	r27, 0xFE	; 254
    2ebc:	fe 01       	movw	r30, r28
    2ebe:	e5 5d       	subi	r30, 0xD5	; 213
    2ec0:	fe 4f       	sbci	r31, 0xFE	; 254
    2ec2:	80 81       	ld	r24, Z
    2ec4:	91 81       	ldd	r25, Z+1	; 0x01
    2ec6:	8d 93       	st	X+, r24
    2ec8:	9c 93       	st	X, r25
    2eca:	fe 01       	movw	r30, r28
    2ecc:	e9 5d       	subi	r30, 0xD9	; 217
    2ece:	fe 4f       	sbci	r31, 0xFE	; 254
    2ed0:	80 81       	ld	r24, Z
    2ed2:	91 81       	ldd	r25, Z+1	; 0x01
    2ed4:	01 97       	sbiw	r24, 0x01	; 1
    2ed6:	f1 f7       	brne	.-4      	; 0x2ed4 <LCD_firstadd+0xb78>
    2ed8:	fe 01       	movw	r30, r28
    2eda:	e9 5d       	subi	r30, 0xD9	; 217
    2edc:	fe 4f       	sbci	r31, 0xFE	; 254
    2ede:	91 83       	std	Z+1, r25	; 0x01
    2ee0:	80 83       	st	Z, r24
	_delay_ms(10);
	LCD_write('c');
    2ee2:	83 e6       	ldi	r24, 0x63	; 99
    2ee4:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
    2ee8:	fe 01       	movw	r30, r28
    2eea:	ed 5d       	subi	r30, 0xDD	; 221
    2eec:	fe 4f       	sbci	r31, 0xFE	; 254
    2eee:	80 e0       	ldi	r24, 0x00	; 0
    2ef0:	90 e0       	ldi	r25, 0x00	; 0
    2ef2:	a0 e2       	ldi	r26, 0x20	; 32
    2ef4:	b1 e4       	ldi	r27, 0x41	; 65
    2ef6:	80 83       	st	Z, r24
    2ef8:	91 83       	std	Z+1, r25	; 0x01
    2efa:	a2 83       	std	Z+2, r26	; 0x02
    2efc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2efe:	8e 01       	movw	r16, r28
    2f00:	01 5e       	subi	r16, 0xE1	; 225
    2f02:	1e 4f       	sbci	r17, 0xFE	; 254
    2f04:	fe 01       	movw	r30, r28
    2f06:	ed 5d       	subi	r30, 0xDD	; 221
    2f08:	fe 4f       	sbci	r31, 0xFE	; 254
    2f0a:	60 81       	ld	r22, Z
    2f0c:	71 81       	ldd	r23, Z+1	; 0x01
    2f0e:	82 81       	ldd	r24, Z+2	; 0x02
    2f10:	93 81       	ldd	r25, Z+3	; 0x03
    2f12:	20 e0       	ldi	r18, 0x00	; 0
    2f14:	30 e0       	ldi	r19, 0x00	; 0
    2f16:	4a ef       	ldi	r20, 0xFA	; 250
    2f18:	54 e4       	ldi	r21, 0x44	; 68
    2f1a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2f1e:	dc 01       	movw	r26, r24
    2f20:	cb 01       	movw	r24, r22
    2f22:	f8 01       	movw	r30, r16
    2f24:	80 83       	st	Z, r24
    2f26:	91 83       	std	Z+1, r25	; 0x01
    2f28:	a2 83       	std	Z+2, r26	; 0x02
    2f2a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2f2c:	fe 01       	movw	r30, r28
    2f2e:	e1 5e       	subi	r30, 0xE1	; 225
    2f30:	fe 4f       	sbci	r31, 0xFE	; 254
    2f32:	60 81       	ld	r22, Z
    2f34:	71 81       	ldd	r23, Z+1	; 0x01
    2f36:	82 81       	ldd	r24, Z+2	; 0x02
    2f38:	93 81       	ldd	r25, Z+3	; 0x03
    2f3a:	20 e0       	ldi	r18, 0x00	; 0
    2f3c:	30 e0       	ldi	r19, 0x00	; 0
    2f3e:	40 e8       	ldi	r20, 0x80	; 128
    2f40:	5f e3       	ldi	r21, 0x3F	; 63
    2f42:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2f46:	88 23       	and	r24, r24
    2f48:	44 f4       	brge	.+16     	; 0x2f5a <LCD_firstadd+0xbfe>
		__ticks = 1;
    2f4a:	fe 01       	movw	r30, r28
    2f4c:	e3 5e       	subi	r30, 0xE3	; 227
    2f4e:	fe 4f       	sbci	r31, 0xFE	; 254
    2f50:	81 e0       	ldi	r24, 0x01	; 1
    2f52:	90 e0       	ldi	r25, 0x00	; 0
    2f54:	91 83       	std	Z+1, r25	; 0x01
    2f56:	80 83       	st	Z, r24
    2f58:	64 c0       	rjmp	.+200    	; 0x3022 <LCD_firstadd+0xcc6>
	else if (__tmp > 65535)
    2f5a:	fe 01       	movw	r30, r28
    2f5c:	e1 5e       	subi	r30, 0xE1	; 225
    2f5e:	fe 4f       	sbci	r31, 0xFE	; 254
    2f60:	60 81       	ld	r22, Z
    2f62:	71 81       	ldd	r23, Z+1	; 0x01
    2f64:	82 81       	ldd	r24, Z+2	; 0x02
    2f66:	93 81       	ldd	r25, Z+3	; 0x03
    2f68:	20 e0       	ldi	r18, 0x00	; 0
    2f6a:	3f ef       	ldi	r19, 0xFF	; 255
    2f6c:	4f e7       	ldi	r20, 0x7F	; 127
    2f6e:	57 e4       	ldi	r21, 0x47	; 71
    2f70:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2f74:	18 16       	cp	r1, r24
    2f76:	0c f0       	brlt	.+2      	; 0x2f7a <LCD_firstadd+0xc1e>
    2f78:	43 c0       	rjmp	.+134    	; 0x3000 <LCD_firstadd+0xca4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2f7a:	fe 01       	movw	r30, r28
    2f7c:	ed 5d       	subi	r30, 0xDD	; 221
    2f7e:	fe 4f       	sbci	r31, 0xFE	; 254
    2f80:	60 81       	ld	r22, Z
    2f82:	71 81       	ldd	r23, Z+1	; 0x01
    2f84:	82 81       	ldd	r24, Z+2	; 0x02
    2f86:	93 81       	ldd	r25, Z+3	; 0x03
    2f88:	20 e0       	ldi	r18, 0x00	; 0
    2f8a:	30 e0       	ldi	r19, 0x00	; 0
    2f8c:	40 e2       	ldi	r20, 0x20	; 32
    2f8e:	51 e4       	ldi	r21, 0x41	; 65
    2f90:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2f94:	dc 01       	movw	r26, r24
    2f96:	cb 01       	movw	r24, r22
    2f98:	8e 01       	movw	r16, r28
    2f9a:	03 5e       	subi	r16, 0xE3	; 227
    2f9c:	1e 4f       	sbci	r17, 0xFE	; 254
    2f9e:	bc 01       	movw	r22, r24
    2fa0:	cd 01       	movw	r24, r26
    2fa2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2fa6:	dc 01       	movw	r26, r24
    2fa8:	cb 01       	movw	r24, r22
    2faa:	f8 01       	movw	r30, r16
    2fac:	91 83       	std	Z+1, r25	; 0x01
    2fae:	80 83       	st	Z, r24
    2fb0:	1f c0       	rjmp	.+62     	; 0x2ff0 <LCD_firstadd+0xc94>
    2fb2:	fe 01       	movw	r30, r28
    2fb4:	e5 5e       	subi	r30, 0xE5	; 229
    2fb6:	fe 4f       	sbci	r31, 0xFE	; 254
    2fb8:	88 ec       	ldi	r24, 0xC8	; 200
    2fba:	90 e0       	ldi	r25, 0x00	; 0
    2fbc:	91 83       	std	Z+1, r25	; 0x01
    2fbe:	80 83       	st	Z, r24
    2fc0:	fe 01       	movw	r30, r28
    2fc2:	e5 5e       	subi	r30, 0xE5	; 229
    2fc4:	fe 4f       	sbci	r31, 0xFE	; 254
    2fc6:	80 81       	ld	r24, Z
    2fc8:	91 81       	ldd	r25, Z+1	; 0x01
    2fca:	01 97       	sbiw	r24, 0x01	; 1
    2fcc:	f1 f7       	brne	.-4      	; 0x2fca <LCD_firstadd+0xc6e>
    2fce:	fe 01       	movw	r30, r28
    2fd0:	e5 5e       	subi	r30, 0xE5	; 229
    2fd2:	fe 4f       	sbci	r31, 0xFE	; 254
    2fd4:	91 83       	std	Z+1, r25	; 0x01
    2fd6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2fd8:	de 01       	movw	r26, r28
    2fda:	a3 5e       	subi	r26, 0xE3	; 227
    2fdc:	be 4f       	sbci	r27, 0xFE	; 254
    2fde:	fe 01       	movw	r30, r28
    2fe0:	e3 5e       	subi	r30, 0xE3	; 227
    2fe2:	fe 4f       	sbci	r31, 0xFE	; 254
    2fe4:	80 81       	ld	r24, Z
    2fe6:	91 81       	ldd	r25, Z+1	; 0x01
    2fe8:	01 97       	sbiw	r24, 0x01	; 1
    2fea:	11 96       	adiw	r26, 0x01	; 1
    2fec:	9c 93       	st	X, r25
    2fee:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2ff0:	fe 01       	movw	r30, r28
    2ff2:	e3 5e       	subi	r30, 0xE3	; 227
    2ff4:	fe 4f       	sbci	r31, 0xFE	; 254
    2ff6:	80 81       	ld	r24, Z
    2ff8:	91 81       	ldd	r25, Z+1	; 0x01
    2ffa:	00 97       	sbiw	r24, 0x00	; 0
    2ffc:	d1 f6       	brne	.-76     	; 0x2fb2 <LCD_firstadd+0xc56>
    2ffe:	27 c0       	rjmp	.+78     	; 0x304e <LCD_firstadd+0xcf2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3000:	8e 01       	movw	r16, r28
    3002:	03 5e       	subi	r16, 0xE3	; 227
    3004:	1e 4f       	sbci	r17, 0xFE	; 254
    3006:	fe 01       	movw	r30, r28
    3008:	e1 5e       	subi	r30, 0xE1	; 225
    300a:	fe 4f       	sbci	r31, 0xFE	; 254
    300c:	60 81       	ld	r22, Z
    300e:	71 81       	ldd	r23, Z+1	; 0x01
    3010:	82 81       	ldd	r24, Z+2	; 0x02
    3012:	93 81       	ldd	r25, Z+3	; 0x03
    3014:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3018:	dc 01       	movw	r26, r24
    301a:	cb 01       	movw	r24, r22
    301c:	f8 01       	movw	r30, r16
    301e:	91 83       	std	Z+1, r25	; 0x01
    3020:	80 83       	st	Z, r24
    3022:	de 01       	movw	r26, r28
    3024:	a7 5e       	subi	r26, 0xE7	; 231
    3026:	be 4f       	sbci	r27, 0xFE	; 254
    3028:	fe 01       	movw	r30, r28
    302a:	e3 5e       	subi	r30, 0xE3	; 227
    302c:	fe 4f       	sbci	r31, 0xFE	; 254
    302e:	80 81       	ld	r24, Z
    3030:	91 81       	ldd	r25, Z+1	; 0x01
    3032:	8d 93       	st	X+, r24
    3034:	9c 93       	st	X, r25
    3036:	fe 01       	movw	r30, r28
    3038:	e7 5e       	subi	r30, 0xE7	; 231
    303a:	fe 4f       	sbci	r31, 0xFE	; 254
    303c:	80 81       	ld	r24, Z
    303e:	91 81       	ldd	r25, Z+1	; 0x01
    3040:	01 97       	sbiw	r24, 0x01	; 1
    3042:	f1 f7       	brne	.-4      	; 0x3040 <LCD_firstadd+0xce4>
    3044:	fe 01       	movw	r30, r28
    3046:	e7 5e       	subi	r30, 0xE7	; 231
    3048:	fe 4f       	sbci	r31, 0xFE	; 254
    304a:	91 83       	std	Z+1, r25	; 0x01
    304c:	80 83       	st	Z, r24
	_delay_ms(10);
	LCD_write('a');
    304e:	81 e6       	ldi	r24, 0x61	; 97
    3050:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
    3054:	fe 01       	movw	r30, r28
    3056:	eb 5e       	subi	r30, 0xEB	; 235
    3058:	fe 4f       	sbci	r31, 0xFE	; 254
    305a:	80 e0       	ldi	r24, 0x00	; 0
    305c:	90 e0       	ldi	r25, 0x00	; 0
    305e:	a0 e2       	ldi	r26, 0x20	; 32
    3060:	b1 e4       	ldi	r27, 0x41	; 65
    3062:	80 83       	st	Z, r24
    3064:	91 83       	std	Z+1, r25	; 0x01
    3066:	a2 83       	std	Z+2, r26	; 0x02
    3068:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    306a:	8e 01       	movw	r16, r28
    306c:	0f 5e       	subi	r16, 0xEF	; 239
    306e:	1e 4f       	sbci	r17, 0xFE	; 254
    3070:	fe 01       	movw	r30, r28
    3072:	eb 5e       	subi	r30, 0xEB	; 235
    3074:	fe 4f       	sbci	r31, 0xFE	; 254
    3076:	60 81       	ld	r22, Z
    3078:	71 81       	ldd	r23, Z+1	; 0x01
    307a:	82 81       	ldd	r24, Z+2	; 0x02
    307c:	93 81       	ldd	r25, Z+3	; 0x03
    307e:	20 e0       	ldi	r18, 0x00	; 0
    3080:	30 e0       	ldi	r19, 0x00	; 0
    3082:	4a ef       	ldi	r20, 0xFA	; 250
    3084:	54 e4       	ldi	r21, 0x44	; 68
    3086:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    308a:	dc 01       	movw	r26, r24
    308c:	cb 01       	movw	r24, r22
    308e:	f8 01       	movw	r30, r16
    3090:	80 83       	st	Z, r24
    3092:	91 83       	std	Z+1, r25	; 0x01
    3094:	a2 83       	std	Z+2, r26	; 0x02
    3096:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3098:	fe 01       	movw	r30, r28
    309a:	ef 5e       	subi	r30, 0xEF	; 239
    309c:	fe 4f       	sbci	r31, 0xFE	; 254
    309e:	60 81       	ld	r22, Z
    30a0:	71 81       	ldd	r23, Z+1	; 0x01
    30a2:	82 81       	ldd	r24, Z+2	; 0x02
    30a4:	93 81       	ldd	r25, Z+3	; 0x03
    30a6:	20 e0       	ldi	r18, 0x00	; 0
    30a8:	30 e0       	ldi	r19, 0x00	; 0
    30aa:	40 e8       	ldi	r20, 0x80	; 128
    30ac:	5f e3       	ldi	r21, 0x3F	; 63
    30ae:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    30b2:	88 23       	and	r24, r24
    30b4:	44 f4       	brge	.+16     	; 0x30c6 <LCD_firstadd+0xd6a>
		__ticks = 1;
    30b6:	fe 01       	movw	r30, r28
    30b8:	e1 5f       	subi	r30, 0xF1	; 241
    30ba:	fe 4f       	sbci	r31, 0xFE	; 254
    30bc:	81 e0       	ldi	r24, 0x01	; 1
    30be:	90 e0       	ldi	r25, 0x00	; 0
    30c0:	91 83       	std	Z+1, r25	; 0x01
    30c2:	80 83       	st	Z, r24
    30c4:	64 c0       	rjmp	.+200    	; 0x318e <LCD_firstadd+0xe32>
	else if (__tmp > 65535)
    30c6:	fe 01       	movw	r30, r28
    30c8:	ef 5e       	subi	r30, 0xEF	; 239
    30ca:	fe 4f       	sbci	r31, 0xFE	; 254
    30cc:	60 81       	ld	r22, Z
    30ce:	71 81       	ldd	r23, Z+1	; 0x01
    30d0:	82 81       	ldd	r24, Z+2	; 0x02
    30d2:	93 81       	ldd	r25, Z+3	; 0x03
    30d4:	20 e0       	ldi	r18, 0x00	; 0
    30d6:	3f ef       	ldi	r19, 0xFF	; 255
    30d8:	4f e7       	ldi	r20, 0x7F	; 127
    30da:	57 e4       	ldi	r21, 0x47	; 71
    30dc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    30e0:	18 16       	cp	r1, r24
    30e2:	0c f0       	brlt	.+2      	; 0x30e6 <LCD_firstadd+0xd8a>
    30e4:	43 c0       	rjmp	.+134    	; 0x316c <LCD_firstadd+0xe10>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    30e6:	fe 01       	movw	r30, r28
    30e8:	eb 5e       	subi	r30, 0xEB	; 235
    30ea:	fe 4f       	sbci	r31, 0xFE	; 254
    30ec:	60 81       	ld	r22, Z
    30ee:	71 81       	ldd	r23, Z+1	; 0x01
    30f0:	82 81       	ldd	r24, Z+2	; 0x02
    30f2:	93 81       	ldd	r25, Z+3	; 0x03
    30f4:	20 e0       	ldi	r18, 0x00	; 0
    30f6:	30 e0       	ldi	r19, 0x00	; 0
    30f8:	40 e2       	ldi	r20, 0x20	; 32
    30fa:	51 e4       	ldi	r21, 0x41	; 65
    30fc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3100:	dc 01       	movw	r26, r24
    3102:	cb 01       	movw	r24, r22
    3104:	8e 01       	movw	r16, r28
    3106:	01 5f       	subi	r16, 0xF1	; 241
    3108:	1e 4f       	sbci	r17, 0xFE	; 254
    310a:	bc 01       	movw	r22, r24
    310c:	cd 01       	movw	r24, r26
    310e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3112:	dc 01       	movw	r26, r24
    3114:	cb 01       	movw	r24, r22
    3116:	f8 01       	movw	r30, r16
    3118:	91 83       	std	Z+1, r25	; 0x01
    311a:	80 83       	st	Z, r24
    311c:	1f c0       	rjmp	.+62     	; 0x315c <LCD_firstadd+0xe00>
    311e:	fe 01       	movw	r30, r28
    3120:	e3 5f       	subi	r30, 0xF3	; 243
    3122:	fe 4f       	sbci	r31, 0xFE	; 254
    3124:	88 ec       	ldi	r24, 0xC8	; 200
    3126:	90 e0       	ldi	r25, 0x00	; 0
    3128:	91 83       	std	Z+1, r25	; 0x01
    312a:	80 83       	st	Z, r24
    312c:	fe 01       	movw	r30, r28
    312e:	e3 5f       	subi	r30, 0xF3	; 243
    3130:	fe 4f       	sbci	r31, 0xFE	; 254
    3132:	80 81       	ld	r24, Z
    3134:	91 81       	ldd	r25, Z+1	; 0x01
    3136:	01 97       	sbiw	r24, 0x01	; 1
    3138:	f1 f7       	brne	.-4      	; 0x3136 <LCD_firstadd+0xdda>
    313a:	fe 01       	movw	r30, r28
    313c:	e3 5f       	subi	r30, 0xF3	; 243
    313e:	fe 4f       	sbci	r31, 0xFE	; 254
    3140:	91 83       	std	Z+1, r25	; 0x01
    3142:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3144:	de 01       	movw	r26, r28
    3146:	a1 5f       	subi	r26, 0xF1	; 241
    3148:	be 4f       	sbci	r27, 0xFE	; 254
    314a:	fe 01       	movw	r30, r28
    314c:	e1 5f       	subi	r30, 0xF1	; 241
    314e:	fe 4f       	sbci	r31, 0xFE	; 254
    3150:	80 81       	ld	r24, Z
    3152:	91 81       	ldd	r25, Z+1	; 0x01
    3154:	01 97       	sbiw	r24, 0x01	; 1
    3156:	11 96       	adiw	r26, 0x01	; 1
    3158:	9c 93       	st	X, r25
    315a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    315c:	fe 01       	movw	r30, r28
    315e:	e1 5f       	subi	r30, 0xF1	; 241
    3160:	fe 4f       	sbci	r31, 0xFE	; 254
    3162:	80 81       	ld	r24, Z
    3164:	91 81       	ldd	r25, Z+1	; 0x01
    3166:	00 97       	sbiw	r24, 0x00	; 0
    3168:	d1 f6       	brne	.-76     	; 0x311e <LCD_firstadd+0xdc2>
    316a:	27 c0       	rjmp	.+78     	; 0x31ba <LCD_firstadd+0xe5e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    316c:	8e 01       	movw	r16, r28
    316e:	01 5f       	subi	r16, 0xF1	; 241
    3170:	1e 4f       	sbci	r17, 0xFE	; 254
    3172:	fe 01       	movw	r30, r28
    3174:	ef 5e       	subi	r30, 0xEF	; 239
    3176:	fe 4f       	sbci	r31, 0xFE	; 254
    3178:	60 81       	ld	r22, Z
    317a:	71 81       	ldd	r23, Z+1	; 0x01
    317c:	82 81       	ldd	r24, Z+2	; 0x02
    317e:	93 81       	ldd	r25, Z+3	; 0x03
    3180:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3184:	dc 01       	movw	r26, r24
    3186:	cb 01       	movw	r24, r22
    3188:	f8 01       	movw	r30, r16
    318a:	91 83       	std	Z+1, r25	; 0x01
    318c:	80 83       	st	Z, r24
    318e:	de 01       	movw	r26, r28
    3190:	a5 5f       	subi	r26, 0xF5	; 245
    3192:	be 4f       	sbci	r27, 0xFE	; 254
    3194:	fe 01       	movw	r30, r28
    3196:	e1 5f       	subi	r30, 0xF1	; 241
    3198:	fe 4f       	sbci	r31, 0xFE	; 254
    319a:	80 81       	ld	r24, Z
    319c:	91 81       	ldd	r25, Z+1	; 0x01
    319e:	8d 93       	st	X+, r24
    31a0:	9c 93       	st	X, r25
    31a2:	fe 01       	movw	r30, r28
    31a4:	e5 5f       	subi	r30, 0xF5	; 245
    31a6:	fe 4f       	sbci	r31, 0xFE	; 254
    31a8:	80 81       	ld	r24, Z
    31aa:	91 81       	ldd	r25, Z+1	; 0x01
    31ac:	01 97       	sbiw	r24, 0x01	; 1
    31ae:	f1 f7       	brne	.-4      	; 0x31ac <LCD_firstadd+0xe50>
    31b0:	fe 01       	movw	r30, r28
    31b2:	e5 5f       	subi	r30, 0xF5	; 245
    31b4:	fe 4f       	sbci	r31, 0xFE	; 254
    31b6:	91 83       	std	Z+1, r25	; 0x01
    31b8:	80 83       	st	Z, r24
	_delay_ms(10);
	LCD_write('d');
    31ba:	84 e6       	ldi	r24, 0x64	; 100
    31bc:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
    31c0:	fe 01       	movw	r30, r28
    31c2:	e9 5f       	subi	r30, 0xF9	; 249
    31c4:	fe 4f       	sbci	r31, 0xFE	; 254
    31c6:	80 e0       	ldi	r24, 0x00	; 0
    31c8:	90 e0       	ldi	r25, 0x00	; 0
    31ca:	a0 e2       	ldi	r26, 0x20	; 32
    31cc:	b1 e4       	ldi	r27, 0x41	; 65
    31ce:	80 83       	st	Z, r24
    31d0:	91 83       	std	Z+1, r25	; 0x01
    31d2:	a2 83       	std	Z+2, r26	; 0x02
    31d4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    31d6:	8e 01       	movw	r16, r28
    31d8:	0d 5f       	subi	r16, 0xFD	; 253
    31da:	1e 4f       	sbci	r17, 0xFE	; 254
    31dc:	fe 01       	movw	r30, r28
    31de:	e9 5f       	subi	r30, 0xF9	; 249
    31e0:	fe 4f       	sbci	r31, 0xFE	; 254
    31e2:	60 81       	ld	r22, Z
    31e4:	71 81       	ldd	r23, Z+1	; 0x01
    31e6:	82 81       	ldd	r24, Z+2	; 0x02
    31e8:	93 81       	ldd	r25, Z+3	; 0x03
    31ea:	20 e0       	ldi	r18, 0x00	; 0
    31ec:	30 e0       	ldi	r19, 0x00	; 0
    31ee:	4a ef       	ldi	r20, 0xFA	; 250
    31f0:	54 e4       	ldi	r21, 0x44	; 68
    31f2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    31f6:	dc 01       	movw	r26, r24
    31f8:	cb 01       	movw	r24, r22
    31fa:	f8 01       	movw	r30, r16
    31fc:	80 83       	st	Z, r24
    31fe:	91 83       	std	Z+1, r25	; 0x01
    3200:	a2 83       	std	Z+2, r26	; 0x02
    3202:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3204:	fe 01       	movw	r30, r28
    3206:	ed 5f       	subi	r30, 0xFD	; 253
    3208:	fe 4f       	sbci	r31, 0xFE	; 254
    320a:	60 81       	ld	r22, Z
    320c:	71 81       	ldd	r23, Z+1	; 0x01
    320e:	82 81       	ldd	r24, Z+2	; 0x02
    3210:	93 81       	ldd	r25, Z+3	; 0x03
    3212:	20 e0       	ldi	r18, 0x00	; 0
    3214:	30 e0       	ldi	r19, 0x00	; 0
    3216:	40 e8       	ldi	r20, 0x80	; 128
    3218:	5f e3       	ldi	r21, 0x3F	; 63
    321a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    321e:	88 23       	and	r24, r24
    3220:	44 f4       	brge	.+16     	; 0x3232 <LCD_firstadd+0xed6>
		__ticks = 1;
    3222:	fe 01       	movw	r30, r28
    3224:	ef 5f       	subi	r30, 0xFF	; 255
    3226:	fe 4f       	sbci	r31, 0xFE	; 254
    3228:	81 e0       	ldi	r24, 0x01	; 1
    322a:	90 e0       	ldi	r25, 0x00	; 0
    322c:	91 83       	std	Z+1, r25	; 0x01
    322e:	80 83       	st	Z, r24
    3230:	64 c0       	rjmp	.+200    	; 0x32fa <LCD_firstadd+0xf9e>
	else if (__tmp > 65535)
    3232:	fe 01       	movw	r30, r28
    3234:	ed 5f       	subi	r30, 0xFD	; 253
    3236:	fe 4f       	sbci	r31, 0xFE	; 254
    3238:	60 81       	ld	r22, Z
    323a:	71 81       	ldd	r23, Z+1	; 0x01
    323c:	82 81       	ldd	r24, Z+2	; 0x02
    323e:	93 81       	ldd	r25, Z+3	; 0x03
    3240:	20 e0       	ldi	r18, 0x00	; 0
    3242:	3f ef       	ldi	r19, 0xFF	; 255
    3244:	4f e7       	ldi	r20, 0x7F	; 127
    3246:	57 e4       	ldi	r21, 0x47	; 71
    3248:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    324c:	18 16       	cp	r1, r24
    324e:	0c f0       	brlt	.+2      	; 0x3252 <LCD_firstadd+0xef6>
    3250:	43 c0       	rjmp	.+134    	; 0x32d8 <LCD_firstadd+0xf7c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3252:	fe 01       	movw	r30, r28
    3254:	e9 5f       	subi	r30, 0xF9	; 249
    3256:	fe 4f       	sbci	r31, 0xFE	; 254
    3258:	60 81       	ld	r22, Z
    325a:	71 81       	ldd	r23, Z+1	; 0x01
    325c:	82 81       	ldd	r24, Z+2	; 0x02
    325e:	93 81       	ldd	r25, Z+3	; 0x03
    3260:	20 e0       	ldi	r18, 0x00	; 0
    3262:	30 e0       	ldi	r19, 0x00	; 0
    3264:	40 e2       	ldi	r20, 0x20	; 32
    3266:	51 e4       	ldi	r21, 0x41	; 65
    3268:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    326c:	dc 01       	movw	r26, r24
    326e:	cb 01       	movw	r24, r22
    3270:	8e 01       	movw	r16, r28
    3272:	0f 5f       	subi	r16, 0xFF	; 255
    3274:	1e 4f       	sbci	r17, 0xFE	; 254
    3276:	bc 01       	movw	r22, r24
    3278:	cd 01       	movw	r24, r26
    327a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    327e:	dc 01       	movw	r26, r24
    3280:	cb 01       	movw	r24, r22
    3282:	f8 01       	movw	r30, r16
    3284:	91 83       	std	Z+1, r25	; 0x01
    3286:	80 83       	st	Z, r24
    3288:	1f c0       	rjmp	.+62     	; 0x32c8 <LCD_firstadd+0xf6c>
    328a:	fe 01       	movw	r30, r28
    328c:	e1 50       	subi	r30, 0x01	; 1
    328e:	ff 4f       	sbci	r31, 0xFF	; 255
    3290:	88 ec       	ldi	r24, 0xC8	; 200
    3292:	90 e0       	ldi	r25, 0x00	; 0
    3294:	91 83       	std	Z+1, r25	; 0x01
    3296:	80 83       	st	Z, r24
    3298:	fe 01       	movw	r30, r28
    329a:	e1 50       	subi	r30, 0x01	; 1
    329c:	ff 4f       	sbci	r31, 0xFF	; 255
    329e:	80 81       	ld	r24, Z
    32a0:	91 81       	ldd	r25, Z+1	; 0x01
    32a2:	01 97       	sbiw	r24, 0x01	; 1
    32a4:	f1 f7       	brne	.-4      	; 0x32a2 <LCD_firstadd+0xf46>
    32a6:	fe 01       	movw	r30, r28
    32a8:	e1 50       	subi	r30, 0x01	; 1
    32aa:	ff 4f       	sbci	r31, 0xFF	; 255
    32ac:	91 83       	std	Z+1, r25	; 0x01
    32ae:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    32b0:	de 01       	movw	r26, r28
    32b2:	af 5f       	subi	r26, 0xFF	; 255
    32b4:	be 4f       	sbci	r27, 0xFE	; 254
    32b6:	fe 01       	movw	r30, r28
    32b8:	ef 5f       	subi	r30, 0xFF	; 255
    32ba:	fe 4f       	sbci	r31, 0xFE	; 254
    32bc:	80 81       	ld	r24, Z
    32be:	91 81       	ldd	r25, Z+1	; 0x01
    32c0:	01 97       	sbiw	r24, 0x01	; 1
    32c2:	11 96       	adiw	r26, 0x01	; 1
    32c4:	9c 93       	st	X, r25
    32c6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    32c8:	fe 01       	movw	r30, r28
    32ca:	ef 5f       	subi	r30, 0xFF	; 255
    32cc:	fe 4f       	sbci	r31, 0xFE	; 254
    32ce:	80 81       	ld	r24, Z
    32d0:	91 81       	ldd	r25, Z+1	; 0x01
    32d2:	00 97       	sbiw	r24, 0x00	; 0
    32d4:	d1 f6       	brne	.-76     	; 0x328a <LCD_firstadd+0xf2e>
    32d6:	27 c0       	rjmp	.+78     	; 0x3326 <LCD_firstadd+0xfca>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    32d8:	8e 01       	movw	r16, r28
    32da:	0f 5f       	subi	r16, 0xFF	; 255
    32dc:	1e 4f       	sbci	r17, 0xFE	; 254
    32de:	fe 01       	movw	r30, r28
    32e0:	ed 5f       	subi	r30, 0xFD	; 253
    32e2:	fe 4f       	sbci	r31, 0xFE	; 254
    32e4:	60 81       	ld	r22, Z
    32e6:	71 81       	ldd	r23, Z+1	; 0x01
    32e8:	82 81       	ldd	r24, Z+2	; 0x02
    32ea:	93 81       	ldd	r25, Z+3	; 0x03
    32ec:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    32f0:	dc 01       	movw	r26, r24
    32f2:	cb 01       	movw	r24, r22
    32f4:	f8 01       	movw	r30, r16
    32f6:	91 83       	std	Z+1, r25	; 0x01
    32f8:	80 83       	st	Z, r24
    32fa:	de 01       	movw	r26, r28
    32fc:	a3 50       	subi	r26, 0x03	; 3
    32fe:	bf 4f       	sbci	r27, 0xFF	; 255
    3300:	fe 01       	movw	r30, r28
    3302:	ef 5f       	subi	r30, 0xFF	; 255
    3304:	fe 4f       	sbci	r31, 0xFE	; 254
    3306:	80 81       	ld	r24, Z
    3308:	91 81       	ldd	r25, Z+1	; 0x01
    330a:	8d 93       	st	X+, r24
    330c:	9c 93       	st	X, r25
    330e:	fe 01       	movw	r30, r28
    3310:	e3 50       	subi	r30, 0x03	; 3
    3312:	ff 4f       	sbci	r31, 0xFF	; 255
    3314:	80 81       	ld	r24, Z
    3316:	91 81       	ldd	r25, Z+1	; 0x01
    3318:	01 97       	sbiw	r24, 0x01	; 1
    331a:	f1 f7       	brne	.-4      	; 0x3318 <LCD_firstadd+0xfbc>
    331c:	fe 01       	movw	r30, r28
    331e:	e3 50       	subi	r30, 0x03	; 3
    3320:	ff 4f       	sbci	r31, 0xFF	; 255
    3322:	91 83       	std	Z+1, r25	; 0x01
    3324:	80 83       	st	Z, r24
	_delay_ms(10);
	LCD_write('e');
    3326:	85 e6       	ldi	r24, 0x65	; 101
    3328:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
    332c:	fe 01       	movw	r30, r28
    332e:	e7 50       	subi	r30, 0x07	; 7
    3330:	ff 4f       	sbci	r31, 0xFF	; 255
    3332:	80 e0       	ldi	r24, 0x00	; 0
    3334:	90 e0       	ldi	r25, 0x00	; 0
    3336:	a0 e2       	ldi	r26, 0x20	; 32
    3338:	b1 e4       	ldi	r27, 0x41	; 65
    333a:	80 83       	st	Z, r24
    333c:	91 83       	std	Z+1, r25	; 0x01
    333e:	a2 83       	std	Z+2, r26	; 0x02
    3340:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3342:	8e 01       	movw	r16, r28
    3344:	0b 50       	subi	r16, 0x0B	; 11
    3346:	1f 4f       	sbci	r17, 0xFF	; 255
    3348:	fe 01       	movw	r30, r28
    334a:	e7 50       	subi	r30, 0x07	; 7
    334c:	ff 4f       	sbci	r31, 0xFF	; 255
    334e:	60 81       	ld	r22, Z
    3350:	71 81       	ldd	r23, Z+1	; 0x01
    3352:	82 81       	ldd	r24, Z+2	; 0x02
    3354:	93 81       	ldd	r25, Z+3	; 0x03
    3356:	20 e0       	ldi	r18, 0x00	; 0
    3358:	30 e0       	ldi	r19, 0x00	; 0
    335a:	4a ef       	ldi	r20, 0xFA	; 250
    335c:	54 e4       	ldi	r21, 0x44	; 68
    335e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3362:	dc 01       	movw	r26, r24
    3364:	cb 01       	movw	r24, r22
    3366:	f8 01       	movw	r30, r16
    3368:	80 83       	st	Z, r24
    336a:	91 83       	std	Z+1, r25	; 0x01
    336c:	a2 83       	std	Z+2, r26	; 0x02
    336e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3370:	fe 01       	movw	r30, r28
    3372:	eb 50       	subi	r30, 0x0B	; 11
    3374:	ff 4f       	sbci	r31, 0xFF	; 255
    3376:	60 81       	ld	r22, Z
    3378:	71 81       	ldd	r23, Z+1	; 0x01
    337a:	82 81       	ldd	r24, Z+2	; 0x02
    337c:	93 81       	ldd	r25, Z+3	; 0x03
    337e:	20 e0       	ldi	r18, 0x00	; 0
    3380:	30 e0       	ldi	r19, 0x00	; 0
    3382:	40 e8       	ldi	r20, 0x80	; 128
    3384:	5f e3       	ldi	r21, 0x3F	; 63
    3386:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    338a:	88 23       	and	r24, r24
    338c:	44 f4       	brge	.+16     	; 0x339e <LCD_firstadd+0x1042>
		__ticks = 1;
    338e:	fe 01       	movw	r30, r28
    3390:	ed 50       	subi	r30, 0x0D	; 13
    3392:	ff 4f       	sbci	r31, 0xFF	; 255
    3394:	81 e0       	ldi	r24, 0x01	; 1
    3396:	90 e0       	ldi	r25, 0x00	; 0
    3398:	91 83       	std	Z+1, r25	; 0x01
    339a:	80 83       	st	Z, r24
    339c:	64 c0       	rjmp	.+200    	; 0x3466 <LCD_firstadd+0x110a>
	else if (__tmp > 65535)
    339e:	fe 01       	movw	r30, r28
    33a0:	eb 50       	subi	r30, 0x0B	; 11
    33a2:	ff 4f       	sbci	r31, 0xFF	; 255
    33a4:	60 81       	ld	r22, Z
    33a6:	71 81       	ldd	r23, Z+1	; 0x01
    33a8:	82 81       	ldd	r24, Z+2	; 0x02
    33aa:	93 81       	ldd	r25, Z+3	; 0x03
    33ac:	20 e0       	ldi	r18, 0x00	; 0
    33ae:	3f ef       	ldi	r19, 0xFF	; 255
    33b0:	4f e7       	ldi	r20, 0x7F	; 127
    33b2:	57 e4       	ldi	r21, 0x47	; 71
    33b4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    33b8:	18 16       	cp	r1, r24
    33ba:	0c f0       	brlt	.+2      	; 0x33be <LCD_firstadd+0x1062>
    33bc:	43 c0       	rjmp	.+134    	; 0x3444 <LCD_firstadd+0x10e8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    33be:	fe 01       	movw	r30, r28
    33c0:	e7 50       	subi	r30, 0x07	; 7
    33c2:	ff 4f       	sbci	r31, 0xFF	; 255
    33c4:	60 81       	ld	r22, Z
    33c6:	71 81       	ldd	r23, Z+1	; 0x01
    33c8:	82 81       	ldd	r24, Z+2	; 0x02
    33ca:	93 81       	ldd	r25, Z+3	; 0x03
    33cc:	20 e0       	ldi	r18, 0x00	; 0
    33ce:	30 e0       	ldi	r19, 0x00	; 0
    33d0:	40 e2       	ldi	r20, 0x20	; 32
    33d2:	51 e4       	ldi	r21, 0x41	; 65
    33d4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    33d8:	dc 01       	movw	r26, r24
    33da:	cb 01       	movw	r24, r22
    33dc:	8e 01       	movw	r16, r28
    33de:	0d 50       	subi	r16, 0x0D	; 13
    33e0:	1f 4f       	sbci	r17, 0xFF	; 255
    33e2:	bc 01       	movw	r22, r24
    33e4:	cd 01       	movw	r24, r26
    33e6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    33ea:	dc 01       	movw	r26, r24
    33ec:	cb 01       	movw	r24, r22
    33ee:	f8 01       	movw	r30, r16
    33f0:	91 83       	std	Z+1, r25	; 0x01
    33f2:	80 83       	st	Z, r24
    33f4:	1f c0       	rjmp	.+62     	; 0x3434 <LCD_firstadd+0x10d8>
    33f6:	fe 01       	movw	r30, r28
    33f8:	ef 50       	subi	r30, 0x0F	; 15
    33fa:	ff 4f       	sbci	r31, 0xFF	; 255
    33fc:	88 ec       	ldi	r24, 0xC8	; 200
    33fe:	90 e0       	ldi	r25, 0x00	; 0
    3400:	91 83       	std	Z+1, r25	; 0x01
    3402:	80 83       	st	Z, r24
    3404:	fe 01       	movw	r30, r28
    3406:	ef 50       	subi	r30, 0x0F	; 15
    3408:	ff 4f       	sbci	r31, 0xFF	; 255
    340a:	80 81       	ld	r24, Z
    340c:	91 81       	ldd	r25, Z+1	; 0x01
    340e:	01 97       	sbiw	r24, 0x01	; 1
    3410:	f1 f7       	brne	.-4      	; 0x340e <LCD_firstadd+0x10b2>
    3412:	fe 01       	movw	r30, r28
    3414:	ef 50       	subi	r30, 0x0F	; 15
    3416:	ff 4f       	sbci	r31, 0xFF	; 255
    3418:	91 83       	std	Z+1, r25	; 0x01
    341a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    341c:	de 01       	movw	r26, r28
    341e:	ad 50       	subi	r26, 0x0D	; 13
    3420:	bf 4f       	sbci	r27, 0xFF	; 255
    3422:	fe 01       	movw	r30, r28
    3424:	ed 50       	subi	r30, 0x0D	; 13
    3426:	ff 4f       	sbci	r31, 0xFF	; 255
    3428:	80 81       	ld	r24, Z
    342a:	91 81       	ldd	r25, Z+1	; 0x01
    342c:	01 97       	sbiw	r24, 0x01	; 1
    342e:	11 96       	adiw	r26, 0x01	; 1
    3430:	9c 93       	st	X, r25
    3432:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3434:	fe 01       	movw	r30, r28
    3436:	ed 50       	subi	r30, 0x0D	; 13
    3438:	ff 4f       	sbci	r31, 0xFF	; 255
    343a:	80 81       	ld	r24, Z
    343c:	91 81       	ldd	r25, Z+1	; 0x01
    343e:	00 97       	sbiw	r24, 0x00	; 0
    3440:	d1 f6       	brne	.-76     	; 0x33f6 <LCD_firstadd+0x109a>
    3442:	27 c0       	rjmp	.+78     	; 0x3492 <LCD_firstadd+0x1136>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3444:	8e 01       	movw	r16, r28
    3446:	0d 50       	subi	r16, 0x0D	; 13
    3448:	1f 4f       	sbci	r17, 0xFF	; 255
    344a:	fe 01       	movw	r30, r28
    344c:	eb 50       	subi	r30, 0x0B	; 11
    344e:	ff 4f       	sbci	r31, 0xFF	; 255
    3450:	60 81       	ld	r22, Z
    3452:	71 81       	ldd	r23, Z+1	; 0x01
    3454:	82 81       	ldd	r24, Z+2	; 0x02
    3456:	93 81       	ldd	r25, Z+3	; 0x03
    3458:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    345c:	dc 01       	movw	r26, r24
    345e:	cb 01       	movw	r24, r22
    3460:	f8 01       	movw	r30, r16
    3462:	91 83       	std	Z+1, r25	; 0x01
    3464:	80 83       	st	Z, r24
    3466:	de 01       	movw	r26, r28
    3468:	a1 51       	subi	r26, 0x11	; 17
    346a:	bf 4f       	sbci	r27, 0xFF	; 255
    346c:	fe 01       	movw	r30, r28
    346e:	ed 50       	subi	r30, 0x0D	; 13
    3470:	ff 4f       	sbci	r31, 0xFF	; 255
    3472:	80 81       	ld	r24, Z
    3474:	91 81       	ldd	r25, Z+1	; 0x01
    3476:	8d 93       	st	X+, r24
    3478:	9c 93       	st	X, r25
    347a:	fe 01       	movw	r30, r28
    347c:	e1 51       	subi	r30, 0x11	; 17
    347e:	ff 4f       	sbci	r31, 0xFF	; 255
    3480:	80 81       	ld	r24, Z
    3482:	91 81       	ldd	r25, Z+1	; 0x01
    3484:	01 97       	sbiw	r24, 0x01	; 1
    3486:	f1 f7       	brne	.-4      	; 0x3484 <LCD_firstadd+0x1128>
    3488:	fe 01       	movw	r30, r28
    348a:	e1 51       	subi	r30, 0x11	; 17
    348c:	ff 4f       	sbci	r31, 0xFF	; 255
    348e:	91 83       	std	Z+1, r25	; 0x01
    3490:	80 83       	st	Z, r24
	_delay_ms(10);
	LCD_write('m');
    3492:	8d e6       	ldi	r24, 0x6D	; 109
    3494:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
    3498:	fe 01       	movw	r30, r28
    349a:	e5 51       	subi	r30, 0x15	; 21
    349c:	ff 4f       	sbci	r31, 0xFF	; 255
    349e:	80 e0       	ldi	r24, 0x00	; 0
    34a0:	90 e0       	ldi	r25, 0x00	; 0
    34a2:	a0 e2       	ldi	r26, 0x20	; 32
    34a4:	b1 e4       	ldi	r27, 0x41	; 65
    34a6:	80 83       	st	Z, r24
    34a8:	91 83       	std	Z+1, r25	; 0x01
    34aa:	a2 83       	std	Z+2, r26	; 0x02
    34ac:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    34ae:	8e 01       	movw	r16, r28
    34b0:	09 51       	subi	r16, 0x19	; 25
    34b2:	1f 4f       	sbci	r17, 0xFF	; 255
    34b4:	fe 01       	movw	r30, r28
    34b6:	e5 51       	subi	r30, 0x15	; 21
    34b8:	ff 4f       	sbci	r31, 0xFF	; 255
    34ba:	60 81       	ld	r22, Z
    34bc:	71 81       	ldd	r23, Z+1	; 0x01
    34be:	82 81       	ldd	r24, Z+2	; 0x02
    34c0:	93 81       	ldd	r25, Z+3	; 0x03
    34c2:	20 e0       	ldi	r18, 0x00	; 0
    34c4:	30 e0       	ldi	r19, 0x00	; 0
    34c6:	4a ef       	ldi	r20, 0xFA	; 250
    34c8:	54 e4       	ldi	r21, 0x44	; 68
    34ca:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    34ce:	dc 01       	movw	r26, r24
    34d0:	cb 01       	movw	r24, r22
    34d2:	f8 01       	movw	r30, r16
    34d4:	80 83       	st	Z, r24
    34d6:	91 83       	std	Z+1, r25	; 0x01
    34d8:	a2 83       	std	Z+2, r26	; 0x02
    34da:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    34dc:	fe 01       	movw	r30, r28
    34de:	e9 51       	subi	r30, 0x19	; 25
    34e0:	ff 4f       	sbci	r31, 0xFF	; 255
    34e2:	60 81       	ld	r22, Z
    34e4:	71 81       	ldd	r23, Z+1	; 0x01
    34e6:	82 81       	ldd	r24, Z+2	; 0x02
    34e8:	93 81       	ldd	r25, Z+3	; 0x03
    34ea:	20 e0       	ldi	r18, 0x00	; 0
    34ec:	30 e0       	ldi	r19, 0x00	; 0
    34ee:	40 e8       	ldi	r20, 0x80	; 128
    34f0:	5f e3       	ldi	r21, 0x3F	; 63
    34f2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    34f6:	88 23       	and	r24, r24
    34f8:	44 f4       	brge	.+16     	; 0x350a <LCD_firstadd+0x11ae>
		__ticks = 1;
    34fa:	fe 01       	movw	r30, r28
    34fc:	eb 51       	subi	r30, 0x1B	; 27
    34fe:	ff 4f       	sbci	r31, 0xFF	; 255
    3500:	81 e0       	ldi	r24, 0x01	; 1
    3502:	90 e0       	ldi	r25, 0x00	; 0
    3504:	91 83       	std	Z+1, r25	; 0x01
    3506:	80 83       	st	Z, r24
    3508:	64 c0       	rjmp	.+200    	; 0x35d2 <LCD_firstadd+0x1276>
	else if (__tmp > 65535)
    350a:	fe 01       	movw	r30, r28
    350c:	e9 51       	subi	r30, 0x19	; 25
    350e:	ff 4f       	sbci	r31, 0xFF	; 255
    3510:	60 81       	ld	r22, Z
    3512:	71 81       	ldd	r23, Z+1	; 0x01
    3514:	82 81       	ldd	r24, Z+2	; 0x02
    3516:	93 81       	ldd	r25, Z+3	; 0x03
    3518:	20 e0       	ldi	r18, 0x00	; 0
    351a:	3f ef       	ldi	r19, 0xFF	; 255
    351c:	4f e7       	ldi	r20, 0x7F	; 127
    351e:	57 e4       	ldi	r21, 0x47	; 71
    3520:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3524:	18 16       	cp	r1, r24
    3526:	0c f0       	brlt	.+2      	; 0x352a <LCD_firstadd+0x11ce>
    3528:	43 c0       	rjmp	.+134    	; 0x35b0 <LCD_firstadd+0x1254>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    352a:	fe 01       	movw	r30, r28
    352c:	e5 51       	subi	r30, 0x15	; 21
    352e:	ff 4f       	sbci	r31, 0xFF	; 255
    3530:	60 81       	ld	r22, Z
    3532:	71 81       	ldd	r23, Z+1	; 0x01
    3534:	82 81       	ldd	r24, Z+2	; 0x02
    3536:	93 81       	ldd	r25, Z+3	; 0x03
    3538:	20 e0       	ldi	r18, 0x00	; 0
    353a:	30 e0       	ldi	r19, 0x00	; 0
    353c:	40 e2       	ldi	r20, 0x20	; 32
    353e:	51 e4       	ldi	r21, 0x41	; 65
    3540:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3544:	dc 01       	movw	r26, r24
    3546:	cb 01       	movw	r24, r22
    3548:	8e 01       	movw	r16, r28
    354a:	0b 51       	subi	r16, 0x1B	; 27
    354c:	1f 4f       	sbci	r17, 0xFF	; 255
    354e:	bc 01       	movw	r22, r24
    3550:	cd 01       	movw	r24, r26
    3552:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3556:	dc 01       	movw	r26, r24
    3558:	cb 01       	movw	r24, r22
    355a:	f8 01       	movw	r30, r16
    355c:	91 83       	std	Z+1, r25	; 0x01
    355e:	80 83       	st	Z, r24
    3560:	1f c0       	rjmp	.+62     	; 0x35a0 <LCD_firstadd+0x1244>
    3562:	fe 01       	movw	r30, r28
    3564:	ed 51       	subi	r30, 0x1D	; 29
    3566:	ff 4f       	sbci	r31, 0xFF	; 255
    3568:	88 ec       	ldi	r24, 0xC8	; 200
    356a:	90 e0       	ldi	r25, 0x00	; 0
    356c:	91 83       	std	Z+1, r25	; 0x01
    356e:	80 83       	st	Z, r24
    3570:	fe 01       	movw	r30, r28
    3572:	ed 51       	subi	r30, 0x1D	; 29
    3574:	ff 4f       	sbci	r31, 0xFF	; 255
    3576:	80 81       	ld	r24, Z
    3578:	91 81       	ldd	r25, Z+1	; 0x01
    357a:	01 97       	sbiw	r24, 0x01	; 1
    357c:	f1 f7       	brne	.-4      	; 0x357a <LCD_firstadd+0x121e>
    357e:	fe 01       	movw	r30, r28
    3580:	ed 51       	subi	r30, 0x1D	; 29
    3582:	ff 4f       	sbci	r31, 0xFF	; 255
    3584:	91 83       	std	Z+1, r25	; 0x01
    3586:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3588:	de 01       	movw	r26, r28
    358a:	ab 51       	subi	r26, 0x1B	; 27
    358c:	bf 4f       	sbci	r27, 0xFF	; 255
    358e:	fe 01       	movw	r30, r28
    3590:	eb 51       	subi	r30, 0x1B	; 27
    3592:	ff 4f       	sbci	r31, 0xFF	; 255
    3594:	80 81       	ld	r24, Z
    3596:	91 81       	ldd	r25, Z+1	; 0x01
    3598:	01 97       	sbiw	r24, 0x01	; 1
    359a:	11 96       	adiw	r26, 0x01	; 1
    359c:	9c 93       	st	X, r25
    359e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    35a0:	fe 01       	movw	r30, r28
    35a2:	eb 51       	subi	r30, 0x1B	; 27
    35a4:	ff 4f       	sbci	r31, 0xFF	; 255
    35a6:	80 81       	ld	r24, Z
    35a8:	91 81       	ldd	r25, Z+1	; 0x01
    35aa:	00 97       	sbiw	r24, 0x00	; 0
    35ac:	d1 f6       	brne	.-76     	; 0x3562 <LCD_firstadd+0x1206>
    35ae:	27 c0       	rjmp	.+78     	; 0x35fe <LCD_firstadd+0x12a2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    35b0:	8e 01       	movw	r16, r28
    35b2:	0b 51       	subi	r16, 0x1B	; 27
    35b4:	1f 4f       	sbci	r17, 0xFF	; 255
    35b6:	fe 01       	movw	r30, r28
    35b8:	e9 51       	subi	r30, 0x19	; 25
    35ba:	ff 4f       	sbci	r31, 0xFF	; 255
    35bc:	60 81       	ld	r22, Z
    35be:	71 81       	ldd	r23, Z+1	; 0x01
    35c0:	82 81       	ldd	r24, Z+2	; 0x02
    35c2:	93 81       	ldd	r25, Z+3	; 0x03
    35c4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    35c8:	dc 01       	movw	r26, r24
    35ca:	cb 01       	movw	r24, r22
    35cc:	f8 01       	movw	r30, r16
    35ce:	91 83       	std	Z+1, r25	; 0x01
    35d0:	80 83       	st	Z, r24
    35d2:	de 01       	movw	r26, r28
    35d4:	af 51       	subi	r26, 0x1F	; 31
    35d6:	bf 4f       	sbci	r27, 0xFF	; 255
    35d8:	fe 01       	movw	r30, r28
    35da:	eb 51       	subi	r30, 0x1B	; 27
    35dc:	ff 4f       	sbci	r31, 0xFF	; 255
    35de:	80 81       	ld	r24, Z
    35e0:	91 81       	ldd	r25, Z+1	; 0x01
    35e2:	8d 93       	st	X+, r24
    35e4:	9c 93       	st	X, r25
    35e6:	fe 01       	movw	r30, r28
    35e8:	ef 51       	subi	r30, 0x1F	; 31
    35ea:	ff 4f       	sbci	r31, 0xFF	; 255
    35ec:	80 81       	ld	r24, Z
    35ee:	91 81       	ldd	r25, Z+1	; 0x01
    35f0:	01 97       	sbiw	r24, 0x01	; 1
    35f2:	f1 f7       	brne	.-4      	; 0x35f0 <LCD_firstadd+0x1294>
    35f4:	fe 01       	movw	r30, r28
    35f6:	ef 51       	subi	r30, 0x1F	; 31
    35f8:	ff 4f       	sbci	r31, 0xFF	; 255
    35fa:	91 83       	std	Z+1, r25	; 0x01
    35fc:	80 83       	st	Z, r24
	_delay_ms(10);
	LCD_write('y');
    35fe:	89 e7       	ldi	r24, 0x79	; 121
    3600:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
    3604:	fe 01       	movw	r30, r28
    3606:	e3 52       	subi	r30, 0x23	; 35
    3608:	ff 4f       	sbci	r31, 0xFF	; 255
    360a:	80 e0       	ldi	r24, 0x00	; 0
    360c:	90 e0       	ldi	r25, 0x00	; 0
    360e:	a0 e2       	ldi	r26, 0x20	; 32
    3610:	b1 e4       	ldi	r27, 0x41	; 65
    3612:	80 83       	st	Z, r24
    3614:	91 83       	std	Z+1, r25	; 0x01
    3616:	a2 83       	std	Z+2, r26	; 0x02
    3618:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    361a:	8e 01       	movw	r16, r28
    361c:	07 52       	subi	r16, 0x27	; 39
    361e:	1f 4f       	sbci	r17, 0xFF	; 255
    3620:	fe 01       	movw	r30, r28
    3622:	e3 52       	subi	r30, 0x23	; 35
    3624:	ff 4f       	sbci	r31, 0xFF	; 255
    3626:	60 81       	ld	r22, Z
    3628:	71 81       	ldd	r23, Z+1	; 0x01
    362a:	82 81       	ldd	r24, Z+2	; 0x02
    362c:	93 81       	ldd	r25, Z+3	; 0x03
    362e:	20 e0       	ldi	r18, 0x00	; 0
    3630:	30 e0       	ldi	r19, 0x00	; 0
    3632:	4a ef       	ldi	r20, 0xFA	; 250
    3634:	54 e4       	ldi	r21, 0x44	; 68
    3636:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    363a:	dc 01       	movw	r26, r24
    363c:	cb 01       	movw	r24, r22
    363e:	f8 01       	movw	r30, r16
    3640:	80 83       	st	Z, r24
    3642:	91 83       	std	Z+1, r25	; 0x01
    3644:	a2 83       	std	Z+2, r26	; 0x02
    3646:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3648:	fe 01       	movw	r30, r28
    364a:	e7 52       	subi	r30, 0x27	; 39
    364c:	ff 4f       	sbci	r31, 0xFF	; 255
    364e:	60 81       	ld	r22, Z
    3650:	71 81       	ldd	r23, Z+1	; 0x01
    3652:	82 81       	ldd	r24, Z+2	; 0x02
    3654:	93 81       	ldd	r25, Z+3	; 0x03
    3656:	20 e0       	ldi	r18, 0x00	; 0
    3658:	30 e0       	ldi	r19, 0x00	; 0
    365a:	40 e8       	ldi	r20, 0x80	; 128
    365c:	5f e3       	ldi	r21, 0x3F	; 63
    365e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3662:	88 23       	and	r24, r24
    3664:	44 f4       	brge	.+16     	; 0x3676 <LCD_firstadd+0x131a>
		__ticks = 1;
    3666:	fe 01       	movw	r30, r28
    3668:	e9 52       	subi	r30, 0x29	; 41
    366a:	ff 4f       	sbci	r31, 0xFF	; 255
    366c:	81 e0       	ldi	r24, 0x01	; 1
    366e:	90 e0       	ldi	r25, 0x00	; 0
    3670:	91 83       	std	Z+1, r25	; 0x01
    3672:	80 83       	st	Z, r24
    3674:	64 c0       	rjmp	.+200    	; 0x373e <LCD_firstadd+0x13e2>
	else if (__tmp > 65535)
    3676:	fe 01       	movw	r30, r28
    3678:	e7 52       	subi	r30, 0x27	; 39
    367a:	ff 4f       	sbci	r31, 0xFF	; 255
    367c:	60 81       	ld	r22, Z
    367e:	71 81       	ldd	r23, Z+1	; 0x01
    3680:	82 81       	ldd	r24, Z+2	; 0x02
    3682:	93 81       	ldd	r25, Z+3	; 0x03
    3684:	20 e0       	ldi	r18, 0x00	; 0
    3686:	3f ef       	ldi	r19, 0xFF	; 255
    3688:	4f e7       	ldi	r20, 0x7F	; 127
    368a:	57 e4       	ldi	r21, 0x47	; 71
    368c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3690:	18 16       	cp	r1, r24
    3692:	0c f0       	brlt	.+2      	; 0x3696 <LCD_firstadd+0x133a>
    3694:	43 c0       	rjmp	.+134    	; 0x371c <LCD_firstadd+0x13c0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3696:	fe 01       	movw	r30, r28
    3698:	e3 52       	subi	r30, 0x23	; 35
    369a:	ff 4f       	sbci	r31, 0xFF	; 255
    369c:	60 81       	ld	r22, Z
    369e:	71 81       	ldd	r23, Z+1	; 0x01
    36a0:	82 81       	ldd	r24, Z+2	; 0x02
    36a2:	93 81       	ldd	r25, Z+3	; 0x03
    36a4:	20 e0       	ldi	r18, 0x00	; 0
    36a6:	30 e0       	ldi	r19, 0x00	; 0
    36a8:	40 e2       	ldi	r20, 0x20	; 32
    36aa:	51 e4       	ldi	r21, 0x41	; 65
    36ac:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    36b0:	dc 01       	movw	r26, r24
    36b2:	cb 01       	movw	r24, r22
    36b4:	8e 01       	movw	r16, r28
    36b6:	09 52       	subi	r16, 0x29	; 41
    36b8:	1f 4f       	sbci	r17, 0xFF	; 255
    36ba:	bc 01       	movw	r22, r24
    36bc:	cd 01       	movw	r24, r26
    36be:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    36c2:	dc 01       	movw	r26, r24
    36c4:	cb 01       	movw	r24, r22
    36c6:	f8 01       	movw	r30, r16
    36c8:	91 83       	std	Z+1, r25	; 0x01
    36ca:	80 83       	st	Z, r24
    36cc:	1f c0       	rjmp	.+62     	; 0x370c <LCD_firstadd+0x13b0>
    36ce:	fe 01       	movw	r30, r28
    36d0:	eb 52       	subi	r30, 0x2B	; 43
    36d2:	ff 4f       	sbci	r31, 0xFF	; 255
    36d4:	88 ec       	ldi	r24, 0xC8	; 200
    36d6:	90 e0       	ldi	r25, 0x00	; 0
    36d8:	91 83       	std	Z+1, r25	; 0x01
    36da:	80 83       	st	Z, r24
    36dc:	fe 01       	movw	r30, r28
    36de:	eb 52       	subi	r30, 0x2B	; 43
    36e0:	ff 4f       	sbci	r31, 0xFF	; 255
    36e2:	80 81       	ld	r24, Z
    36e4:	91 81       	ldd	r25, Z+1	; 0x01
    36e6:	01 97       	sbiw	r24, 0x01	; 1
    36e8:	f1 f7       	brne	.-4      	; 0x36e6 <LCD_firstadd+0x138a>
    36ea:	fe 01       	movw	r30, r28
    36ec:	eb 52       	subi	r30, 0x2B	; 43
    36ee:	ff 4f       	sbci	r31, 0xFF	; 255
    36f0:	91 83       	std	Z+1, r25	; 0x01
    36f2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    36f4:	de 01       	movw	r26, r28
    36f6:	a9 52       	subi	r26, 0x29	; 41
    36f8:	bf 4f       	sbci	r27, 0xFF	; 255
    36fa:	fe 01       	movw	r30, r28
    36fc:	e9 52       	subi	r30, 0x29	; 41
    36fe:	ff 4f       	sbci	r31, 0xFF	; 255
    3700:	80 81       	ld	r24, Z
    3702:	91 81       	ldd	r25, Z+1	; 0x01
    3704:	01 97       	sbiw	r24, 0x01	; 1
    3706:	11 96       	adiw	r26, 0x01	; 1
    3708:	9c 93       	st	X, r25
    370a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    370c:	fe 01       	movw	r30, r28
    370e:	e9 52       	subi	r30, 0x29	; 41
    3710:	ff 4f       	sbci	r31, 0xFF	; 255
    3712:	80 81       	ld	r24, Z
    3714:	91 81       	ldd	r25, Z+1	; 0x01
    3716:	00 97       	sbiw	r24, 0x00	; 0
    3718:	d1 f6       	brne	.-76     	; 0x36ce <LCD_firstadd+0x1372>
    371a:	27 c0       	rjmp	.+78     	; 0x376a <LCD_firstadd+0x140e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    371c:	8e 01       	movw	r16, r28
    371e:	09 52       	subi	r16, 0x29	; 41
    3720:	1f 4f       	sbci	r17, 0xFF	; 255
    3722:	fe 01       	movw	r30, r28
    3724:	e7 52       	subi	r30, 0x27	; 39
    3726:	ff 4f       	sbci	r31, 0xFF	; 255
    3728:	60 81       	ld	r22, Z
    372a:	71 81       	ldd	r23, Z+1	; 0x01
    372c:	82 81       	ldd	r24, Z+2	; 0x02
    372e:	93 81       	ldd	r25, Z+3	; 0x03
    3730:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3734:	dc 01       	movw	r26, r24
    3736:	cb 01       	movw	r24, r22
    3738:	f8 01       	movw	r30, r16
    373a:	91 83       	std	Z+1, r25	; 0x01
    373c:	80 83       	st	Z, r24
    373e:	de 01       	movw	r26, r28
    3740:	ad 52       	subi	r26, 0x2D	; 45
    3742:	bf 4f       	sbci	r27, 0xFF	; 255
    3744:	fe 01       	movw	r30, r28
    3746:	e9 52       	subi	r30, 0x29	; 41
    3748:	ff 4f       	sbci	r31, 0xFF	; 255
    374a:	80 81       	ld	r24, Z
    374c:	91 81       	ldd	r25, Z+1	; 0x01
    374e:	8d 93       	st	X+, r24
    3750:	9c 93       	st	X, r25
    3752:	fe 01       	movw	r30, r28
    3754:	ed 52       	subi	r30, 0x2D	; 45
    3756:	ff 4f       	sbci	r31, 0xFF	; 255
    3758:	80 81       	ld	r24, Z
    375a:	91 81       	ldd	r25, Z+1	; 0x01
    375c:	01 97       	sbiw	r24, 0x01	; 1
    375e:	f1 f7       	brne	.-4      	; 0x375c <LCD_firstadd+0x1400>
    3760:	fe 01       	movw	r30, r28
    3762:	ed 52       	subi	r30, 0x2D	; 45
    3764:	ff 4f       	sbci	r31, 0xFF	; 255
    3766:	91 83       	std	Z+1, r25	; 0x01
    3768:	80 83       	st	Z, r24
	_delay_ms(10);
	LCD_cmd(0xC0);
    376a:	80 ec       	ldi	r24, 0xC0	; 192
    376c:	0e 94 85 2e 	call	0x5d0a	; 0x5d0a <LCD_cmd>
    3770:	fe 01       	movw	r30, r28
    3772:	e1 53       	subi	r30, 0x31	; 49
    3774:	ff 4f       	sbci	r31, 0xFF	; 255
    3776:	80 e0       	ldi	r24, 0x00	; 0
    3778:	90 e0       	ldi	r25, 0x00	; 0
    377a:	a0 e2       	ldi	r26, 0x20	; 32
    377c:	b1 e4       	ldi	r27, 0x41	; 65
    377e:	80 83       	st	Z, r24
    3780:	91 83       	std	Z+1, r25	; 0x01
    3782:	a2 83       	std	Z+2, r26	; 0x02
    3784:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3786:	8e 01       	movw	r16, r28
    3788:	05 53       	subi	r16, 0x35	; 53
    378a:	1f 4f       	sbci	r17, 0xFF	; 255
    378c:	fe 01       	movw	r30, r28
    378e:	e1 53       	subi	r30, 0x31	; 49
    3790:	ff 4f       	sbci	r31, 0xFF	; 255
    3792:	60 81       	ld	r22, Z
    3794:	71 81       	ldd	r23, Z+1	; 0x01
    3796:	82 81       	ldd	r24, Z+2	; 0x02
    3798:	93 81       	ldd	r25, Z+3	; 0x03
    379a:	20 e0       	ldi	r18, 0x00	; 0
    379c:	30 e0       	ldi	r19, 0x00	; 0
    379e:	4a ef       	ldi	r20, 0xFA	; 250
    37a0:	54 e4       	ldi	r21, 0x44	; 68
    37a2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    37a6:	dc 01       	movw	r26, r24
    37a8:	cb 01       	movw	r24, r22
    37aa:	f8 01       	movw	r30, r16
    37ac:	80 83       	st	Z, r24
    37ae:	91 83       	std	Z+1, r25	; 0x01
    37b0:	a2 83       	std	Z+2, r26	; 0x02
    37b2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    37b4:	fe 01       	movw	r30, r28
    37b6:	e5 53       	subi	r30, 0x35	; 53
    37b8:	ff 4f       	sbci	r31, 0xFF	; 255
    37ba:	60 81       	ld	r22, Z
    37bc:	71 81       	ldd	r23, Z+1	; 0x01
    37be:	82 81       	ldd	r24, Z+2	; 0x02
    37c0:	93 81       	ldd	r25, Z+3	; 0x03
    37c2:	20 e0       	ldi	r18, 0x00	; 0
    37c4:	30 e0       	ldi	r19, 0x00	; 0
    37c6:	40 e8       	ldi	r20, 0x80	; 128
    37c8:	5f e3       	ldi	r21, 0x3F	; 63
    37ca:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    37ce:	88 23       	and	r24, r24
    37d0:	44 f4       	brge	.+16     	; 0x37e2 <LCD_firstadd+0x1486>
		__ticks = 1;
    37d2:	fe 01       	movw	r30, r28
    37d4:	e7 53       	subi	r30, 0x37	; 55
    37d6:	ff 4f       	sbci	r31, 0xFF	; 255
    37d8:	81 e0       	ldi	r24, 0x01	; 1
    37da:	90 e0       	ldi	r25, 0x00	; 0
    37dc:	91 83       	std	Z+1, r25	; 0x01
    37de:	80 83       	st	Z, r24
    37e0:	64 c0       	rjmp	.+200    	; 0x38aa <LCD_firstadd+0x154e>
	else if (__tmp > 65535)
    37e2:	fe 01       	movw	r30, r28
    37e4:	e5 53       	subi	r30, 0x35	; 53
    37e6:	ff 4f       	sbci	r31, 0xFF	; 255
    37e8:	60 81       	ld	r22, Z
    37ea:	71 81       	ldd	r23, Z+1	; 0x01
    37ec:	82 81       	ldd	r24, Z+2	; 0x02
    37ee:	93 81       	ldd	r25, Z+3	; 0x03
    37f0:	20 e0       	ldi	r18, 0x00	; 0
    37f2:	3f ef       	ldi	r19, 0xFF	; 255
    37f4:	4f e7       	ldi	r20, 0x7F	; 127
    37f6:	57 e4       	ldi	r21, 0x47	; 71
    37f8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    37fc:	18 16       	cp	r1, r24
    37fe:	0c f0       	brlt	.+2      	; 0x3802 <LCD_firstadd+0x14a6>
    3800:	43 c0       	rjmp	.+134    	; 0x3888 <LCD_firstadd+0x152c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3802:	fe 01       	movw	r30, r28
    3804:	e1 53       	subi	r30, 0x31	; 49
    3806:	ff 4f       	sbci	r31, 0xFF	; 255
    3808:	60 81       	ld	r22, Z
    380a:	71 81       	ldd	r23, Z+1	; 0x01
    380c:	82 81       	ldd	r24, Z+2	; 0x02
    380e:	93 81       	ldd	r25, Z+3	; 0x03
    3810:	20 e0       	ldi	r18, 0x00	; 0
    3812:	30 e0       	ldi	r19, 0x00	; 0
    3814:	40 e2       	ldi	r20, 0x20	; 32
    3816:	51 e4       	ldi	r21, 0x41	; 65
    3818:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    381c:	dc 01       	movw	r26, r24
    381e:	cb 01       	movw	r24, r22
    3820:	8e 01       	movw	r16, r28
    3822:	07 53       	subi	r16, 0x37	; 55
    3824:	1f 4f       	sbci	r17, 0xFF	; 255
    3826:	bc 01       	movw	r22, r24
    3828:	cd 01       	movw	r24, r26
    382a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    382e:	dc 01       	movw	r26, r24
    3830:	cb 01       	movw	r24, r22
    3832:	f8 01       	movw	r30, r16
    3834:	91 83       	std	Z+1, r25	; 0x01
    3836:	80 83       	st	Z, r24
    3838:	1f c0       	rjmp	.+62     	; 0x3878 <LCD_firstadd+0x151c>
    383a:	fe 01       	movw	r30, r28
    383c:	e9 53       	subi	r30, 0x39	; 57
    383e:	ff 4f       	sbci	r31, 0xFF	; 255
    3840:	88 ec       	ldi	r24, 0xC8	; 200
    3842:	90 e0       	ldi	r25, 0x00	; 0
    3844:	91 83       	std	Z+1, r25	; 0x01
    3846:	80 83       	st	Z, r24
    3848:	fe 01       	movw	r30, r28
    384a:	e9 53       	subi	r30, 0x39	; 57
    384c:	ff 4f       	sbci	r31, 0xFF	; 255
    384e:	80 81       	ld	r24, Z
    3850:	91 81       	ldd	r25, Z+1	; 0x01
    3852:	01 97       	sbiw	r24, 0x01	; 1
    3854:	f1 f7       	brne	.-4      	; 0x3852 <LCD_firstadd+0x14f6>
    3856:	fe 01       	movw	r30, r28
    3858:	e9 53       	subi	r30, 0x39	; 57
    385a:	ff 4f       	sbci	r31, 0xFF	; 255
    385c:	91 83       	std	Z+1, r25	; 0x01
    385e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3860:	de 01       	movw	r26, r28
    3862:	a7 53       	subi	r26, 0x37	; 55
    3864:	bf 4f       	sbci	r27, 0xFF	; 255
    3866:	fe 01       	movw	r30, r28
    3868:	e7 53       	subi	r30, 0x37	; 55
    386a:	ff 4f       	sbci	r31, 0xFF	; 255
    386c:	80 81       	ld	r24, Z
    386e:	91 81       	ldd	r25, Z+1	; 0x01
    3870:	01 97       	sbiw	r24, 0x01	; 1
    3872:	11 96       	adiw	r26, 0x01	; 1
    3874:	9c 93       	st	X, r25
    3876:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3878:	fe 01       	movw	r30, r28
    387a:	e7 53       	subi	r30, 0x37	; 55
    387c:	ff 4f       	sbci	r31, 0xFF	; 255
    387e:	80 81       	ld	r24, Z
    3880:	91 81       	ldd	r25, Z+1	; 0x01
    3882:	00 97       	sbiw	r24, 0x00	; 0
    3884:	d1 f6       	brne	.-76     	; 0x383a <LCD_firstadd+0x14de>
    3886:	27 c0       	rjmp	.+78     	; 0x38d6 <LCD_firstadd+0x157a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3888:	8e 01       	movw	r16, r28
    388a:	07 53       	subi	r16, 0x37	; 55
    388c:	1f 4f       	sbci	r17, 0xFF	; 255
    388e:	fe 01       	movw	r30, r28
    3890:	e5 53       	subi	r30, 0x35	; 53
    3892:	ff 4f       	sbci	r31, 0xFF	; 255
    3894:	60 81       	ld	r22, Z
    3896:	71 81       	ldd	r23, Z+1	; 0x01
    3898:	82 81       	ldd	r24, Z+2	; 0x02
    389a:	93 81       	ldd	r25, Z+3	; 0x03
    389c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    38a0:	dc 01       	movw	r26, r24
    38a2:	cb 01       	movw	r24, r22
    38a4:	f8 01       	movw	r30, r16
    38a6:	91 83       	std	Z+1, r25	; 0x01
    38a8:	80 83       	st	Z, r24
    38aa:	de 01       	movw	r26, r28
    38ac:	ab 53       	subi	r26, 0x3B	; 59
    38ae:	bf 4f       	sbci	r27, 0xFF	; 255
    38b0:	fe 01       	movw	r30, r28
    38b2:	e7 53       	subi	r30, 0x37	; 55
    38b4:	ff 4f       	sbci	r31, 0xFF	; 255
    38b6:	80 81       	ld	r24, Z
    38b8:	91 81       	ldd	r25, Z+1	; 0x01
    38ba:	8d 93       	st	X+, r24
    38bc:	9c 93       	st	X, r25
    38be:	fe 01       	movw	r30, r28
    38c0:	eb 53       	subi	r30, 0x3B	; 59
    38c2:	ff 4f       	sbci	r31, 0xFF	; 255
    38c4:	80 81       	ld	r24, Z
    38c6:	91 81       	ldd	r25, Z+1	; 0x01
    38c8:	01 97       	sbiw	r24, 0x01	; 1
    38ca:	f1 f7       	brne	.-4      	; 0x38c8 <LCD_firstadd+0x156c>
    38cc:	fe 01       	movw	r30, r28
    38ce:	eb 53       	subi	r30, 0x3B	; 59
    38d0:	ff 4f       	sbci	r31, 0xFF	; 255
    38d2:	91 83       	std	Z+1, r25	; 0x01
    38d4:	80 83       	st	Z, r24
	_delay_ms(10);
	LCD_write('F');
    38d6:	86 e4       	ldi	r24, 0x46	; 70
    38d8:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
    38dc:	fe 01       	movw	r30, r28
    38de:	ef 53       	subi	r30, 0x3F	; 63
    38e0:	ff 4f       	sbci	r31, 0xFF	; 255
    38e2:	80 e0       	ldi	r24, 0x00	; 0
    38e4:	90 e0       	ldi	r25, 0x00	; 0
    38e6:	a0 e2       	ldi	r26, 0x20	; 32
    38e8:	b1 e4       	ldi	r27, 0x41	; 65
    38ea:	80 83       	st	Z, r24
    38ec:	91 83       	std	Z+1, r25	; 0x01
    38ee:	a2 83       	std	Z+2, r26	; 0x02
    38f0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    38f2:	8e 01       	movw	r16, r28
    38f4:	03 54       	subi	r16, 0x43	; 67
    38f6:	1f 4f       	sbci	r17, 0xFF	; 255
    38f8:	fe 01       	movw	r30, r28
    38fa:	ef 53       	subi	r30, 0x3F	; 63
    38fc:	ff 4f       	sbci	r31, 0xFF	; 255
    38fe:	60 81       	ld	r22, Z
    3900:	71 81       	ldd	r23, Z+1	; 0x01
    3902:	82 81       	ldd	r24, Z+2	; 0x02
    3904:	93 81       	ldd	r25, Z+3	; 0x03
    3906:	20 e0       	ldi	r18, 0x00	; 0
    3908:	30 e0       	ldi	r19, 0x00	; 0
    390a:	4a ef       	ldi	r20, 0xFA	; 250
    390c:	54 e4       	ldi	r21, 0x44	; 68
    390e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3912:	dc 01       	movw	r26, r24
    3914:	cb 01       	movw	r24, r22
    3916:	f8 01       	movw	r30, r16
    3918:	80 83       	st	Z, r24
    391a:	91 83       	std	Z+1, r25	; 0x01
    391c:	a2 83       	std	Z+2, r26	; 0x02
    391e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3920:	fe 01       	movw	r30, r28
    3922:	e3 54       	subi	r30, 0x43	; 67
    3924:	ff 4f       	sbci	r31, 0xFF	; 255
    3926:	60 81       	ld	r22, Z
    3928:	71 81       	ldd	r23, Z+1	; 0x01
    392a:	82 81       	ldd	r24, Z+2	; 0x02
    392c:	93 81       	ldd	r25, Z+3	; 0x03
    392e:	20 e0       	ldi	r18, 0x00	; 0
    3930:	30 e0       	ldi	r19, 0x00	; 0
    3932:	40 e8       	ldi	r20, 0x80	; 128
    3934:	5f e3       	ldi	r21, 0x3F	; 63
    3936:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    393a:	88 23       	and	r24, r24
    393c:	44 f4       	brge	.+16     	; 0x394e <LCD_firstadd+0x15f2>
		__ticks = 1;
    393e:	fe 01       	movw	r30, r28
    3940:	e5 54       	subi	r30, 0x45	; 69
    3942:	ff 4f       	sbci	r31, 0xFF	; 255
    3944:	81 e0       	ldi	r24, 0x01	; 1
    3946:	90 e0       	ldi	r25, 0x00	; 0
    3948:	91 83       	std	Z+1, r25	; 0x01
    394a:	80 83       	st	Z, r24
    394c:	64 c0       	rjmp	.+200    	; 0x3a16 <LCD_firstadd+0x16ba>
	else if (__tmp > 65535)
    394e:	fe 01       	movw	r30, r28
    3950:	e3 54       	subi	r30, 0x43	; 67
    3952:	ff 4f       	sbci	r31, 0xFF	; 255
    3954:	60 81       	ld	r22, Z
    3956:	71 81       	ldd	r23, Z+1	; 0x01
    3958:	82 81       	ldd	r24, Z+2	; 0x02
    395a:	93 81       	ldd	r25, Z+3	; 0x03
    395c:	20 e0       	ldi	r18, 0x00	; 0
    395e:	3f ef       	ldi	r19, 0xFF	; 255
    3960:	4f e7       	ldi	r20, 0x7F	; 127
    3962:	57 e4       	ldi	r21, 0x47	; 71
    3964:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3968:	18 16       	cp	r1, r24
    396a:	0c f0       	brlt	.+2      	; 0x396e <LCD_firstadd+0x1612>
    396c:	43 c0       	rjmp	.+134    	; 0x39f4 <LCD_firstadd+0x1698>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    396e:	fe 01       	movw	r30, r28
    3970:	ef 53       	subi	r30, 0x3F	; 63
    3972:	ff 4f       	sbci	r31, 0xFF	; 255
    3974:	60 81       	ld	r22, Z
    3976:	71 81       	ldd	r23, Z+1	; 0x01
    3978:	82 81       	ldd	r24, Z+2	; 0x02
    397a:	93 81       	ldd	r25, Z+3	; 0x03
    397c:	20 e0       	ldi	r18, 0x00	; 0
    397e:	30 e0       	ldi	r19, 0x00	; 0
    3980:	40 e2       	ldi	r20, 0x20	; 32
    3982:	51 e4       	ldi	r21, 0x41	; 65
    3984:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3988:	dc 01       	movw	r26, r24
    398a:	cb 01       	movw	r24, r22
    398c:	8e 01       	movw	r16, r28
    398e:	05 54       	subi	r16, 0x45	; 69
    3990:	1f 4f       	sbci	r17, 0xFF	; 255
    3992:	bc 01       	movw	r22, r24
    3994:	cd 01       	movw	r24, r26
    3996:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    399a:	dc 01       	movw	r26, r24
    399c:	cb 01       	movw	r24, r22
    399e:	f8 01       	movw	r30, r16
    39a0:	91 83       	std	Z+1, r25	; 0x01
    39a2:	80 83       	st	Z, r24
    39a4:	1f c0       	rjmp	.+62     	; 0x39e4 <LCD_firstadd+0x1688>
    39a6:	fe 01       	movw	r30, r28
    39a8:	e7 54       	subi	r30, 0x47	; 71
    39aa:	ff 4f       	sbci	r31, 0xFF	; 255
    39ac:	88 ec       	ldi	r24, 0xC8	; 200
    39ae:	90 e0       	ldi	r25, 0x00	; 0
    39b0:	91 83       	std	Z+1, r25	; 0x01
    39b2:	80 83       	st	Z, r24
    39b4:	fe 01       	movw	r30, r28
    39b6:	e7 54       	subi	r30, 0x47	; 71
    39b8:	ff 4f       	sbci	r31, 0xFF	; 255
    39ba:	80 81       	ld	r24, Z
    39bc:	91 81       	ldd	r25, Z+1	; 0x01
    39be:	01 97       	sbiw	r24, 0x01	; 1
    39c0:	f1 f7       	brne	.-4      	; 0x39be <LCD_firstadd+0x1662>
    39c2:	fe 01       	movw	r30, r28
    39c4:	e7 54       	subi	r30, 0x47	; 71
    39c6:	ff 4f       	sbci	r31, 0xFF	; 255
    39c8:	91 83       	std	Z+1, r25	; 0x01
    39ca:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    39cc:	de 01       	movw	r26, r28
    39ce:	a5 54       	subi	r26, 0x45	; 69
    39d0:	bf 4f       	sbci	r27, 0xFF	; 255
    39d2:	fe 01       	movw	r30, r28
    39d4:	e5 54       	subi	r30, 0x45	; 69
    39d6:	ff 4f       	sbci	r31, 0xFF	; 255
    39d8:	80 81       	ld	r24, Z
    39da:	91 81       	ldd	r25, Z+1	; 0x01
    39dc:	01 97       	sbiw	r24, 0x01	; 1
    39de:	11 96       	adiw	r26, 0x01	; 1
    39e0:	9c 93       	st	X, r25
    39e2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    39e4:	fe 01       	movw	r30, r28
    39e6:	e5 54       	subi	r30, 0x45	; 69
    39e8:	ff 4f       	sbci	r31, 0xFF	; 255
    39ea:	80 81       	ld	r24, Z
    39ec:	91 81       	ldd	r25, Z+1	; 0x01
    39ee:	00 97       	sbiw	r24, 0x00	; 0
    39f0:	d1 f6       	brne	.-76     	; 0x39a6 <LCD_firstadd+0x164a>
    39f2:	27 c0       	rjmp	.+78     	; 0x3a42 <LCD_firstadd+0x16e6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    39f4:	8e 01       	movw	r16, r28
    39f6:	05 54       	subi	r16, 0x45	; 69
    39f8:	1f 4f       	sbci	r17, 0xFF	; 255
    39fa:	fe 01       	movw	r30, r28
    39fc:	e3 54       	subi	r30, 0x43	; 67
    39fe:	ff 4f       	sbci	r31, 0xFF	; 255
    3a00:	60 81       	ld	r22, Z
    3a02:	71 81       	ldd	r23, Z+1	; 0x01
    3a04:	82 81       	ldd	r24, Z+2	; 0x02
    3a06:	93 81       	ldd	r25, Z+3	; 0x03
    3a08:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3a0c:	dc 01       	movw	r26, r24
    3a0e:	cb 01       	movw	r24, r22
    3a10:	f8 01       	movw	r30, r16
    3a12:	91 83       	std	Z+1, r25	; 0x01
    3a14:	80 83       	st	Z, r24
    3a16:	de 01       	movw	r26, r28
    3a18:	a9 54       	subi	r26, 0x49	; 73
    3a1a:	bf 4f       	sbci	r27, 0xFF	; 255
    3a1c:	fe 01       	movw	r30, r28
    3a1e:	e5 54       	subi	r30, 0x45	; 69
    3a20:	ff 4f       	sbci	r31, 0xFF	; 255
    3a22:	80 81       	ld	r24, Z
    3a24:	91 81       	ldd	r25, Z+1	; 0x01
    3a26:	8d 93       	st	X+, r24
    3a28:	9c 93       	st	X, r25
    3a2a:	fe 01       	movw	r30, r28
    3a2c:	e9 54       	subi	r30, 0x49	; 73
    3a2e:	ff 4f       	sbci	r31, 0xFF	; 255
    3a30:	80 81       	ld	r24, Z
    3a32:	91 81       	ldd	r25, Z+1	; 0x01
    3a34:	01 97       	sbiw	r24, 0x01	; 1
    3a36:	f1 f7       	brne	.-4      	; 0x3a34 <LCD_firstadd+0x16d8>
    3a38:	fe 01       	movw	r30, r28
    3a3a:	e9 54       	subi	r30, 0x49	; 73
    3a3c:	ff 4f       	sbci	r31, 0xFF	; 255
    3a3e:	91 83       	std	Z+1, r25	; 0x01
    3a40:	80 83       	st	Z, r24
	_delay_ms(10);
	LCD_write('o');
    3a42:	8f e6       	ldi	r24, 0x6F	; 111
    3a44:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
    3a48:	fe 01       	movw	r30, r28
    3a4a:	ed 54       	subi	r30, 0x4D	; 77
    3a4c:	ff 4f       	sbci	r31, 0xFF	; 255
    3a4e:	80 e0       	ldi	r24, 0x00	; 0
    3a50:	90 e0       	ldi	r25, 0x00	; 0
    3a52:	a0 e2       	ldi	r26, 0x20	; 32
    3a54:	b1 e4       	ldi	r27, 0x41	; 65
    3a56:	80 83       	st	Z, r24
    3a58:	91 83       	std	Z+1, r25	; 0x01
    3a5a:	a2 83       	std	Z+2, r26	; 0x02
    3a5c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3a5e:	8e 01       	movw	r16, r28
    3a60:	01 55       	subi	r16, 0x51	; 81
    3a62:	1f 4f       	sbci	r17, 0xFF	; 255
    3a64:	fe 01       	movw	r30, r28
    3a66:	ed 54       	subi	r30, 0x4D	; 77
    3a68:	ff 4f       	sbci	r31, 0xFF	; 255
    3a6a:	60 81       	ld	r22, Z
    3a6c:	71 81       	ldd	r23, Z+1	; 0x01
    3a6e:	82 81       	ldd	r24, Z+2	; 0x02
    3a70:	93 81       	ldd	r25, Z+3	; 0x03
    3a72:	20 e0       	ldi	r18, 0x00	; 0
    3a74:	30 e0       	ldi	r19, 0x00	; 0
    3a76:	4a ef       	ldi	r20, 0xFA	; 250
    3a78:	54 e4       	ldi	r21, 0x44	; 68
    3a7a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3a7e:	dc 01       	movw	r26, r24
    3a80:	cb 01       	movw	r24, r22
    3a82:	f8 01       	movw	r30, r16
    3a84:	80 83       	st	Z, r24
    3a86:	91 83       	std	Z+1, r25	; 0x01
    3a88:	a2 83       	std	Z+2, r26	; 0x02
    3a8a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3a8c:	fe 01       	movw	r30, r28
    3a8e:	e1 55       	subi	r30, 0x51	; 81
    3a90:	ff 4f       	sbci	r31, 0xFF	; 255
    3a92:	60 81       	ld	r22, Z
    3a94:	71 81       	ldd	r23, Z+1	; 0x01
    3a96:	82 81       	ldd	r24, Z+2	; 0x02
    3a98:	93 81       	ldd	r25, Z+3	; 0x03
    3a9a:	20 e0       	ldi	r18, 0x00	; 0
    3a9c:	30 e0       	ldi	r19, 0x00	; 0
    3a9e:	40 e8       	ldi	r20, 0x80	; 128
    3aa0:	5f e3       	ldi	r21, 0x3F	; 63
    3aa2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3aa6:	88 23       	and	r24, r24
    3aa8:	44 f4       	brge	.+16     	; 0x3aba <LCD_firstadd+0x175e>
		__ticks = 1;
    3aaa:	fe 01       	movw	r30, r28
    3aac:	e3 55       	subi	r30, 0x53	; 83
    3aae:	ff 4f       	sbci	r31, 0xFF	; 255
    3ab0:	81 e0       	ldi	r24, 0x01	; 1
    3ab2:	90 e0       	ldi	r25, 0x00	; 0
    3ab4:	91 83       	std	Z+1, r25	; 0x01
    3ab6:	80 83       	st	Z, r24
    3ab8:	64 c0       	rjmp	.+200    	; 0x3b82 <LCD_firstadd+0x1826>
	else if (__tmp > 65535)
    3aba:	fe 01       	movw	r30, r28
    3abc:	e1 55       	subi	r30, 0x51	; 81
    3abe:	ff 4f       	sbci	r31, 0xFF	; 255
    3ac0:	60 81       	ld	r22, Z
    3ac2:	71 81       	ldd	r23, Z+1	; 0x01
    3ac4:	82 81       	ldd	r24, Z+2	; 0x02
    3ac6:	93 81       	ldd	r25, Z+3	; 0x03
    3ac8:	20 e0       	ldi	r18, 0x00	; 0
    3aca:	3f ef       	ldi	r19, 0xFF	; 255
    3acc:	4f e7       	ldi	r20, 0x7F	; 127
    3ace:	57 e4       	ldi	r21, 0x47	; 71
    3ad0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3ad4:	18 16       	cp	r1, r24
    3ad6:	0c f0       	brlt	.+2      	; 0x3ada <LCD_firstadd+0x177e>
    3ad8:	43 c0       	rjmp	.+134    	; 0x3b60 <LCD_firstadd+0x1804>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3ada:	fe 01       	movw	r30, r28
    3adc:	ed 54       	subi	r30, 0x4D	; 77
    3ade:	ff 4f       	sbci	r31, 0xFF	; 255
    3ae0:	60 81       	ld	r22, Z
    3ae2:	71 81       	ldd	r23, Z+1	; 0x01
    3ae4:	82 81       	ldd	r24, Z+2	; 0x02
    3ae6:	93 81       	ldd	r25, Z+3	; 0x03
    3ae8:	20 e0       	ldi	r18, 0x00	; 0
    3aea:	30 e0       	ldi	r19, 0x00	; 0
    3aec:	40 e2       	ldi	r20, 0x20	; 32
    3aee:	51 e4       	ldi	r21, 0x41	; 65
    3af0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3af4:	dc 01       	movw	r26, r24
    3af6:	cb 01       	movw	r24, r22
    3af8:	8e 01       	movw	r16, r28
    3afa:	03 55       	subi	r16, 0x53	; 83
    3afc:	1f 4f       	sbci	r17, 0xFF	; 255
    3afe:	bc 01       	movw	r22, r24
    3b00:	cd 01       	movw	r24, r26
    3b02:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3b06:	dc 01       	movw	r26, r24
    3b08:	cb 01       	movw	r24, r22
    3b0a:	f8 01       	movw	r30, r16
    3b0c:	91 83       	std	Z+1, r25	; 0x01
    3b0e:	80 83       	st	Z, r24
    3b10:	1f c0       	rjmp	.+62     	; 0x3b50 <LCD_firstadd+0x17f4>
    3b12:	fe 01       	movw	r30, r28
    3b14:	e5 55       	subi	r30, 0x55	; 85
    3b16:	ff 4f       	sbci	r31, 0xFF	; 255
    3b18:	88 ec       	ldi	r24, 0xC8	; 200
    3b1a:	90 e0       	ldi	r25, 0x00	; 0
    3b1c:	91 83       	std	Z+1, r25	; 0x01
    3b1e:	80 83       	st	Z, r24
    3b20:	fe 01       	movw	r30, r28
    3b22:	e5 55       	subi	r30, 0x55	; 85
    3b24:	ff 4f       	sbci	r31, 0xFF	; 255
    3b26:	80 81       	ld	r24, Z
    3b28:	91 81       	ldd	r25, Z+1	; 0x01
    3b2a:	01 97       	sbiw	r24, 0x01	; 1
    3b2c:	f1 f7       	brne	.-4      	; 0x3b2a <LCD_firstadd+0x17ce>
    3b2e:	fe 01       	movw	r30, r28
    3b30:	e5 55       	subi	r30, 0x55	; 85
    3b32:	ff 4f       	sbci	r31, 0xFF	; 255
    3b34:	91 83       	std	Z+1, r25	; 0x01
    3b36:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3b38:	de 01       	movw	r26, r28
    3b3a:	a3 55       	subi	r26, 0x53	; 83
    3b3c:	bf 4f       	sbci	r27, 0xFF	; 255
    3b3e:	fe 01       	movw	r30, r28
    3b40:	e3 55       	subi	r30, 0x53	; 83
    3b42:	ff 4f       	sbci	r31, 0xFF	; 255
    3b44:	80 81       	ld	r24, Z
    3b46:	91 81       	ldd	r25, Z+1	; 0x01
    3b48:	01 97       	sbiw	r24, 0x01	; 1
    3b4a:	11 96       	adiw	r26, 0x01	; 1
    3b4c:	9c 93       	st	X, r25
    3b4e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3b50:	fe 01       	movw	r30, r28
    3b52:	e3 55       	subi	r30, 0x53	; 83
    3b54:	ff 4f       	sbci	r31, 0xFF	; 255
    3b56:	80 81       	ld	r24, Z
    3b58:	91 81       	ldd	r25, Z+1	; 0x01
    3b5a:	00 97       	sbiw	r24, 0x00	; 0
    3b5c:	d1 f6       	brne	.-76     	; 0x3b12 <LCD_firstadd+0x17b6>
    3b5e:	27 c0       	rjmp	.+78     	; 0x3bae <LCD_firstadd+0x1852>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3b60:	8e 01       	movw	r16, r28
    3b62:	03 55       	subi	r16, 0x53	; 83
    3b64:	1f 4f       	sbci	r17, 0xFF	; 255
    3b66:	fe 01       	movw	r30, r28
    3b68:	e1 55       	subi	r30, 0x51	; 81
    3b6a:	ff 4f       	sbci	r31, 0xFF	; 255
    3b6c:	60 81       	ld	r22, Z
    3b6e:	71 81       	ldd	r23, Z+1	; 0x01
    3b70:	82 81       	ldd	r24, Z+2	; 0x02
    3b72:	93 81       	ldd	r25, Z+3	; 0x03
    3b74:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3b78:	dc 01       	movw	r26, r24
    3b7a:	cb 01       	movw	r24, r22
    3b7c:	f8 01       	movw	r30, r16
    3b7e:	91 83       	std	Z+1, r25	; 0x01
    3b80:	80 83       	st	Z, r24
    3b82:	de 01       	movw	r26, r28
    3b84:	a7 55       	subi	r26, 0x57	; 87
    3b86:	bf 4f       	sbci	r27, 0xFF	; 255
    3b88:	fe 01       	movw	r30, r28
    3b8a:	e3 55       	subi	r30, 0x53	; 83
    3b8c:	ff 4f       	sbci	r31, 0xFF	; 255
    3b8e:	80 81       	ld	r24, Z
    3b90:	91 81       	ldd	r25, Z+1	; 0x01
    3b92:	8d 93       	st	X+, r24
    3b94:	9c 93       	st	X, r25
    3b96:	fe 01       	movw	r30, r28
    3b98:	e7 55       	subi	r30, 0x57	; 87
    3b9a:	ff 4f       	sbci	r31, 0xFF	; 255
    3b9c:	80 81       	ld	r24, Z
    3b9e:	91 81       	ldd	r25, Z+1	; 0x01
    3ba0:	01 97       	sbiw	r24, 0x01	; 1
    3ba2:	f1 f7       	brne	.-4      	; 0x3ba0 <LCD_firstadd+0x1844>
    3ba4:	fe 01       	movw	r30, r28
    3ba6:	e7 55       	subi	r30, 0x57	; 87
    3ba8:	ff 4f       	sbci	r31, 0xFF	; 255
    3baa:	91 83       	std	Z+1, r25	; 0x01
    3bac:	80 83       	st	Z, r24
	_delay_ms(10);
	LCD_write('r');
    3bae:	82 e7       	ldi	r24, 0x72	; 114
    3bb0:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
	LCD_write(' ');
    3bb4:	80 e2       	ldi	r24, 0x20	; 32
    3bb6:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
    3bba:	fe 01       	movw	r30, r28
    3bbc:	eb 55       	subi	r30, 0x5B	; 91
    3bbe:	ff 4f       	sbci	r31, 0xFF	; 255
    3bc0:	80 e0       	ldi	r24, 0x00	; 0
    3bc2:	90 e0       	ldi	r25, 0x00	; 0
    3bc4:	a0 e2       	ldi	r26, 0x20	; 32
    3bc6:	b1 e4       	ldi	r27, 0x41	; 65
    3bc8:	80 83       	st	Z, r24
    3bca:	91 83       	std	Z+1, r25	; 0x01
    3bcc:	a2 83       	std	Z+2, r26	; 0x02
    3bce:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3bd0:	8e 01       	movw	r16, r28
    3bd2:	0f 55       	subi	r16, 0x5F	; 95
    3bd4:	1f 4f       	sbci	r17, 0xFF	; 255
    3bd6:	fe 01       	movw	r30, r28
    3bd8:	eb 55       	subi	r30, 0x5B	; 91
    3bda:	ff 4f       	sbci	r31, 0xFF	; 255
    3bdc:	60 81       	ld	r22, Z
    3bde:	71 81       	ldd	r23, Z+1	; 0x01
    3be0:	82 81       	ldd	r24, Z+2	; 0x02
    3be2:	93 81       	ldd	r25, Z+3	; 0x03
    3be4:	20 e0       	ldi	r18, 0x00	; 0
    3be6:	30 e0       	ldi	r19, 0x00	; 0
    3be8:	4a ef       	ldi	r20, 0xFA	; 250
    3bea:	54 e4       	ldi	r21, 0x44	; 68
    3bec:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3bf0:	dc 01       	movw	r26, r24
    3bf2:	cb 01       	movw	r24, r22
    3bf4:	f8 01       	movw	r30, r16
    3bf6:	80 83       	st	Z, r24
    3bf8:	91 83       	std	Z+1, r25	; 0x01
    3bfa:	a2 83       	std	Z+2, r26	; 0x02
    3bfc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3bfe:	fe 01       	movw	r30, r28
    3c00:	ef 55       	subi	r30, 0x5F	; 95
    3c02:	ff 4f       	sbci	r31, 0xFF	; 255
    3c04:	60 81       	ld	r22, Z
    3c06:	71 81       	ldd	r23, Z+1	; 0x01
    3c08:	82 81       	ldd	r24, Z+2	; 0x02
    3c0a:	93 81       	ldd	r25, Z+3	; 0x03
    3c0c:	20 e0       	ldi	r18, 0x00	; 0
    3c0e:	30 e0       	ldi	r19, 0x00	; 0
    3c10:	40 e8       	ldi	r20, 0x80	; 128
    3c12:	5f e3       	ldi	r21, 0x3F	; 63
    3c14:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3c18:	88 23       	and	r24, r24
    3c1a:	44 f4       	brge	.+16     	; 0x3c2c <LCD_firstadd+0x18d0>
		__ticks = 1;
    3c1c:	fe 01       	movw	r30, r28
    3c1e:	e1 56       	subi	r30, 0x61	; 97
    3c20:	ff 4f       	sbci	r31, 0xFF	; 255
    3c22:	81 e0       	ldi	r24, 0x01	; 1
    3c24:	90 e0       	ldi	r25, 0x00	; 0
    3c26:	91 83       	std	Z+1, r25	; 0x01
    3c28:	80 83       	st	Z, r24
    3c2a:	64 c0       	rjmp	.+200    	; 0x3cf4 <LCD_firstadd+0x1998>
	else if (__tmp > 65535)
    3c2c:	fe 01       	movw	r30, r28
    3c2e:	ef 55       	subi	r30, 0x5F	; 95
    3c30:	ff 4f       	sbci	r31, 0xFF	; 255
    3c32:	60 81       	ld	r22, Z
    3c34:	71 81       	ldd	r23, Z+1	; 0x01
    3c36:	82 81       	ldd	r24, Z+2	; 0x02
    3c38:	93 81       	ldd	r25, Z+3	; 0x03
    3c3a:	20 e0       	ldi	r18, 0x00	; 0
    3c3c:	3f ef       	ldi	r19, 0xFF	; 255
    3c3e:	4f e7       	ldi	r20, 0x7F	; 127
    3c40:	57 e4       	ldi	r21, 0x47	; 71
    3c42:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3c46:	18 16       	cp	r1, r24
    3c48:	0c f0       	brlt	.+2      	; 0x3c4c <LCD_firstadd+0x18f0>
    3c4a:	43 c0       	rjmp	.+134    	; 0x3cd2 <LCD_firstadd+0x1976>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3c4c:	fe 01       	movw	r30, r28
    3c4e:	eb 55       	subi	r30, 0x5B	; 91
    3c50:	ff 4f       	sbci	r31, 0xFF	; 255
    3c52:	60 81       	ld	r22, Z
    3c54:	71 81       	ldd	r23, Z+1	; 0x01
    3c56:	82 81       	ldd	r24, Z+2	; 0x02
    3c58:	93 81       	ldd	r25, Z+3	; 0x03
    3c5a:	20 e0       	ldi	r18, 0x00	; 0
    3c5c:	30 e0       	ldi	r19, 0x00	; 0
    3c5e:	40 e2       	ldi	r20, 0x20	; 32
    3c60:	51 e4       	ldi	r21, 0x41	; 65
    3c62:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3c66:	dc 01       	movw	r26, r24
    3c68:	cb 01       	movw	r24, r22
    3c6a:	8e 01       	movw	r16, r28
    3c6c:	01 56       	subi	r16, 0x61	; 97
    3c6e:	1f 4f       	sbci	r17, 0xFF	; 255
    3c70:	bc 01       	movw	r22, r24
    3c72:	cd 01       	movw	r24, r26
    3c74:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3c78:	dc 01       	movw	r26, r24
    3c7a:	cb 01       	movw	r24, r22
    3c7c:	f8 01       	movw	r30, r16
    3c7e:	91 83       	std	Z+1, r25	; 0x01
    3c80:	80 83       	st	Z, r24
    3c82:	1f c0       	rjmp	.+62     	; 0x3cc2 <LCD_firstadd+0x1966>
    3c84:	fe 01       	movw	r30, r28
    3c86:	e3 56       	subi	r30, 0x63	; 99
    3c88:	ff 4f       	sbci	r31, 0xFF	; 255
    3c8a:	88 ec       	ldi	r24, 0xC8	; 200
    3c8c:	90 e0       	ldi	r25, 0x00	; 0
    3c8e:	91 83       	std	Z+1, r25	; 0x01
    3c90:	80 83       	st	Z, r24
    3c92:	fe 01       	movw	r30, r28
    3c94:	e3 56       	subi	r30, 0x63	; 99
    3c96:	ff 4f       	sbci	r31, 0xFF	; 255
    3c98:	80 81       	ld	r24, Z
    3c9a:	91 81       	ldd	r25, Z+1	; 0x01
    3c9c:	01 97       	sbiw	r24, 0x01	; 1
    3c9e:	f1 f7       	brne	.-4      	; 0x3c9c <LCD_firstadd+0x1940>
    3ca0:	fe 01       	movw	r30, r28
    3ca2:	e3 56       	subi	r30, 0x63	; 99
    3ca4:	ff 4f       	sbci	r31, 0xFF	; 255
    3ca6:	91 83       	std	Z+1, r25	; 0x01
    3ca8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3caa:	de 01       	movw	r26, r28
    3cac:	a1 56       	subi	r26, 0x61	; 97
    3cae:	bf 4f       	sbci	r27, 0xFF	; 255
    3cb0:	fe 01       	movw	r30, r28
    3cb2:	e1 56       	subi	r30, 0x61	; 97
    3cb4:	ff 4f       	sbci	r31, 0xFF	; 255
    3cb6:	80 81       	ld	r24, Z
    3cb8:	91 81       	ldd	r25, Z+1	; 0x01
    3cba:	01 97       	sbiw	r24, 0x01	; 1
    3cbc:	11 96       	adiw	r26, 0x01	; 1
    3cbe:	9c 93       	st	X, r25
    3cc0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3cc2:	fe 01       	movw	r30, r28
    3cc4:	e1 56       	subi	r30, 0x61	; 97
    3cc6:	ff 4f       	sbci	r31, 0xFF	; 255
    3cc8:	80 81       	ld	r24, Z
    3cca:	91 81       	ldd	r25, Z+1	; 0x01
    3ccc:	00 97       	sbiw	r24, 0x00	; 0
    3cce:	d1 f6       	brne	.-76     	; 0x3c84 <LCD_firstadd+0x1928>
    3cd0:	27 c0       	rjmp	.+78     	; 0x3d20 <LCD_firstadd+0x19c4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3cd2:	8e 01       	movw	r16, r28
    3cd4:	01 56       	subi	r16, 0x61	; 97
    3cd6:	1f 4f       	sbci	r17, 0xFF	; 255
    3cd8:	fe 01       	movw	r30, r28
    3cda:	ef 55       	subi	r30, 0x5F	; 95
    3cdc:	ff 4f       	sbci	r31, 0xFF	; 255
    3cde:	60 81       	ld	r22, Z
    3ce0:	71 81       	ldd	r23, Z+1	; 0x01
    3ce2:	82 81       	ldd	r24, Z+2	; 0x02
    3ce4:	93 81       	ldd	r25, Z+3	; 0x03
    3ce6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3cea:	dc 01       	movw	r26, r24
    3cec:	cb 01       	movw	r24, r22
    3cee:	f8 01       	movw	r30, r16
    3cf0:	91 83       	std	Z+1, r25	; 0x01
    3cf2:	80 83       	st	Z, r24
    3cf4:	de 01       	movw	r26, r28
    3cf6:	a5 56       	subi	r26, 0x65	; 101
    3cf8:	bf 4f       	sbci	r27, 0xFF	; 255
    3cfa:	fe 01       	movw	r30, r28
    3cfc:	e1 56       	subi	r30, 0x61	; 97
    3cfe:	ff 4f       	sbci	r31, 0xFF	; 255
    3d00:	80 81       	ld	r24, Z
    3d02:	91 81       	ldd	r25, Z+1	; 0x01
    3d04:	8d 93       	st	X+, r24
    3d06:	9c 93       	st	X, r25
    3d08:	fe 01       	movw	r30, r28
    3d0a:	e5 56       	subi	r30, 0x65	; 101
    3d0c:	ff 4f       	sbci	r31, 0xFF	; 255
    3d0e:	80 81       	ld	r24, Z
    3d10:	91 81       	ldd	r25, Z+1	; 0x01
    3d12:	01 97       	sbiw	r24, 0x01	; 1
    3d14:	f1 f7       	brne	.-4      	; 0x3d12 <LCD_firstadd+0x19b6>
    3d16:	fe 01       	movw	r30, r28
    3d18:	e5 56       	subi	r30, 0x65	; 101
    3d1a:	ff 4f       	sbci	r31, 0xFF	; 255
    3d1c:	91 83       	std	Z+1, r25	; 0x01
    3d1e:	80 83       	st	Z, r24
	_delay_ms(10);
	LCD_write('E');
    3d20:	85 e4       	ldi	r24, 0x45	; 69
    3d22:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
    3d26:	fe 01       	movw	r30, r28
    3d28:	e9 56       	subi	r30, 0x69	; 105
    3d2a:	ff 4f       	sbci	r31, 0xFF	; 255
    3d2c:	80 e0       	ldi	r24, 0x00	; 0
    3d2e:	90 e0       	ldi	r25, 0x00	; 0
    3d30:	a0 e2       	ldi	r26, 0x20	; 32
    3d32:	b1 e4       	ldi	r27, 0x41	; 65
    3d34:	80 83       	st	Z, r24
    3d36:	91 83       	std	Z+1, r25	; 0x01
    3d38:	a2 83       	std	Z+2, r26	; 0x02
    3d3a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3d3c:	8e 01       	movw	r16, r28
    3d3e:	0d 56       	subi	r16, 0x6D	; 109
    3d40:	1f 4f       	sbci	r17, 0xFF	; 255
    3d42:	fe 01       	movw	r30, r28
    3d44:	e9 56       	subi	r30, 0x69	; 105
    3d46:	ff 4f       	sbci	r31, 0xFF	; 255
    3d48:	60 81       	ld	r22, Z
    3d4a:	71 81       	ldd	r23, Z+1	; 0x01
    3d4c:	82 81       	ldd	r24, Z+2	; 0x02
    3d4e:	93 81       	ldd	r25, Z+3	; 0x03
    3d50:	20 e0       	ldi	r18, 0x00	; 0
    3d52:	30 e0       	ldi	r19, 0x00	; 0
    3d54:	4a ef       	ldi	r20, 0xFA	; 250
    3d56:	54 e4       	ldi	r21, 0x44	; 68
    3d58:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3d5c:	dc 01       	movw	r26, r24
    3d5e:	cb 01       	movw	r24, r22
    3d60:	f8 01       	movw	r30, r16
    3d62:	80 83       	st	Z, r24
    3d64:	91 83       	std	Z+1, r25	; 0x01
    3d66:	a2 83       	std	Z+2, r26	; 0x02
    3d68:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3d6a:	fe 01       	movw	r30, r28
    3d6c:	ed 56       	subi	r30, 0x6D	; 109
    3d6e:	ff 4f       	sbci	r31, 0xFF	; 255
    3d70:	60 81       	ld	r22, Z
    3d72:	71 81       	ldd	r23, Z+1	; 0x01
    3d74:	82 81       	ldd	r24, Z+2	; 0x02
    3d76:	93 81       	ldd	r25, Z+3	; 0x03
    3d78:	20 e0       	ldi	r18, 0x00	; 0
    3d7a:	30 e0       	ldi	r19, 0x00	; 0
    3d7c:	40 e8       	ldi	r20, 0x80	; 128
    3d7e:	5f e3       	ldi	r21, 0x3F	; 63
    3d80:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3d84:	88 23       	and	r24, r24
    3d86:	44 f4       	brge	.+16     	; 0x3d98 <LCD_firstadd+0x1a3c>
		__ticks = 1;
    3d88:	fe 01       	movw	r30, r28
    3d8a:	ef 56       	subi	r30, 0x6F	; 111
    3d8c:	ff 4f       	sbci	r31, 0xFF	; 255
    3d8e:	81 e0       	ldi	r24, 0x01	; 1
    3d90:	90 e0       	ldi	r25, 0x00	; 0
    3d92:	91 83       	std	Z+1, r25	; 0x01
    3d94:	80 83       	st	Z, r24
    3d96:	64 c0       	rjmp	.+200    	; 0x3e60 <LCD_firstadd+0x1b04>
	else if (__tmp > 65535)
    3d98:	fe 01       	movw	r30, r28
    3d9a:	ed 56       	subi	r30, 0x6D	; 109
    3d9c:	ff 4f       	sbci	r31, 0xFF	; 255
    3d9e:	60 81       	ld	r22, Z
    3da0:	71 81       	ldd	r23, Z+1	; 0x01
    3da2:	82 81       	ldd	r24, Z+2	; 0x02
    3da4:	93 81       	ldd	r25, Z+3	; 0x03
    3da6:	20 e0       	ldi	r18, 0x00	; 0
    3da8:	3f ef       	ldi	r19, 0xFF	; 255
    3daa:	4f e7       	ldi	r20, 0x7F	; 127
    3dac:	57 e4       	ldi	r21, 0x47	; 71
    3dae:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3db2:	18 16       	cp	r1, r24
    3db4:	0c f0       	brlt	.+2      	; 0x3db8 <LCD_firstadd+0x1a5c>
    3db6:	43 c0       	rjmp	.+134    	; 0x3e3e <LCD_firstadd+0x1ae2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3db8:	fe 01       	movw	r30, r28
    3dba:	e9 56       	subi	r30, 0x69	; 105
    3dbc:	ff 4f       	sbci	r31, 0xFF	; 255
    3dbe:	60 81       	ld	r22, Z
    3dc0:	71 81       	ldd	r23, Z+1	; 0x01
    3dc2:	82 81       	ldd	r24, Z+2	; 0x02
    3dc4:	93 81       	ldd	r25, Z+3	; 0x03
    3dc6:	20 e0       	ldi	r18, 0x00	; 0
    3dc8:	30 e0       	ldi	r19, 0x00	; 0
    3dca:	40 e2       	ldi	r20, 0x20	; 32
    3dcc:	51 e4       	ldi	r21, 0x41	; 65
    3dce:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3dd2:	dc 01       	movw	r26, r24
    3dd4:	cb 01       	movw	r24, r22
    3dd6:	8e 01       	movw	r16, r28
    3dd8:	0f 56       	subi	r16, 0x6F	; 111
    3dda:	1f 4f       	sbci	r17, 0xFF	; 255
    3ddc:	bc 01       	movw	r22, r24
    3dde:	cd 01       	movw	r24, r26
    3de0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3de4:	dc 01       	movw	r26, r24
    3de6:	cb 01       	movw	r24, r22
    3de8:	f8 01       	movw	r30, r16
    3dea:	91 83       	std	Z+1, r25	; 0x01
    3dec:	80 83       	st	Z, r24
    3dee:	1f c0       	rjmp	.+62     	; 0x3e2e <LCD_firstadd+0x1ad2>
    3df0:	fe 01       	movw	r30, r28
    3df2:	e1 57       	subi	r30, 0x71	; 113
    3df4:	ff 4f       	sbci	r31, 0xFF	; 255
    3df6:	88 ec       	ldi	r24, 0xC8	; 200
    3df8:	90 e0       	ldi	r25, 0x00	; 0
    3dfa:	91 83       	std	Z+1, r25	; 0x01
    3dfc:	80 83       	st	Z, r24
    3dfe:	fe 01       	movw	r30, r28
    3e00:	e1 57       	subi	r30, 0x71	; 113
    3e02:	ff 4f       	sbci	r31, 0xFF	; 255
    3e04:	80 81       	ld	r24, Z
    3e06:	91 81       	ldd	r25, Z+1	; 0x01
    3e08:	01 97       	sbiw	r24, 0x01	; 1
    3e0a:	f1 f7       	brne	.-4      	; 0x3e08 <LCD_firstadd+0x1aac>
    3e0c:	fe 01       	movw	r30, r28
    3e0e:	e1 57       	subi	r30, 0x71	; 113
    3e10:	ff 4f       	sbci	r31, 0xFF	; 255
    3e12:	91 83       	std	Z+1, r25	; 0x01
    3e14:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3e16:	de 01       	movw	r26, r28
    3e18:	af 56       	subi	r26, 0x6F	; 111
    3e1a:	bf 4f       	sbci	r27, 0xFF	; 255
    3e1c:	fe 01       	movw	r30, r28
    3e1e:	ef 56       	subi	r30, 0x6F	; 111
    3e20:	ff 4f       	sbci	r31, 0xFF	; 255
    3e22:	80 81       	ld	r24, Z
    3e24:	91 81       	ldd	r25, Z+1	; 0x01
    3e26:	01 97       	sbiw	r24, 0x01	; 1
    3e28:	11 96       	adiw	r26, 0x01	; 1
    3e2a:	9c 93       	st	X, r25
    3e2c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3e2e:	fe 01       	movw	r30, r28
    3e30:	ef 56       	subi	r30, 0x6F	; 111
    3e32:	ff 4f       	sbci	r31, 0xFF	; 255
    3e34:	80 81       	ld	r24, Z
    3e36:	91 81       	ldd	r25, Z+1	; 0x01
    3e38:	00 97       	sbiw	r24, 0x00	; 0
    3e3a:	d1 f6       	brne	.-76     	; 0x3df0 <LCD_firstadd+0x1a94>
    3e3c:	27 c0       	rjmp	.+78     	; 0x3e8c <LCD_firstadd+0x1b30>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3e3e:	8e 01       	movw	r16, r28
    3e40:	0f 56       	subi	r16, 0x6F	; 111
    3e42:	1f 4f       	sbci	r17, 0xFF	; 255
    3e44:	fe 01       	movw	r30, r28
    3e46:	ed 56       	subi	r30, 0x6D	; 109
    3e48:	ff 4f       	sbci	r31, 0xFF	; 255
    3e4a:	60 81       	ld	r22, Z
    3e4c:	71 81       	ldd	r23, Z+1	; 0x01
    3e4e:	82 81       	ldd	r24, Z+2	; 0x02
    3e50:	93 81       	ldd	r25, Z+3	; 0x03
    3e52:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3e56:	dc 01       	movw	r26, r24
    3e58:	cb 01       	movw	r24, r22
    3e5a:	f8 01       	movw	r30, r16
    3e5c:	91 83       	std	Z+1, r25	; 0x01
    3e5e:	80 83       	st	Z, r24
    3e60:	de 01       	movw	r26, r28
    3e62:	a3 57       	subi	r26, 0x73	; 115
    3e64:	bf 4f       	sbci	r27, 0xFF	; 255
    3e66:	fe 01       	movw	r30, r28
    3e68:	ef 56       	subi	r30, 0x6F	; 111
    3e6a:	ff 4f       	sbci	r31, 0xFF	; 255
    3e6c:	80 81       	ld	r24, Z
    3e6e:	91 81       	ldd	r25, Z+1	; 0x01
    3e70:	8d 93       	st	X+, r24
    3e72:	9c 93       	st	X, r25
    3e74:	fe 01       	movw	r30, r28
    3e76:	e3 57       	subi	r30, 0x73	; 115
    3e78:	ff 4f       	sbci	r31, 0xFF	; 255
    3e7a:	80 81       	ld	r24, Z
    3e7c:	91 81       	ldd	r25, Z+1	; 0x01
    3e7e:	01 97       	sbiw	r24, 0x01	; 1
    3e80:	f1 f7       	brne	.-4      	; 0x3e7e <LCD_firstadd+0x1b22>
    3e82:	fe 01       	movw	r30, r28
    3e84:	e3 57       	subi	r30, 0x73	; 115
    3e86:	ff 4f       	sbci	r31, 0xFF	; 255
    3e88:	91 83       	std	Z+1, r25	; 0x01
    3e8a:	80 83       	st	Z, r24
	_delay_ms(10);
	LCD_write('n');
    3e8c:	8e e6       	ldi	r24, 0x6E	; 110
    3e8e:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
    3e92:	fe 01       	movw	r30, r28
    3e94:	e7 57       	subi	r30, 0x77	; 119
    3e96:	ff 4f       	sbci	r31, 0xFF	; 255
    3e98:	80 e0       	ldi	r24, 0x00	; 0
    3e9a:	90 e0       	ldi	r25, 0x00	; 0
    3e9c:	a0 e2       	ldi	r26, 0x20	; 32
    3e9e:	b1 e4       	ldi	r27, 0x41	; 65
    3ea0:	80 83       	st	Z, r24
    3ea2:	91 83       	std	Z+1, r25	; 0x01
    3ea4:	a2 83       	std	Z+2, r26	; 0x02
    3ea6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3ea8:	8e 01       	movw	r16, r28
    3eaa:	0b 57       	subi	r16, 0x7B	; 123
    3eac:	1f 4f       	sbci	r17, 0xFF	; 255
    3eae:	fe 01       	movw	r30, r28
    3eb0:	e7 57       	subi	r30, 0x77	; 119
    3eb2:	ff 4f       	sbci	r31, 0xFF	; 255
    3eb4:	60 81       	ld	r22, Z
    3eb6:	71 81       	ldd	r23, Z+1	; 0x01
    3eb8:	82 81       	ldd	r24, Z+2	; 0x02
    3eba:	93 81       	ldd	r25, Z+3	; 0x03
    3ebc:	20 e0       	ldi	r18, 0x00	; 0
    3ebe:	30 e0       	ldi	r19, 0x00	; 0
    3ec0:	4a ef       	ldi	r20, 0xFA	; 250
    3ec2:	54 e4       	ldi	r21, 0x44	; 68
    3ec4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3ec8:	dc 01       	movw	r26, r24
    3eca:	cb 01       	movw	r24, r22
    3ecc:	f8 01       	movw	r30, r16
    3ece:	80 83       	st	Z, r24
    3ed0:	91 83       	std	Z+1, r25	; 0x01
    3ed2:	a2 83       	std	Z+2, r26	; 0x02
    3ed4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3ed6:	fe 01       	movw	r30, r28
    3ed8:	eb 57       	subi	r30, 0x7B	; 123
    3eda:	ff 4f       	sbci	r31, 0xFF	; 255
    3edc:	60 81       	ld	r22, Z
    3ede:	71 81       	ldd	r23, Z+1	; 0x01
    3ee0:	82 81       	ldd	r24, Z+2	; 0x02
    3ee2:	93 81       	ldd	r25, Z+3	; 0x03
    3ee4:	20 e0       	ldi	r18, 0x00	; 0
    3ee6:	30 e0       	ldi	r19, 0x00	; 0
    3ee8:	40 e8       	ldi	r20, 0x80	; 128
    3eea:	5f e3       	ldi	r21, 0x3F	; 63
    3eec:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3ef0:	88 23       	and	r24, r24
    3ef2:	44 f4       	brge	.+16     	; 0x3f04 <LCD_firstadd+0x1ba8>
		__ticks = 1;
    3ef4:	fe 01       	movw	r30, r28
    3ef6:	ed 57       	subi	r30, 0x7D	; 125
    3ef8:	ff 4f       	sbci	r31, 0xFF	; 255
    3efa:	81 e0       	ldi	r24, 0x01	; 1
    3efc:	90 e0       	ldi	r25, 0x00	; 0
    3efe:	91 83       	std	Z+1, r25	; 0x01
    3f00:	80 83       	st	Z, r24
    3f02:	64 c0       	rjmp	.+200    	; 0x3fcc <LCD_firstadd+0x1c70>
	else if (__tmp > 65535)
    3f04:	fe 01       	movw	r30, r28
    3f06:	eb 57       	subi	r30, 0x7B	; 123
    3f08:	ff 4f       	sbci	r31, 0xFF	; 255
    3f0a:	60 81       	ld	r22, Z
    3f0c:	71 81       	ldd	r23, Z+1	; 0x01
    3f0e:	82 81       	ldd	r24, Z+2	; 0x02
    3f10:	93 81       	ldd	r25, Z+3	; 0x03
    3f12:	20 e0       	ldi	r18, 0x00	; 0
    3f14:	3f ef       	ldi	r19, 0xFF	; 255
    3f16:	4f e7       	ldi	r20, 0x7F	; 127
    3f18:	57 e4       	ldi	r21, 0x47	; 71
    3f1a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3f1e:	18 16       	cp	r1, r24
    3f20:	0c f0       	brlt	.+2      	; 0x3f24 <LCD_firstadd+0x1bc8>
    3f22:	43 c0       	rjmp	.+134    	; 0x3faa <LCD_firstadd+0x1c4e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3f24:	fe 01       	movw	r30, r28
    3f26:	e7 57       	subi	r30, 0x77	; 119
    3f28:	ff 4f       	sbci	r31, 0xFF	; 255
    3f2a:	60 81       	ld	r22, Z
    3f2c:	71 81       	ldd	r23, Z+1	; 0x01
    3f2e:	82 81       	ldd	r24, Z+2	; 0x02
    3f30:	93 81       	ldd	r25, Z+3	; 0x03
    3f32:	20 e0       	ldi	r18, 0x00	; 0
    3f34:	30 e0       	ldi	r19, 0x00	; 0
    3f36:	40 e2       	ldi	r20, 0x20	; 32
    3f38:	51 e4       	ldi	r21, 0x41	; 65
    3f3a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3f3e:	dc 01       	movw	r26, r24
    3f40:	cb 01       	movw	r24, r22
    3f42:	8e 01       	movw	r16, r28
    3f44:	0d 57       	subi	r16, 0x7D	; 125
    3f46:	1f 4f       	sbci	r17, 0xFF	; 255
    3f48:	bc 01       	movw	r22, r24
    3f4a:	cd 01       	movw	r24, r26
    3f4c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3f50:	dc 01       	movw	r26, r24
    3f52:	cb 01       	movw	r24, r22
    3f54:	f8 01       	movw	r30, r16
    3f56:	91 83       	std	Z+1, r25	; 0x01
    3f58:	80 83       	st	Z, r24
    3f5a:	1f c0       	rjmp	.+62     	; 0x3f9a <LCD_firstadd+0x1c3e>
    3f5c:	fe 01       	movw	r30, r28
    3f5e:	ef 57       	subi	r30, 0x7F	; 127
    3f60:	ff 4f       	sbci	r31, 0xFF	; 255
    3f62:	88 ec       	ldi	r24, 0xC8	; 200
    3f64:	90 e0       	ldi	r25, 0x00	; 0
    3f66:	91 83       	std	Z+1, r25	; 0x01
    3f68:	80 83       	st	Z, r24
    3f6a:	fe 01       	movw	r30, r28
    3f6c:	ef 57       	subi	r30, 0x7F	; 127
    3f6e:	ff 4f       	sbci	r31, 0xFF	; 255
    3f70:	80 81       	ld	r24, Z
    3f72:	91 81       	ldd	r25, Z+1	; 0x01
    3f74:	01 97       	sbiw	r24, 0x01	; 1
    3f76:	f1 f7       	brne	.-4      	; 0x3f74 <LCD_firstadd+0x1c18>
    3f78:	fe 01       	movw	r30, r28
    3f7a:	ef 57       	subi	r30, 0x7F	; 127
    3f7c:	ff 4f       	sbci	r31, 0xFF	; 255
    3f7e:	91 83       	std	Z+1, r25	; 0x01
    3f80:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3f82:	de 01       	movw	r26, r28
    3f84:	ad 57       	subi	r26, 0x7D	; 125
    3f86:	bf 4f       	sbci	r27, 0xFF	; 255
    3f88:	fe 01       	movw	r30, r28
    3f8a:	ed 57       	subi	r30, 0x7D	; 125
    3f8c:	ff 4f       	sbci	r31, 0xFF	; 255
    3f8e:	80 81       	ld	r24, Z
    3f90:	91 81       	ldd	r25, Z+1	; 0x01
    3f92:	01 97       	sbiw	r24, 0x01	; 1
    3f94:	11 96       	adiw	r26, 0x01	; 1
    3f96:	9c 93       	st	X, r25
    3f98:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3f9a:	fe 01       	movw	r30, r28
    3f9c:	ed 57       	subi	r30, 0x7D	; 125
    3f9e:	ff 4f       	sbci	r31, 0xFF	; 255
    3fa0:	80 81       	ld	r24, Z
    3fa2:	91 81       	ldd	r25, Z+1	; 0x01
    3fa4:	00 97       	sbiw	r24, 0x00	; 0
    3fa6:	d1 f6       	brne	.-76     	; 0x3f5c <LCD_firstadd+0x1c00>
    3fa8:	27 c0       	rjmp	.+78     	; 0x3ff8 <LCD_firstadd+0x1c9c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3faa:	8e 01       	movw	r16, r28
    3fac:	0d 57       	subi	r16, 0x7D	; 125
    3fae:	1f 4f       	sbci	r17, 0xFF	; 255
    3fb0:	fe 01       	movw	r30, r28
    3fb2:	eb 57       	subi	r30, 0x7B	; 123
    3fb4:	ff 4f       	sbci	r31, 0xFF	; 255
    3fb6:	60 81       	ld	r22, Z
    3fb8:	71 81       	ldd	r23, Z+1	; 0x01
    3fba:	82 81       	ldd	r24, Z+2	; 0x02
    3fbc:	93 81       	ldd	r25, Z+3	; 0x03
    3fbe:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3fc2:	dc 01       	movw	r26, r24
    3fc4:	cb 01       	movw	r24, r22
    3fc6:	f8 01       	movw	r30, r16
    3fc8:	91 83       	std	Z+1, r25	; 0x01
    3fca:	80 83       	st	Z, r24
    3fcc:	de 01       	movw	r26, r28
    3fce:	a1 58       	subi	r26, 0x81	; 129
    3fd0:	bf 4f       	sbci	r27, 0xFF	; 255
    3fd2:	fe 01       	movw	r30, r28
    3fd4:	ed 57       	subi	r30, 0x7D	; 125
    3fd6:	ff 4f       	sbci	r31, 0xFF	; 255
    3fd8:	80 81       	ld	r24, Z
    3fda:	91 81       	ldd	r25, Z+1	; 0x01
    3fdc:	8d 93       	st	X+, r24
    3fde:	9c 93       	st	X, r25
    3fe0:	fe 01       	movw	r30, r28
    3fe2:	e1 58       	subi	r30, 0x81	; 129
    3fe4:	ff 4f       	sbci	r31, 0xFF	; 255
    3fe6:	80 81       	ld	r24, Z
    3fe8:	91 81       	ldd	r25, Z+1	; 0x01
    3fea:	01 97       	sbiw	r24, 0x01	; 1
    3fec:	f1 f7       	brne	.-4      	; 0x3fea <LCD_firstadd+0x1c8e>
    3fee:	fe 01       	movw	r30, r28
    3ff0:	e1 58       	subi	r30, 0x81	; 129
    3ff2:	ff 4f       	sbci	r31, 0xFF	; 255
    3ff4:	91 83       	std	Z+1, r25	; 0x01
    3ff6:	80 83       	st	Z, r24
	_delay_ms(10);
	LCD_write('g');
    3ff8:	87 e6       	ldi	r24, 0x67	; 103
    3ffa:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
    3ffe:	fe 01       	movw	r30, r28
    4000:	e5 58       	subi	r30, 0x85	; 133
    4002:	ff 4f       	sbci	r31, 0xFF	; 255
    4004:	80 e0       	ldi	r24, 0x00	; 0
    4006:	90 e0       	ldi	r25, 0x00	; 0
    4008:	a0 e2       	ldi	r26, 0x20	; 32
    400a:	b1 e4       	ldi	r27, 0x41	; 65
    400c:	80 83       	st	Z, r24
    400e:	91 83       	std	Z+1, r25	; 0x01
    4010:	a2 83       	std	Z+2, r26	; 0x02
    4012:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4014:	8e 01       	movw	r16, r28
    4016:	09 58       	subi	r16, 0x89	; 137
    4018:	1f 4f       	sbci	r17, 0xFF	; 255
    401a:	fe 01       	movw	r30, r28
    401c:	e5 58       	subi	r30, 0x85	; 133
    401e:	ff 4f       	sbci	r31, 0xFF	; 255
    4020:	60 81       	ld	r22, Z
    4022:	71 81       	ldd	r23, Z+1	; 0x01
    4024:	82 81       	ldd	r24, Z+2	; 0x02
    4026:	93 81       	ldd	r25, Z+3	; 0x03
    4028:	20 e0       	ldi	r18, 0x00	; 0
    402a:	30 e0       	ldi	r19, 0x00	; 0
    402c:	4a ef       	ldi	r20, 0xFA	; 250
    402e:	54 e4       	ldi	r21, 0x44	; 68
    4030:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4034:	dc 01       	movw	r26, r24
    4036:	cb 01       	movw	r24, r22
    4038:	f8 01       	movw	r30, r16
    403a:	80 83       	st	Z, r24
    403c:	91 83       	std	Z+1, r25	; 0x01
    403e:	a2 83       	std	Z+2, r26	; 0x02
    4040:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4042:	fe 01       	movw	r30, r28
    4044:	e9 58       	subi	r30, 0x89	; 137
    4046:	ff 4f       	sbci	r31, 0xFF	; 255
    4048:	60 81       	ld	r22, Z
    404a:	71 81       	ldd	r23, Z+1	; 0x01
    404c:	82 81       	ldd	r24, Z+2	; 0x02
    404e:	93 81       	ldd	r25, Z+3	; 0x03
    4050:	20 e0       	ldi	r18, 0x00	; 0
    4052:	30 e0       	ldi	r19, 0x00	; 0
    4054:	40 e8       	ldi	r20, 0x80	; 128
    4056:	5f e3       	ldi	r21, 0x3F	; 63
    4058:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    405c:	88 23       	and	r24, r24
    405e:	44 f4       	brge	.+16     	; 0x4070 <LCD_firstadd+0x1d14>
		__ticks = 1;
    4060:	fe 01       	movw	r30, r28
    4062:	eb 58       	subi	r30, 0x8B	; 139
    4064:	ff 4f       	sbci	r31, 0xFF	; 255
    4066:	81 e0       	ldi	r24, 0x01	; 1
    4068:	90 e0       	ldi	r25, 0x00	; 0
    406a:	91 83       	std	Z+1, r25	; 0x01
    406c:	80 83       	st	Z, r24
    406e:	64 c0       	rjmp	.+200    	; 0x4138 <LCD_firstadd+0x1ddc>
	else if (__tmp > 65535)
    4070:	fe 01       	movw	r30, r28
    4072:	e9 58       	subi	r30, 0x89	; 137
    4074:	ff 4f       	sbci	r31, 0xFF	; 255
    4076:	60 81       	ld	r22, Z
    4078:	71 81       	ldd	r23, Z+1	; 0x01
    407a:	82 81       	ldd	r24, Z+2	; 0x02
    407c:	93 81       	ldd	r25, Z+3	; 0x03
    407e:	20 e0       	ldi	r18, 0x00	; 0
    4080:	3f ef       	ldi	r19, 0xFF	; 255
    4082:	4f e7       	ldi	r20, 0x7F	; 127
    4084:	57 e4       	ldi	r21, 0x47	; 71
    4086:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    408a:	18 16       	cp	r1, r24
    408c:	0c f0       	brlt	.+2      	; 0x4090 <LCD_firstadd+0x1d34>
    408e:	43 c0       	rjmp	.+134    	; 0x4116 <LCD_firstadd+0x1dba>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4090:	fe 01       	movw	r30, r28
    4092:	e5 58       	subi	r30, 0x85	; 133
    4094:	ff 4f       	sbci	r31, 0xFF	; 255
    4096:	60 81       	ld	r22, Z
    4098:	71 81       	ldd	r23, Z+1	; 0x01
    409a:	82 81       	ldd	r24, Z+2	; 0x02
    409c:	93 81       	ldd	r25, Z+3	; 0x03
    409e:	20 e0       	ldi	r18, 0x00	; 0
    40a0:	30 e0       	ldi	r19, 0x00	; 0
    40a2:	40 e2       	ldi	r20, 0x20	; 32
    40a4:	51 e4       	ldi	r21, 0x41	; 65
    40a6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    40aa:	dc 01       	movw	r26, r24
    40ac:	cb 01       	movw	r24, r22
    40ae:	8e 01       	movw	r16, r28
    40b0:	0b 58       	subi	r16, 0x8B	; 139
    40b2:	1f 4f       	sbci	r17, 0xFF	; 255
    40b4:	bc 01       	movw	r22, r24
    40b6:	cd 01       	movw	r24, r26
    40b8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    40bc:	dc 01       	movw	r26, r24
    40be:	cb 01       	movw	r24, r22
    40c0:	f8 01       	movw	r30, r16
    40c2:	91 83       	std	Z+1, r25	; 0x01
    40c4:	80 83       	st	Z, r24
    40c6:	1f c0       	rjmp	.+62     	; 0x4106 <LCD_firstadd+0x1daa>
    40c8:	fe 01       	movw	r30, r28
    40ca:	ed 58       	subi	r30, 0x8D	; 141
    40cc:	ff 4f       	sbci	r31, 0xFF	; 255
    40ce:	88 ec       	ldi	r24, 0xC8	; 200
    40d0:	90 e0       	ldi	r25, 0x00	; 0
    40d2:	91 83       	std	Z+1, r25	; 0x01
    40d4:	80 83       	st	Z, r24
    40d6:	fe 01       	movw	r30, r28
    40d8:	ed 58       	subi	r30, 0x8D	; 141
    40da:	ff 4f       	sbci	r31, 0xFF	; 255
    40dc:	80 81       	ld	r24, Z
    40de:	91 81       	ldd	r25, Z+1	; 0x01
    40e0:	01 97       	sbiw	r24, 0x01	; 1
    40e2:	f1 f7       	brne	.-4      	; 0x40e0 <LCD_firstadd+0x1d84>
    40e4:	fe 01       	movw	r30, r28
    40e6:	ed 58       	subi	r30, 0x8D	; 141
    40e8:	ff 4f       	sbci	r31, 0xFF	; 255
    40ea:	91 83       	std	Z+1, r25	; 0x01
    40ec:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    40ee:	de 01       	movw	r26, r28
    40f0:	ab 58       	subi	r26, 0x8B	; 139
    40f2:	bf 4f       	sbci	r27, 0xFF	; 255
    40f4:	fe 01       	movw	r30, r28
    40f6:	eb 58       	subi	r30, 0x8B	; 139
    40f8:	ff 4f       	sbci	r31, 0xFF	; 255
    40fa:	80 81       	ld	r24, Z
    40fc:	91 81       	ldd	r25, Z+1	; 0x01
    40fe:	01 97       	sbiw	r24, 0x01	; 1
    4100:	11 96       	adiw	r26, 0x01	; 1
    4102:	9c 93       	st	X, r25
    4104:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4106:	fe 01       	movw	r30, r28
    4108:	eb 58       	subi	r30, 0x8B	; 139
    410a:	ff 4f       	sbci	r31, 0xFF	; 255
    410c:	80 81       	ld	r24, Z
    410e:	91 81       	ldd	r25, Z+1	; 0x01
    4110:	00 97       	sbiw	r24, 0x00	; 0
    4112:	d1 f6       	brne	.-76     	; 0x40c8 <LCD_firstadd+0x1d6c>
    4114:	27 c0       	rjmp	.+78     	; 0x4164 <LCD_firstadd+0x1e08>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4116:	8e 01       	movw	r16, r28
    4118:	0b 58       	subi	r16, 0x8B	; 139
    411a:	1f 4f       	sbci	r17, 0xFF	; 255
    411c:	fe 01       	movw	r30, r28
    411e:	e9 58       	subi	r30, 0x89	; 137
    4120:	ff 4f       	sbci	r31, 0xFF	; 255
    4122:	60 81       	ld	r22, Z
    4124:	71 81       	ldd	r23, Z+1	; 0x01
    4126:	82 81       	ldd	r24, Z+2	; 0x02
    4128:	93 81       	ldd	r25, Z+3	; 0x03
    412a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    412e:	dc 01       	movw	r26, r24
    4130:	cb 01       	movw	r24, r22
    4132:	f8 01       	movw	r30, r16
    4134:	91 83       	std	Z+1, r25	; 0x01
    4136:	80 83       	st	Z, r24
    4138:	de 01       	movw	r26, r28
    413a:	af 58       	subi	r26, 0x8F	; 143
    413c:	bf 4f       	sbci	r27, 0xFF	; 255
    413e:	fe 01       	movw	r30, r28
    4140:	eb 58       	subi	r30, 0x8B	; 139
    4142:	ff 4f       	sbci	r31, 0xFF	; 255
    4144:	80 81       	ld	r24, Z
    4146:	91 81       	ldd	r25, Z+1	; 0x01
    4148:	8d 93       	st	X+, r24
    414a:	9c 93       	st	X, r25
    414c:	fe 01       	movw	r30, r28
    414e:	ef 58       	subi	r30, 0x8F	; 143
    4150:	ff 4f       	sbci	r31, 0xFF	; 255
    4152:	80 81       	ld	r24, Z
    4154:	91 81       	ldd	r25, Z+1	; 0x01
    4156:	01 97       	sbiw	r24, 0x01	; 1
    4158:	f1 f7       	brne	.-4      	; 0x4156 <LCD_firstadd+0x1dfa>
    415a:	fe 01       	movw	r30, r28
    415c:	ef 58       	subi	r30, 0x8F	; 143
    415e:	ff 4f       	sbci	r31, 0xFF	; 255
    4160:	91 83       	std	Z+1, r25	; 0x01
    4162:	80 83       	st	Z, r24
	_delay_ms(10);
	LCD_write('i');
    4164:	89 e6       	ldi	r24, 0x69	; 105
    4166:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
    416a:	fe 01       	movw	r30, r28
    416c:	e3 59       	subi	r30, 0x93	; 147
    416e:	ff 4f       	sbci	r31, 0xFF	; 255
    4170:	80 e0       	ldi	r24, 0x00	; 0
    4172:	90 e0       	ldi	r25, 0x00	; 0
    4174:	a0 e2       	ldi	r26, 0x20	; 32
    4176:	b1 e4       	ldi	r27, 0x41	; 65
    4178:	80 83       	st	Z, r24
    417a:	91 83       	std	Z+1, r25	; 0x01
    417c:	a2 83       	std	Z+2, r26	; 0x02
    417e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4180:	8e 01       	movw	r16, r28
    4182:	07 59       	subi	r16, 0x97	; 151
    4184:	1f 4f       	sbci	r17, 0xFF	; 255
    4186:	fe 01       	movw	r30, r28
    4188:	e3 59       	subi	r30, 0x93	; 147
    418a:	ff 4f       	sbci	r31, 0xFF	; 255
    418c:	60 81       	ld	r22, Z
    418e:	71 81       	ldd	r23, Z+1	; 0x01
    4190:	82 81       	ldd	r24, Z+2	; 0x02
    4192:	93 81       	ldd	r25, Z+3	; 0x03
    4194:	20 e0       	ldi	r18, 0x00	; 0
    4196:	30 e0       	ldi	r19, 0x00	; 0
    4198:	4a ef       	ldi	r20, 0xFA	; 250
    419a:	54 e4       	ldi	r21, 0x44	; 68
    419c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    41a0:	dc 01       	movw	r26, r24
    41a2:	cb 01       	movw	r24, r22
    41a4:	f8 01       	movw	r30, r16
    41a6:	80 83       	st	Z, r24
    41a8:	91 83       	std	Z+1, r25	; 0x01
    41aa:	a2 83       	std	Z+2, r26	; 0x02
    41ac:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    41ae:	fe 01       	movw	r30, r28
    41b0:	e7 59       	subi	r30, 0x97	; 151
    41b2:	ff 4f       	sbci	r31, 0xFF	; 255
    41b4:	60 81       	ld	r22, Z
    41b6:	71 81       	ldd	r23, Z+1	; 0x01
    41b8:	82 81       	ldd	r24, Z+2	; 0x02
    41ba:	93 81       	ldd	r25, Z+3	; 0x03
    41bc:	20 e0       	ldi	r18, 0x00	; 0
    41be:	30 e0       	ldi	r19, 0x00	; 0
    41c0:	40 e8       	ldi	r20, 0x80	; 128
    41c2:	5f e3       	ldi	r21, 0x3F	; 63
    41c4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    41c8:	88 23       	and	r24, r24
    41ca:	44 f4       	brge	.+16     	; 0x41dc <LCD_firstadd+0x1e80>
		__ticks = 1;
    41cc:	fe 01       	movw	r30, r28
    41ce:	e9 59       	subi	r30, 0x99	; 153
    41d0:	ff 4f       	sbci	r31, 0xFF	; 255
    41d2:	81 e0       	ldi	r24, 0x01	; 1
    41d4:	90 e0       	ldi	r25, 0x00	; 0
    41d6:	91 83       	std	Z+1, r25	; 0x01
    41d8:	80 83       	st	Z, r24
    41da:	64 c0       	rjmp	.+200    	; 0x42a4 <LCD_firstadd+0x1f48>
	else if (__tmp > 65535)
    41dc:	fe 01       	movw	r30, r28
    41de:	e7 59       	subi	r30, 0x97	; 151
    41e0:	ff 4f       	sbci	r31, 0xFF	; 255
    41e2:	60 81       	ld	r22, Z
    41e4:	71 81       	ldd	r23, Z+1	; 0x01
    41e6:	82 81       	ldd	r24, Z+2	; 0x02
    41e8:	93 81       	ldd	r25, Z+3	; 0x03
    41ea:	20 e0       	ldi	r18, 0x00	; 0
    41ec:	3f ef       	ldi	r19, 0xFF	; 255
    41ee:	4f e7       	ldi	r20, 0x7F	; 127
    41f0:	57 e4       	ldi	r21, 0x47	; 71
    41f2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    41f6:	18 16       	cp	r1, r24
    41f8:	0c f0       	brlt	.+2      	; 0x41fc <LCD_firstadd+0x1ea0>
    41fa:	43 c0       	rjmp	.+134    	; 0x4282 <LCD_firstadd+0x1f26>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    41fc:	fe 01       	movw	r30, r28
    41fe:	e3 59       	subi	r30, 0x93	; 147
    4200:	ff 4f       	sbci	r31, 0xFF	; 255
    4202:	60 81       	ld	r22, Z
    4204:	71 81       	ldd	r23, Z+1	; 0x01
    4206:	82 81       	ldd	r24, Z+2	; 0x02
    4208:	93 81       	ldd	r25, Z+3	; 0x03
    420a:	20 e0       	ldi	r18, 0x00	; 0
    420c:	30 e0       	ldi	r19, 0x00	; 0
    420e:	40 e2       	ldi	r20, 0x20	; 32
    4210:	51 e4       	ldi	r21, 0x41	; 65
    4212:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4216:	dc 01       	movw	r26, r24
    4218:	cb 01       	movw	r24, r22
    421a:	8e 01       	movw	r16, r28
    421c:	09 59       	subi	r16, 0x99	; 153
    421e:	1f 4f       	sbci	r17, 0xFF	; 255
    4220:	bc 01       	movw	r22, r24
    4222:	cd 01       	movw	r24, r26
    4224:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4228:	dc 01       	movw	r26, r24
    422a:	cb 01       	movw	r24, r22
    422c:	f8 01       	movw	r30, r16
    422e:	91 83       	std	Z+1, r25	; 0x01
    4230:	80 83       	st	Z, r24
    4232:	1f c0       	rjmp	.+62     	; 0x4272 <LCD_firstadd+0x1f16>
    4234:	fe 01       	movw	r30, r28
    4236:	eb 59       	subi	r30, 0x9B	; 155
    4238:	ff 4f       	sbci	r31, 0xFF	; 255
    423a:	88 ec       	ldi	r24, 0xC8	; 200
    423c:	90 e0       	ldi	r25, 0x00	; 0
    423e:	91 83       	std	Z+1, r25	; 0x01
    4240:	80 83       	st	Z, r24
    4242:	fe 01       	movw	r30, r28
    4244:	eb 59       	subi	r30, 0x9B	; 155
    4246:	ff 4f       	sbci	r31, 0xFF	; 255
    4248:	80 81       	ld	r24, Z
    424a:	91 81       	ldd	r25, Z+1	; 0x01
    424c:	01 97       	sbiw	r24, 0x01	; 1
    424e:	f1 f7       	brne	.-4      	; 0x424c <LCD_firstadd+0x1ef0>
    4250:	fe 01       	movw	r30, r28
    4252:	eb 59       	subi	r30, 0x9B	; 155
    4254:	ff 4f       	sbci	r31, 0xFF	; 255
    4256:	91 83       	std	Z+1, r25	; 0x01
    4258:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    425a:	de 01       	movw	r26, r28
    425c:	a9 59       	subi	r26, 0x99	; 153
    425e:	bf 4f       	sbci	r27, 0xFF	; 255
    4260:	fe 01       	movw	r30, r28
    4262:	e9 59       	subi	r30, 0x99	; 153
    4264:	ff 4f       	sbci	r31, 0xFF	; 255
    4266:	80 81       	ld	r24, Z
    4268:	91 81       	ldd	r25, Z+1	; 0x01
    426a:	01 97       	sbiw	r24, 0x01	; 1
    426c:	11 96       	adiw	r26, 0x01	; 1
    426e:	9c 93       	st	X, r25
    4270:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4272:	fe 01       	movw	r30, r28
    4274:	e9 59       	subi	r30, 0x99	; 153
    4276:	ff 4f       	sbci	r31, 0xFF	; 255
    4278:	80 81       	ld	r24, Z
    427a:	91 81       	ldd	r25, Z+1	; 0x01
    427c:	00 97       	sbiw	r24, 0x00	; 0
    427e:	d1 f6       	brne	.-76     	; 0x4234 <LCD_firstadd+0x1ed8>
    4280:	27 c0       	rjmp	.+78     	; 0x42d0 <LCD_firstadd+0x1f74>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4282:	8e 01       	movw	r16, r28
    4284:	09 59       	subi	r16, 0x99	; 153
    4286:	1f 4f       	sbci	r17, 0xFF	; 255
    4288:	fe 01       	movw	r30, r28
    428a:	e7 59       	subi	r30, 0x97	; 151
    428c:	ff 4f       	sbci	r31, 0xFF	; 255
    428e:	60 81       	ld	r22, Z
    4290:	71 81       	ldd	r23, Z+1	; 0x01
    4292:	82 81       	ldd	r24, Z+2	; 0x02
    4294:	93 81       	ldd	r25, Z+3	; 0x03
    4296:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    429a:	dc 01       	movw	r26, r24
    429c:	cb 01       	movw	r24, r22
    429e:	f8 01       	movw	r30, r16
    42a0:	91 83       	std	Z+1, r25	; 0x01
    42a2:	80 83       	st	Z, r24
    42a4:	de 01       	movw	r26, r28
    42a6:	ad 59       	subi	r26, 0x9D	; 157
    42a8:	bf 4f       	sbci	r27, 0xFF	; 255
    42aa:	fe 01       	movw	r30, r28
    42ac:	e9 59       	subi	r30, 0x99	; 153
    42ae:	ff 4f       	sbci	r31, 0xFF	; 255
    42b0:	80 81       	ld	r24, Z
    42b2:	91 81       	ldd	r25, Z+1	; 0x01
    42b4:	8d 93       	st	X+, r24
    42b6:	9c 93       	st	X, r25
    42b8:	fe 01       	movw	r30, r28
    42ba:	ed 59       	subi	r30, 0x9D	; 157
    42bc:	ff 4f       	sbci	r31, 0xFF	; 255
    42be:	80 81       	ld	r24, Z
    42c0:	91 81       	ldd	r25, Z+1	; 0x01
    42c2:	01 97       	sbiw	r24, 0x01	; 1
    42c4:	f1 f7       	brne	.-4      	; 0x42c2 <LCD_firstadd+0x1f66>
    42c6:	fe 01       	movw	r30, r28
    42c8:	ed 59       	subi	r30, 0x9D	; 157
    42ca:	ff 4f       	sbci	r31, 0xFF	; 255
    42cc:	91 83       	std	Z+1, r25	; 0x01
    42ce:	80 83       	st	Z, r24
	_delay_ms(10);
	LCD_write('n');
    42d0:	8e e6       	ldi	r24, 0x6E	; 110
    42d2:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
    42d6:	fe 01       	movw	r30, r28
    42d8:	e1 5a       	subi	r30, 0xA1	; 161
    42da:	ff 4f       	sbci	r31, 0xFF	; 255
    42dc:	80 e0       	ldi	r24, 0x00	; 0
    42de:	90 e0       	ldi	r25, 0x00	; 0
    42e0:	a0 e2       	ldi	r26, 0x20	; 32
    42e2:	b1 e4       	ldi	r27, 0x41	; 65
    42e4:	80 83       	st	Z, r24
    42e6:	91 83       	std	Z+1, r25	; 0x01
    42e8:	a2 83       	std	Z+2, r26	; 0x02
    42ea:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    42ec:	8e 01       	movw	r16, r28
    42ee:	05 5a       	subi	r16, 0xA5	; 165
    42f0:	1f 4f       	sbci	r17, 0xFF	; 255
    42f2:	fe 01       	movw	r30, r28
    42f4:	e1 5a       	subi	r30, 0xA1	; 161
    42f6:	ff 4f       	sbci	r31, 0xFF	; 255
    42f8:	60 81       	ld	r22, Z
    42fa:	71 81       	ldd	r23, Z+1	; 0x01
    42fc:	82 81       	ldd	r24, Z+2	; 0x02
    42fe:	93 81       	ldd	r25, Z+3	; 0x03
    4300:	20 e0       	ldi	r18, 0x00	; 0
    4302:	30 e0       	ldi	r19, 0x00	; 0
    4304:	4a ef       	ldi	r20, 0xFA	; 250
    4306:	54 e4       	ldi	r21, 0x44	; 68
    4308:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    430c:	dc 01       	movw	r26, r24
    430e:	cb 01       	movw	r24, r22
    4310:	f8 01       	movw	r30, r16
    4312:	80 83       	st	Z, r24
    4314:	91 83       	std	Z+1, r25	; 0x01
    4316:	a2 83       	std	Z+2, r26	; 0x02
    4318:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    431a:	fe 01       	movw	r30, r28
    431c:	e5 5a       	subi	r30, 0xA5	; 165
    431e:	ff 4f       	sbci	r31, 0xFF	; 255
    4320:	60 81       	ld	r22, Z
    4322:	71 81       	ldd	r23, Z+1	; 0x01
    4324:	82 81       	ldd	r24, Z+2	; 0x02
    4326:	93 81       	ldd	r25, Z+3	; 0x03
    4328:	20 e0       	ldi	r18, 0x00	; 0
    432a:	30 e0       	ldi	r19, 0x00	; 0
    432c:	40 e8       	ldi	r20, 0x80	; 128
    432e:	5f e3       	ldi	r21, 0x3F	; 63
    4330:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4334:	88 23       	and	r24, r24
    4336:	44 f4       	brge	.+16     	; 0x4348 <LCD_firstadd+0x1fec>
		__ticks = 1;
    4338:	fe 01       	movw	r30, r28
    433a:	e7 5a       	subi	r30, 0xA7	; 167
    433c:	ff 4f       	sbci	r31, 0xFF	; 255
    433e:	81 e0       	ldi	r24, 0x01	; 1
    4340:	90 e0       	ldi	r25, 0x00	; 0
    4342:	91 83       	std	Z+1, r25	; 0x01
    4344:	80 83       	st	Z, r24
    4346:	64 c0       	rjmp	.+200    	; 0x4410 <LCD_firstadd+0x20b4>
	else if (__tmp > 65535)
    4348:	fe 01       	movw	r30, r28
    434a:	e5 5a       	subi	r30, 0xA5	; 165
    434c:	ff 4f       	sbci	r31, 0xFF	; 255
    434e:	60 81       	ld	r22, Z
    4350:	71 81       	ldd	r23, Z+1	; 0x01
    4352:	82 81       	ldd	r24, Z+2	; 0x02
    4354:	93 81       	ldd	r25, Z+3	; 0x03
    4356:	20 e0       	ldi	r18, 0x00	; 0
    4358:	3f ef       	ldi	r19, 0xFF	; 255
    435a:	4f e7       	ldi	r20, 0x7F	; 127
    435c:	57 e4       	ldi	r21, 0x47	; 71
    435e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4362:	18 16       	cp	r1, r24
    4364:	0c f0       	brlt	.+2      	; 0x4368 <LCD_firstadd+0x200c>
    4366:	43 c0       	rjmp	.+134    	; 0x43ee <LCD_firstadd+0x2092>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4368:	fe 01       	movw	r30, r28
    436a:	e1 5a       	subi	r30, 0xA1	; 161
    436c:	ff 4f       	sbci	r31, 0xFF	; 255
    436e:	60 81       	ld	r22, Z
    4370:	71 81       	ldd	r23, Z+1	; 0x01
    4372:	82 81       	ldd	r24, Z+2	; 0x02
    4374:	93 81       	ldd	r25, Z+3	; 0x03
    4376:	20 e0       	ldi	r18, 0x00	; 0
    4378:	30 e0       	ldi	r19, 0x00	; 0
    437a:	40 e2       	ldi	r20, 0x20	; 32
    437c:	51 e4       	ldi	r21, 0x41	; 65
    437e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4382:	dc 01       	movw	r26, r24
    4384:	cb 01       	movw	r24, r22
    4386:	8e 01       	movw	r16, r28
    4388:	07 5a       	subi	r16, 0xA7	; 167
    438a:	1f 4f       	sbci	r17, 0xFF	; 255
    438c:	bc 01       	movw	r22, r24
    438e:	cd 01       	movw	r24, r26
    4390:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4394:	dc 01       	movw	r26, r24
    4396:	cb 01       	movw	r24, r22
    4398:	f8 01       	movw	r30, r16
    439a:	91 83       	std	Z+1, r25	; 0x01
    439c:	80 83       	st	Z, r24
    439e:	1f c0       	rjmp	.+62     	; 0x43de <LCD_firstadd+0x2082>
    43a0:	fe 01       	movw	r30, r28
    43a2:	e9 5a       	subi	r30, 0xA9	; 169
    43a4:	ff 4f       	sbci	r31, 0xFF	; 255
    43a6:	88 ec       	ldi	r24, 0xC8	; 200
    43a8:	90 e0       	ldi	r25, 0x00	; 0
    43aa:	91 83       	std	Z+1, r25	; 0x01
    43ac:	80 83       	st	Z, r24
    43ae:	fe 01       	movw	r30, r28
    43b0:	e9 5a       	subi	r30, 0xA9	; 169
    43b2:	ff 4f       	sbci	r31, 0xFF	; 255
    43b4:	80 81       	ld	r24, Z
    43b6:	91 81       	ldd	r25, Z+1	; 0x01
    43b8:	01 97       	sbiw	r24, 0x01	; 1
    43ba:	f1 f7       	brne	.-4      	; 0x43b8 <LCD_firstadd+0x205c>
    43bc:	fe 01       	movw	r30, r28
    43be:	e9 5a       	subi	r30, 0xA9	; 169
    43c0:	ff 4f       	sbci	r31, 0xFF	; 255
    43c2:	91 83       	std	Z+1, r25	; 0x01
    43c4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    43c6:	de 01       	movw	r26, r28
    43c8:	a7 5a       	subi	r26, 0xA7	; 167
    43ca:	bf 4f       	sbci	r27, 0xFF	; 255
    43cc:	fe 01       	movw	r30, r28
    43ce:	e7 5a       	subi	r30, 0xA7	; 167
    43d0:	ff 4f       	sbci	r31, 0xFF	; 255
    43d2:	80 81       	ld	r24, Z
    43d4:	91 81       	ldd	r25, Z+1	; 0x01
    43d6:	01 97       	sbiw	r24, 0x01	; 1
    43d8:	11 96       	adiw	r26, 0x01	; 1
    43da:	9c 93       	st	X, r25
    43dc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    43de:	fe 01       	movw	r30, r28
    43e0:	e7 5a       	subi	r30, 0xA7	; 167
    43e2:	ff 4f       	sbci	r31, 0xFF	; 255
    43e4:	80 81       	ld	r24, Z
    43e6:	91 81       	ldd	r25, Z+1	; 0x01
    43e8:	00 97       	sbiw	r24, 0x00	; 0
    43ea:	d1 f6       	brne	.-76     	; 0x43a0 <LCD_firstadd+0x2044>
    43ec:	27 c0       	rjmp	.+78     	; 0x443c <LCD_firstadd+0x20e0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    43ee:	8e 01       	movw	r16, r28
    43f0:	07 5a       	subi	r16, 0xA7	; 167
    43f2:	1f 4f       	sbci	r17, 0xFF	; 255
    43f4:	fe 01       	movw	r30, r28
    43f6:	e5 5a       	subi	r30, 0xA5	; 165
    43f8:	ff 4f       	sbci	r31, 0xFF	; 255
    43fa:	60 81       	ld	r22, Z
    43fc:	71 81       	ldd	r23, Z+1	; 0x01
    43fe:	82 81       	ldd	r24, Z+2	; 0x02
    4400:	93 81       	ldd	r25, Z+3	; 0x03
    4402:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4406:	dc 01       	movw	r26, r24
    4408:	cb 01       	movw	r24, r22
    440a:	f8 01       	movw	r30, r16
    440c:	91 83       	std	Z+1, r25	; 0x01
    440e:	80 83       	st	Z, r24
    4410:	de 01       	movw	r26, r28
    4412:	ab 5a       	subi	r26, 0xAB	; 171
    4414:	bf 4f       	sbci	r27, 0xFF	; 255
    4416:	fe 01       	movw	r30, r28
    4418:	e7 5a       	subi	r30, 0xA7	; 167
    441a:	ff 4f       	sbci	r31, 0xFF	; 255
    441c:	80 81       	ld	r24, Z
    441e:	91 81       	ldd	r25, Z+1	; 0x01
    4420:	8d 93       	st	X+, r24
    4422:	9c 93       	st	X, r25
    4424:	fe 01       	movw	r30, r28
    4426:	eb 5a       	subi	r30, 0xAB	; 171
    4428:	ff 4f       	sbci	r31, 0xFF	; 255
    442a:	80 81       	ld	r24, Z
    442c:	91 81       	ldd	r25, Z+1	; 0x01
    442e:	01 97       	sbiw	r24, 0x01	; 1
    4430:	f1 f7       	brne	.-4      	; 0x442e <LCD_firstadd+0x20d2>
    4432:	fe 01       	movw	r30, r28
    4434:	eb 5a       	subi	r30, 0xAB	; 171
    4436:	ff 4f       	sbci	r31, 0xFF	; 255
    4438:	91 83       	std	Z+1, r25	; 0x01
    443a:	80 83       	st	Z, r24
	_delay_ms(10);
	LCD_write('e');
    443c:	85 e6       	ldi	r24, 0x65	; 101
    443e:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
    4442:	fe 01       	movw	r30, r28
    4444:	ef 5a       	subi	r30, 0xAF	; 175
    4446:	ff 4f       	sbci	r31, 0xFF	; 255
    4448:	80 e0       	ldi	r24, 0x00	; 0
    444a:	90 e0       	ldi	r25, 0x00	; 0
    444c:	a0 e2       	ldi	r26, 0x20	; 32
    444e:	b1 e4       	ldi	r27, 0x41	; 65
    4450:	80 83       	st	Z, r24
    4452:	91 83       	std	Z+1, r25	; 0x01
    4454:	a2 83       	std	Z+2, r26	; 0x02
    4456:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4458:	8e 01       	movw	r16, r28
    445a:	03 5b       	subi	r16, 0xB3	; 179
    445c:	1f 4f       	sbci	r17, 0xFF	; 255
    445e:	fe 01       	movw	r30, r28
    4460:	ef 5a       	subi	r30, 0xAF	; 175
    4462:	ff 4f       	sbci	r31, 0xFF	; 255
    4464:	60 81       	ld	r22, Z
    4466:	71 81       	ldd	r23, Z+1	; 0x01
    4468:	82 81       	ldd	r24, Z+2	; 0x02
    446a:	93 81       	ldd	r25, Z+3	; 0x03
    446c:	20 e0       	ldi	r18, 0x00	; 0
    446e:	30 e0       	ldi	r19, 0x00	; 0
    4470:	4a ef       	ldi	r20, 0xFA	; 250
    4472:	54 e4       	ldi	r21, 0x44	; 68
    4474:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4478:	dc 01       	movw	r26, r24
    447a:	cb 01       	movw	r24, r22
    447c:	f8 01       	movw	r30, r16
    447e:	80 83       	st	Z, r24
    4480:	91 83       	std	Z+1, r25	; 0x01
    4482:	a2 83       	std	Z+2, r26	; 0x02
    4484:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4486:	fe 01       	movw	r30, r28
    4488:	e3 5b       	subi	r30, 0xB3	; 179
    448a:	ff 4f       	sbci	r31, 0xFF	; 255
    448c:	60 81       	ld	r22, Z
    448e:	71 81       	ldd	r23, Z+1	; 0x01
    4490:	82 81       	ldd	r24, Z+2	; 0x02
    4492:	93 81       	ldd	r25, Z+3	; 0x03
    4494:	20 e0       	ldi	r18, 0x00	; 0
    4496:	30 e0       	ldi	r19, 0x00	; 0
    4498:	40 e8       	ldi	r20, 0x80	; 128
    449a:	5f e3       	ldi	r21, 0x3F	; 63
    449c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    44a0:	88 23       	and	r24, r24
    44a2:	44 f4       	brge	.+16     	; 0x44b4 <LCD_firstadd+0x2158>
		__ticks = 1;
    44a4:	fe 01       	movw	r30, r28
    44a6:	e5 5b       	subi	r30, 0xB5	; 181
    44a8:	ff 4f       	sbci	r31, 0xFF	; 255
    44aa:	81 e0       	ldi	r24, 0x01	; 1
    44ac:	90 e0       	ldi	r25, 0x00	; 0
    44ae:	91 83       	std	Z+1, r25	; 0x01
    44b0:	80 83       	st	Z, r24
    44b2:	64 c0       	rjmp	.+200    	; 0x457c <LCD_firstadd+0x2220>
	else if (__tmp > 65535)
    44b4:	fe 01       	movw	r30, r28
    44b6:	e3 5b       	subi	r30, 0xB3	; 179
    44b8:	ff 4f       	sbci	r31, 0xFF	; 255
    44ba:	60 81       	ld	r22, Z
    44bc:	71 81       	ldd	r23, Z+1	; 0x01
    44be:	82 81       	ldd	r24, Z+2	; 0x02
    44c0:	93 81       	ldd	r25, Z+3	; 0x03
    44c2:	20 e0       	ldi	r18, 0x00	; 0
    44c4:	3f ef       	ldi	r19, 0xFF	; 255
    44c6:	4f e7       	ldi	r20, 0x7F	; 127
    44c8:	57 e4       	ldi	r21, 0x47	; 71
    44ca:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    44ce:	18 16       	cp	r1, r24
    44d0:	0c f0       	brlt	.+2      	; 0x44d4 <LCD_firstadd+0x2178>
    44d2:	43 c0       	rjmp	.+134    	; 0x455a <LCD_firstadd+0x21fe>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    44d4:	fe 01       	movw	r30, r28
    44d6:	ef 5a       	subi	r30, 0xAF	; 175
    44d8:	ff 4f       	sbci	r31, 0xFF	; 255
    44da:	60 81       	ld	r22, Z
    44dc:	71 81       	ldd	r23, Z+1	; 0x01
    44de:	82 81       	ldd	r24, Z+2	; 0x02
    44e0:	93 81       	ldd	r25, Z+3	; 0x03
    44e2:	20 e0       	ldi	r18, 0x00	; 0
    44e4:	30 e0       	ldi	r19, 0x00	; 0
    44e6:	40 e2       	ldi	r20, 0x20	; 32
    44e8:	51 e4       	ldi	r21, 0x41	; 65
    44ea:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    44ee:	dc 01       	movw	r26, r24
    44f0:	cb 01       	movw	r24, r22
    44f2:	8e 01       	movw	r16, r28
    44f4:	05 5b       	subi	r16, 0xB5	; 181
    44f6:	1f 4f       	sbci	r17, 0xFF	; 255
    44f8:	bc 01       	movw	r22, r24
    44fa:	cd 01       	movw	r24, r26
    44fc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4500:	dc 01       	movw	r26, r24
    4502:	cb 01       	movw	r24, r22
    4504:	f8 01       	movw	r30, r16
    4506:	91 83       	std	Z+1, r25	; 0x01
    4508:	80 83       	st	Z, r24
    450a:	1f c0       	rjmp	.+62     	; 0x454a <LCD_firstadd+0x21ee>
    450c:	fe 01       	movw	r30, r28
    450e:	e7 5b       	subi	r30, 0xB7	; 183
    4510:	ff 4f       	sbci	r31, 0xFF	; 255
    4512:	88 ec       	ldi	r24, 0xC8	; 200
    4514:	90 e0       	ldi	r25, 0x00	; 0
    4516:	91 83       	std	Z+1, r25	; 0x01
    4518:	80 83       	st	Z, r24
    451a:	fe 01       	movw	r30, r28
    451c:	e7 5b       	subi	r30, 0xB7	; 183
    451e:	ff 4f       	sbci	r31, 0xFF	; 255
    4520:	80 81       	ld	r24, Z
    4522:	91 81       	ldd	r25, Z+1	; 0x01
    4524:	01 97       	sbiw	r24, 0x01	; 1
    4526:	f1 f7       	brne	.-4      	; 0x4524 <LCD_firstadd+0x21c8>
    4528:	fe 01       	movw	r30, r28
    452a:	e7 5b       	subi	r30, 0xB7	; 183
    452c:	ff 4f       	sbci	r31, 0xFF	; 255
    452e:	91 83       	std	Z+1, r25	; 0x01
    4530:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4532:	de 01       	movw	r26, r28
    4534:	a5 5b       	subi	r26, 0xB5	; 181
    4536:	bf 4f       	sbci	r27, 0xFF	; 255
    4538:	fe 01       	movw	r30, r28
    453a:	e5 5b       	subi	r30, 0xB5	; 181
    453c:	ff 4f       	sbci	r31, 0xFF	; 255
    453e:	80 81       	ld	r24, Z
    4540:	91 81       	ldd	r25, Z+1	; 0x01
    4542:	01 97       	sbiw	r24, 0x01	; 1
    4544:	11 96       	adiw	r26, 0x01	; 1
    4546:	9c 93       	st	X, r25
    4548:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    454a:	fe 01       	movw	r30, r28
    454c:	e5 5b       	subi	r30, 0xB5	; 181
    454e:	ff 4f       	sbci	r31, 0xFF	; 255
    4550:	80 81       	ld	r24, Z
    4552:	91 81       	ldd	r25, Z+1	; 0x01
    4554:	00 97       	sbiw	r24, 0x00	; 0
    4556:	d1 f6       	brne	.-76     	; 0x450c <LCD_firstadd+0x21b0>
    4558:	27 c0       	rjmp	.+78     	; 0x45a8 <LCD_firstadd+0x224c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    455a:	8e 01       	movw	r16, r28
    455c:	05 5b       	subi	r16, 0xB5	; 181
    455e:	1f 4f       	sbci	r17, 0xFF	; 255
    4560:	fe 01       	movw	r30, r28
    4562:	e3 5b       	subi	r30, 0xB3	; 179
    4564:	ff 4f       	sbci	r31, 0xFF	; 255
    4566:	60 81       	ld	r22, Z
    4568:	71 81       	ldd	r23, Z+1	; 0x01
    456a:	82 81       	ldd	r24, Z+2	; 0x02
    456c:	93 81       	ldd	r25, Z+3	; 0x03
    456e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4572:	dc 01       	movw	r26, r24
    4574:	cb 01       	movw	r24, r22
    4576:	f8 01       	movw	r30, r16
    4578:	91 83       	std	Z+1, r25	; 0x01
    457a:	80 83       	st	Z, r24
    457c:	de 01       	movw	r26, r28
    457e:	a9 5b       	subi	r26, 0xB9	; 185
    4580:	bf 4f       	sbci	r27, 0xFF	; 255
    4582:	fe 01       	movw	r30, r28
    4584:	e5 5b       	subi	r30, 0xB5	; 181
    4586:	ff 4f       	sbci	r31, 0xFF	; 255
    4588:	80 81       	ld	r24, Z
    458a:	91 81       	ldd	r25, Z+1	; 0x01
    458c:	8d 93       	st	X+, r24
    458e:	9c 93       	st	X, r25
    4590:	fe 01       	movw	r30, r28
    4592:	e9 5b       	subi	r30, 0xB9	; 185
    4594:	ff 4f       	sbci	r31, 0xFF	; 255
    4596:	80 81       	ld	r24, Z
    4598:	91 81       	ldd	r25, Z+1	; 0x01
    459a:	01 97       	sbiw	r24, 0x01	; 1
    459c:	f1 f7       	brne	.-4      	; 0x459a <LCD_firstadd+0x223e>
    459e:	fe 01       	movw	r30, r28
    45a0:	e9 5b       	subi	r30, 0xB9	; 185
    45a2:	ff 4f       	sbci	r31, 0xFF	; 255
    45a4:	91 83       	std	Z+1, r25	; 0x01
    45a6:	80 83       	st	Z, r24
	_delay_ms(10);
	LCD_write('e');
    45a8:	85 e6       	ldi	r24, 0x65	; 101
    45aa:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
    45ae:	fe 01       	movw	r30, r28
    45b0:	ed 5b       	subi	r30, 0xBD	; 189
    45b2:	ff 4f       	sbci	r31, 0xFF	; 255
    45b4:	80 e0       	ldi	r24, 0x00	; 0
    45b6:	90 e0       	ldi	r25, 0x00	; 0
    45b8:	a0 e2       	ldi	r26, 0x20	; 32
    45ba:	b1 e4       	ldi	r27, 0x41	; 65
    45bc:	80 83       	st	Z, r24
    45be:	91 83       	std	Z+1, r25	; 0x01
    45c0:	a2 83       	std	Z+2, r26	; 0x02
    45c2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    45c4:	8e 01       	movw	r16, r28
    45c6:	01 5c       	subi	r16, 0xC1	; 193
    45c8:	1f 4f       	sbci	r17, 0xFF	; 255
    45ca:	fe 01       	movw	r30, r28
    45cc:	ed 5b       	subi	r30, 0xBD	; 189
    45ce:	ff 4f       	sbci	r31, 0xFF	; 255
    45d0:	60 81       	ld	r22, Z
    45d2:	71 81       	ldd	r23, Z+1	; 0x01
    45d4:	82 81       	ldd	r24, Z+2	; 0x02
    45d6:	93 81       	ldd	r25, Z+3	; 0x03
    45d8:	20 e0       	ldi	r18, 0x00	; 0
    45da:	30 e0       	ldi	r19, 0x00	; 0
    45dc:	4a ef       	ldi	r20, 0xFA	; 250
    45de:	54 e4       	ldi	r21, 0x44	; 68
    45e0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    45e4:	dc 01       	movw	r26, r24
    45e6:	cb 01       	movw	r24, r22
    45e8:	f8 01       	movw	r30, r16
    45ea:	80 83       	st	Z, r24
    45ec:	91 83       	std	Z+1, r25	; 0x01
    45ee:	a2 83       	std	Z+2, r26	; 0x02
    45f0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    45f2:	fe 01       	movw	r30, r28
    45f4:	ff 96       	adiw	r30, 0x3f	; 63
    45f6:	60 81       	ld	r22, Z
    45f8:	71 81       	ldd	r23, Z+1	; 0x01
    45fa:	82 81       	ldd	r24, Z+2	; 0x02
    45fc:	93 81       	ldd	r25, Z+3	; 0x03
    45fe:	20 e0       	ldi	r18, 0x00	; 0
    4600:	30 e0       	ldi	r19, 0x00	; 0
    4602:	40 e8       	ldi	r20, 0x80	; 128
    4604:	5f e3       	ldi	r21, 0x3F	; 63
    4606:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    460a:	88 23       	and	r24, r24
    460c:	2c f4       	brge	.+10     	; 0x4618 <LCD_firstadd+0x22bc>
		__ticks = 1;
    460e:	81 e0       	ldi	r24, 0x01	; 1
    4610:	90 e0       	ldi	r25, 0x00	; 0
    4612:	9e af       	std	Y+62, r25	; 0x3e
    4614:	8d af       	std	Y+61, r24	; 0x3d
    4616:	46 c0       	rjmp	.+140    	; 0x46a4 <LCD_firstadd+0x2348>
	else if (__tmp > 65535)
    4618:	fe 01       	movw	r30, r28
    461a:	ff 96       	adiw	r30, 0x3f	; 63
    461c:	60 81       	ld	r22, Z
    461e:	71 81       	ldd	r23, Z+1	; 0x01
    4620:	82 81       	ldd	r24, Z+2	; 0x02
    4622:	93 81       	ldd	r25, Z+3	; 0x03
    4624:	20 e0       	ldi	r18, 0x00	; 0
    4626:	3f ef       	ldi	r19, 0xFF	; 255
    4628:	4f e7       	ldi	r20, 0x7F	; 127
    462a:	57 e4       	ldi	r21, 0x47	; 71
    462c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4630:	18 16       	cp	r1, r24
    4632:	64 f5       	brge	.+88     	; 0x468c <LCD_firstadd+0x2330>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4634:	fe 01       	movw	r30, r28
    4636:	ed 5b       	subi	r30, 0xBD	; 189
    4638:	ff 4f       	sbci	r31, 0xFF	; 255
    463a:	60 81       	ld	r22, Z
    463c:	71 81       	ldd	r23, Z+1	; 0x01
    463e:	82 81       	ldd	r24, Z+2	; 0x02
    4640:	93 81       	ldd	r25, Z+3	; 0x03
    4642:	20 e0       	ldi	r18, 0x00	; 0
    4644:	30 e0       	ldi	r19, 0x00	; 0
    4646:	40 e2       	ldi	r20, 0x20	; 32
    4648:	51 e4       	ldi	r21, 0x41	; 65
    464a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    464e:	dc 01       	movw	r26, r24
    4650:	cb 01       	movw	r24, r22
    4652:	bc 01       	movw	r22, r24
    4654:	cd 01       	movw	r24, r26
    4656:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    465a:	dc 01       	movw	r26, r24
    465c:	cb 01       	movw	r24, r22
    465e:	9e af       	std	Y+62, r25	; 0x3e
    4660:	8d af       	std	Y+61, r24	; 0x3d
    4662:	0f c0       	rjmp	.+30     	; 0x4682 <LCD_firstadd+0x2326>
    4664:	88 ec       	ldi	r24, 0xC8	; 200
    4666:	90 e0       	ldi	r25, 0x00	; 0
    4668:	9c af       	std	Y+60, r25	; 0x3c
    466a:	8b af       	std	Y+59, r24	; 0x3b
    466c:	8b ad       	ldd	r24, Y+59	; 0x3b
    466e:	9c ad       	ldd	r25, Y+60	; 0x3c
    4670:	01 97       	sbiw	r24, 0x01	; 1
    4672:	f1 f7       	brne	.-4      	; 0x4670 <LCD_firstadd+0x2314>
    4674:	9c af       	std	Y+60, r25	; 0x3c
    4676:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4678:	8d ad       	ldd	r24, Y+61	; 0x3d
    467a:	9e ad       	ldd	r25, Y+62	; 0x3e
    467c:	01 97       	sbiw	r24, 0x01	; 1
    467e:	9e af       	std	Y+62, r25	; 0x3e
    4680:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4682:	8d ad       	ldd	r24, Y+61	; 0x3d
    4684:	9e ad       	ldd	r25, Y+62	; 0x3e
    4686:	00 97       	sbiw	r24, 0x00	; 0
    4688:	69 f7       	brne	.-38     	; 0x4664 <LCD_firstadd+0x2308>
    468a:	16 c0       	rjmp	.+44     	; 0x46b8 <LCD_firstadd+0x235c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    468c:	fe 01       	movw	r30, r28
    468e:	ff 96       	adiw	r30, 0x3f	; 63
    4690:	60 81       	ld	r22, Z
    4692:	71 81       	ldd	r23, Z+1	; 0x01
    4694:	82 81       	ldd	r24, Z+2	; 0x02
    4696:	93 81       	ldd	r25, Z+3	; 0x03
    4698:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    469c:	dc 01       	movw	r26, r24
    469e:	cb 01       	movw	r24, r22
    46a0:	9e af       	std	Y+62, r25	; 0x3e
    46a2:	8d af       	std	Y+61, r24	; 0x3d
    46a4:	8d ad       	ldd	r24, Y+61	; 0x3d
    46a6:	9e ad       	ldd	r25, Y+62	; 0x3e
    46a8:	9a af       	std	Y+58, r25	; 0x3a
    46aa:	89 af       	std	Y+57, r24	; 0x39
    46ac:	89 ad       	ldd	r24, Y+57	; 0x39
    46ae:	9a ad       	ldd	r25, Y+58	; 0x3a
    46b0:	01 97       	sbiw	r24, 0x01	; 1
    46b2:	f1 f7       	brne	.-4      	; 0x46b0 <LCD_firstadd+0x2354>
    46b4:	9a af       	std	Y+58, r25	; 0x3a
    46b6:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(10);
	LCD_write('r');
    46b8:	82 e7       	ldi	r24, 0x72	; 114
    46ba:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
    46be:	80 e0       	ldi	r24, 0x00	; 0
    46c0:	90 e0       	ldi	r25, 0x00	; 0
    46c2:	a0 e2       	ldi	r26, 0x20	; 32
    46c4:	b1 e4       	ldi	r27, 0x41	; 65
    46c6:	8d ab       	std	Y+53, r24	; 0x35
    46c8:	9e ab       	std	Y+54, r25	; 0x36
    46ca:	af ab       	std	Y+55, r26	; 0x37
    46cc:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    46ce:	6d a9       	ldd	r22, Y+53	; 0x35
    46d0:	7e a9       	ldd	r23, Y+54	; 0x36
    46d2:	8f a9       	ldd	r24, Y+55	; 0x37
    46d4:	98 ad       	ldd	r25, Y+56	; 0x38
    46d6:	20 e0       	ldi	r18, 0x00	; 0
    46d8:	30 e0       	ldi	r19, 0x00	; 0
    46da:	4a ef       	ldi	r20, 0xFA	; 250
    46dc:	54 e4       	ldi	r21, 0x44	; 68
    46de:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    46e2:	dc 01       	movw	r26, r24
    46e4:	cb 01       	movw	r24, r22
    46e6:	89 ab       	std	Y+49, r24	; 0x31
    46e8:	9a ab       	std	Y+50, r25	; 0x32
    46ea:	ab ab       	std	Y+51, r26	; 0x33
    46ec:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    46ee:	69 a9       	ldd	r22, Y+49	; 0x31
    46f0:	7a a9       	ldd	r23, Y+50	; 0x32
    46f2:	8b a9       	ldd	r24, Y+51	; 0x33
    46f4:	9c a9       	ldd	r25, Y+52	; 0x34
    46f6:	20 e0       	ldi	r18, 0x00	; 0
    46f8:	30 e0       	ldi	r19, 0x00	; 0
    46fa:	40 e8       	ldi	r20, 0x80	; 128
    46fc:	5f e3       	ldi	r21, 0x3F	; 63
    46fe:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4702:	88 23       	and	r24, r24
    4704:	2c f4       	brge	.+10     	; 0x4710 <LCD_firstadd+0x23b4>
		__ticks = 1;
    4706:	81 e0       	ldi	r24, 0x01	; 1
    4708:	90 e0       	ldi	r25, 0x00	; 0
    470a:	98 ab       	std	Y+48, r25	; 0x30
    470c:	8f a7       	std	Y+47, r24	; 0x2f
    470e:	3f c0       	rjmp	.+126    	; 0x478e <LCD_firstadd+0x2432>
	else if (__tmp > 65535)
    4710:	69 a9       	ldd	r22, Y+49	; 0x31
    4712:	7a a9       	ldd	r23, Y+50	; 0x32
    4714:	8b a9       	ldd	r24, Y+51	; 0x33
    4716:	9c a9       	ldd	r25, Y+52	; 0x34
    4718:	20 e0       	ldi	r18, 0x00	; 0
    471a:	3f ef       	ldi	r19, 0xFF	; 255
    471c:	4f e7       	ldi	r20, 0x7F	; 127
    471e:	57 e4       	ldi	r21, 0x47	; 71
    4720:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4724:	18 16       	cp	r1, r24
    4726:	4c f5       	brge	.+82     	; 0x477a <LCD_firstadd+0x241e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4728:	6d a9       	ldd	r22, Y+53	; 0x35
    472a:	7e a9       	ldd	r23, Y+54	; 0x36
    472c:	8f a9       	ldd	r24, Y+55	; 0x37
    472e:	98 ad       	ldd	r25, Y+56	; 0x38
    4730:	20 e0       	ldi	r18, 0x00	; 0
    4732:	30 e0       	ldi	r19, 0x00	; 0
    4734:	40 e2       	ldi	r20, 0x20	; 32
    4736:	51 e4       	ldi	r21, 0x41	; 65
    4738:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    473c:	dc 01       	movw	r26, r24
    473e:	cb 01       	movw	r24, r22
    4740:	bc 01       	movw	r22, r24
    4742:	cd 01       	movw	r24, r26
    4744:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4748:	dc 01       	movw	r26, r24
    474a:	cb 01       	movw	r24, r22
    474c:	98 ab       	std	Y+48, r25	; 0x30
    474e:	8f a7       	std	Y+47, r24	; 0x2f
    4750:	0f c0       	rjmp	.+30     	; 0x4770 <LCD_firstadd+0x2414>
    4752:	88 ec       	ldi	r24, 0xC8	; 200
    4754:	90 e0       	ldi	r25, 0x00	; 0
    4756:	9e a7       	std	Y+46, r25	; 0x2e
    4758:	8d a7       	std	Y+45, r24	; 0x2d
    475a:	8d a5       	ldd	r24, Y+45	; 0x2d
    475c:	9e a5       	ldd	r25, Y+46	; 0x2e
    475e:	01 97       	sbiw	r24, 0x01	; 1
    4760:	f1 f7       	brne	.-4      	; 0x475e <LCD_firstadd+0x2402>
    4762:	9e a7       	std	Y+46, r25	; 0x2e
    4764:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4766:	8f a5       	ldd	r24, Y+47	; 0x2f
    4768:	98 a9       	ldd	r25, Y+48	; 0x30
    476a:	01 97       	sbiw	r24, 0x01	; 1
    476c:	98 ab       	std	Y+48, r25	; 0x30
    476e:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4770:	8f a5       	ldd	r24, Y+47	; 0x2f
    4772:	98 a9       	ldd	r25, Y+48	; 0x30
    4774:	00 97       	sbiw	r24, 0x00	; 0
    4776:	69 f7       	brne	.-38     	; 0x4752 <LCD_firstadd+0x23f6>
    4778:	14 c0       	rjmp	.+40     	; 0x47a2 <LCD_firstadd+0x2446>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    477a:	69 a9       	ldd	r22, Y+49	; 0x31
    477c:	7a a9       	ldd	r23, Y+50	; 0x32
    477e:	8b a9       	ldd	r24, Y+51	; 0x33
    4780:	9c a9       	ldd	r25, Y+52	; 0x34
    4782:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4786:	dc 01       	movw	r26, r24
    4788:	cb 01       	movw	r24, r22
    478a:	98 ab       	std	Y+48, r25	; 0x30
    478c:	8f a7       	std	Y+47, r24	; 0x2f
    478e:	8f a5       	ldd	r24, Y+47	; 0x2f
    4790:	98 a9       	ldd	r25, Y+48	; 0x30
    4792:	9c a7       	std	Y+44, r25	; 0x2c
    4794:	8b a7       	std	Y+43, r24	; 0x2b
    4796:	8b a5       	ldd	r24, Y+43	; 0x2b
    4798:	9c a5       	ldd	r25, Y+44	; 0x2c
    479a:	01 97       	sbiw	r24, 0x01	; 1
    479c:	f1 f7       	brne	.-4      	; 0x479a <LCD_firstadd+0x243e>
    479e:	9c a7       	std	Y+44, r25	; 0x2c
    47a0:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(10);
	LCD_write('i');
    47a2:	89 e6       	ldi	r24, 0x69	; 105
    47a4:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
    47a8:	80 e0       	ldi	r24, 0x00	; 0
    47aa:	90 e0       	ldi	r25, 0x00	; 0
    47ac:	a0 e2       	ldi	r26, 0x20	; 32
    47ae:	b1 e4       	ldi	r27, 0x41	; 65
    47b0:	8f a3       	std	Y+39, r24	; 0x27
    47b2:	98 a7       	std	Y+40, r25	; 0x28
    47b4:	a9 a7       	std	Y+41, r26	; 0x29
    47b6:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    47b8:	6f a1       	ldd	r22, Y+39	; 0x27
    47ba:	78 a5       	ldd	r23, Y+40	; 0x28
    47bc:	89 a5       	ldd	r24, Y+41	; 0x29
    47be:	9a a5       	ldd	r25, Y+42	; 0x2a
    47c0:	20 e0       	ldi	r18, 0x00	; 0
    47c2:	30 e0       	ldi	r19, 0x00	; 0
    47c4:	4a ef       	ldi	r20, 0xFA	; 250
    47c6:	54 e4       	ldi	r21, 0x44	; 68
    47c8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    47cc:	dc 01       	movw	r26, r24
    47ce:	cb 01       	movw	r24, r22
    47d0:	8b a3       	std	Y+35, r24	; 0x23
    47d2:	9c a3       	std	Y+36, r25	; 0x24
    47d4:	ad a3       	std	Y+37, r26	; 0x25
    47d6:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    47d8:	6b a1       	ldd	r22, Y+35	; 0x23
    47da:	7c a1       	ldd	r23, Y+36	; 0x24
    47dc:	8d a1       	ldd	r24, Y+37	; 0x25
    47de:	9e a1       	ldd	r25, Y+38	; 0x26
    47e0:	20 e0       	ldi	r18, 0x00	; 0
    47e2:	30 e0       	ldi	r19, 0x00	; 0
    47e4:	40 e8       	ldi	r20, 0x80	; 128
    47e6:	5f e3       	ldi	r21, 0x3F	; 63
    47e8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    47ec:	88 23       	and	r24, r24
    47ee:	2c f4       	brge	.+10     	; 0x47fa <LCD_firstadd+0x249e>
		__ticks = 1;
    47f0:	81 e0       	ldi	r24, 0x01	; 1
    47f2:	90 e0       	ldi	r25, 0x00	; 0
    47f4:	9a a3       	std	Y+34, r25	; 0x22
    47f6:	89 a3       	std	Y+33, r24	; 0x21
    47f8:	3f c0       	rjmp	.+126    	; 0x4878 <LCD_firstadd+0x251c>
	else if (__tmp > 65535)
    47fa:	6b a1       	ldd	r22, Y+35	; 0x23
    47fc:	7c a1       	ldd	r23, Y+36	; 0x24
    47fe:	8d a1       	ldd	r24, Y+37	; 0x25
    4800:	9e a1       	ldd	r25, Y+38	; 0x26
    4802:	20 e0       	ldi	r18, 0x00	; 0
    4804:	3f ef       	ldi	r19, 0xFF	; 255
    4806:	4f e7       	ldi	r20, 0x7F	; 127
    4808:	57 e4       	ldi	r21, 0x47	; 71
    480a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    480e:	18 16       	cp	r1, r24
    4810:	4c f5       	brge	.+82     	; 0x4864 <LCD_firstadd+0x2508>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4812:	6f a1       	ldd	r22, Y+39	; 0x27
    4814:	78 a5       	ldd	r23, Y+40	; 0x28
    4816:	89 a5       	ldd	r24, Y+41	; 0x29
    4818:	9a a5       	ldd	r25, Y+42	; 0x2a
    481a:	20 e0       	ldi	r18, 0x00	; 0
    481c:	30 e0       	ldi	r19, 0x00	; 0
    481e:	40 e2       	ldi	r20, 0x20	; 32
    4820:	51 e4       	ldi	r21, 0x41	; 65
    4822:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4826:	dc 01       	movw	r26, r24
    4828:	cb 01       	movw	r24, r22
    482a:	bc 01       	movw	r22, r24
    482c:	cd 01       	movw	r24, r26
    482e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4832:	dc 01       	movw	r26, r24
    4834:	cb 01       	movw	r24, r22
    4836:	9a a3       	std	Y+34, r25	; 0x22
    4838:	89 a3       	std	Y+33, r24	; 0x21
    483a:	0f c0       	rjmp	.+30     	; 0x485a <LCD_firstadd+0x24fe>
    483c:	88 ec       	ldi	r24, 0xC8	; 200
    483e:	90 e0       	ldi	r25, 0x00	; 0
    4840:	98 a3       	std	Y+32, r25	; 0x20
    4842:	8f 8f       	std	Y+31, r24	; 0x1f
    4844:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4846:	98 a1       	ldd	r25, Y+32	; 0x20
    4848:	01 97       	sbiw	r24, 0x01	; 1
    484a:	f1 f7       	brne	.-4      	; 0x4848 <LCD_firstadd+0x24ec>
    484c:	98 a3       	std	Y+32, r25	; 0x20
    484e:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4850:	89 a1       	ldd	r24, Y+33	; 0x21
    4852:	9a a1       	ldd	r25, Y+34	; 0x22
    4854:	01 97       	sbiw	r24, 0x01	; 1
    4856:	9a a3       	std	Y+34, r25	; 0x22
    4858:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    485a:	89 a1       	ldd	r24, Y+33	; 0x21
    485c:	9a a1       	ldd	r25, Y+34	; 0x22
    485e:	00 97       	sbiw	r24, 0x00	; 0
    4860:	69 f7       	brne	.-38     	; 0x483c <LCD_firstadd+0x24e0>
    4862:	14 c0       	rjmp	.+40     	; 0x488c <LCD_firstadd+0x2530>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4864:	6b a1       	ldd	r22, Y+35	; 0x23
    4866:	7c a1       	ldd	r23, Y+36	; 0x24
    4868:	8d a1       	ldd	r24, Y+37	; 0x25
    486a:	9e a1       	ldd	r25, Y+38	; 0x26
    486c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4870:	dc 01       	movw	r26, r24
    4872:	cb 01       	movw	r24, r22
    4874:	9a a3       	std	Y+34, r25	; 0x22
    4876:	89 a3       	std	Y+33, r24	; 0x21
    4878:	89 a1       	ldd	r24, Y+33	; 0x21
    487a:	9a a1       	ldd	r25, Y+34	; 0x22
    487c:	9e 8f       	std	Y+30, r25	; 0x1e
    487e:	8d 8f       	std	Y+29, r24	; 0x1d
    4880:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4882:	9e 8d       	ldd	r25, Y+30	; 0x1e
    4884:	01 97       	sbiw	r24, 0x01	; 1
    4886:	f1 f7       	brne	.-4      	; 0x4884 <LCD_firstadd+0x2528>
    4888:	9e 8f       	std	Y+30, r25	; 0x1e
    488a:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(10);
	LCD_write('n');
    488c:	8e e6       	ldi	r24, 0x6E	; 110
    488e:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
    4892:	80 e0       	ldi	r24, 0x00	; 0
    4894:	90 e0       	ldi	r25, 0x00	; 0
    4896:	a0 e2       	ldi	r26, 0x20	; 32
    4898:	b1 e4       	ldi	r27, 0x41	; 65
    489a:	89 8f       	std	Y+25, r24	; 0x19
    489c:	9a 8f       	std	Y+26, r25	; 0x1a
    489e:	ab 8f       	std	Y+27, r26	; 0x1b
    48a0:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    48a2:	69 8d       	ldd	r22, Y+25	; 0x19
    48a4:	7a 8d       	ldd	r23, Y+26	; 0x1a
    48a6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    48a8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    48aa:	20 e0       	ldi	r18, 0x00	; 0
    48ac:	30 e0       	ldi	r19, 0x00	; 0
    48ae:	4a ef       	ldi	r20, 0xFA	; 250
    48b0:	54 e4       	ldi	r21, 0x44	; 68
    48b2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    48b6:	dc 01       	movw	r26, r24
    48b8:	cb 01       	movw	r24, r22
    48ba:	8d 8b       	std	Y+21, r24	; 0x15
    48bc:	9e 8b       	std	Y+22, r25	; 0x16
    48be:	af 8b       	std	Y+23, r26	; 0x17
    48c0:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    48c2:	6d 89       	ldd	r22, Y+21	; 0x15
    48c4:	7e 89       	ldd	r23, Y+22	; 0x16
    48c6:	8f 89       	ldd	r24, Y+23	; 0x17
    48c8:	98 8d       	ldd	r25, Y+24	; 0x18
    48ca:	20 e0       	ldi	r18, 0x00	; 0
    48cc:	30 e0       	ldi	r19, 0x00	; 0
    48ce:	40 e8       	ldi	r20, 0x80	; 128
    48d0:	5f e3       	ldi	r21, 0x3F	; 63
    48d2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    48d6:	88 23       	and	r24, r24
    48d8:	2c f4       	brge	.+10     	; 0x48e4 <LCD_firstadd+0x2588>
		__ticks = 1;
    48da:	81 e0       	ldi	r24, 0x01	; 1
    48dc:	90 e0       	ldi	r25, 0x00	; 0
    48de:	9c 8b       	std	Y+20, r25	; 0x14
    48e0:	8b 8b       	std	Y+19, r24	; 0x13
    48e2:	3f c0       	rjmp	.+126    	; 0x4962 <LCD_firstadd+0x2606>
	else if (__tmp > 65535)
    48e4:	6d 89       	ldd	r22, Y+21	; 0x15
    48e6:	7e 89       	ldd	r23, Y+22	; 0x16
    48e8:	8f 89       	ldd	r24, Y+23	; 0x17
    48ea:	98 8d       	ldd	r25, Y+24	; 0x18
    48ec:	20 e0       	ldi	r18, 0x00	; 0
    48ee:	3f ef       	ldi	r19, 0xFF	; 255
    48f0:	4f e7       	ldi	r20, 0x7F	; 127
    48f2:	57 e4       	ldi	r21, 0x47	; 71
    48f4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    48f8:	18 16       	cp	r1, r24
    48fa:	4c f5       	brge	.+82     	; 0x494e <LCD_firstadd+0x25f2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    48fc:	69 8d       	ldd	r22, Y+25	; 0x19
    48fe:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4900:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4902:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4904:	20 e0       	ldi	r18, 0x00	; 0
    4906:	30 e0       	ldi	r19, 0x00	; 0
    4908:	40 e2       	ldi	r20, 0x20	; 32
    490a:	51 e4       	ldi	r21, 0x41	; 65
    490c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4910:	dc 01       	movw	r26, r24
    4912:	cb 01       	movw	r24, r22
    4914:	bc 01       	movw	r22, r24
    4916:	cd 01       	movw	r24, r26
    4918:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    491c:	dc 01       	movw	r26, r24
    491e:	cb 01       	movw	r24, r22
    4920:	9c 8b       	std	Y+20, r25	; 0x14
    4922:	8b 8b       	std	Y+19, r24	; 0x13
    4924:	0f c0       	rjmp	.+30     	; 0x4944 <LCD_firstadd+0x25e8>
    4926:	88 ec       	ldi	r24, 0xC8	; 200
    4928:	90 e0       	ldi	r25, 0x00	; 0
    492a:	9a 8b       	std	Y+18, r25	; 0x12
    492c:	89 8b       	std	Y+17, r24	; 0x11
    492e:	89 89       	ldd	r24, Y+17	; 0x11
    4930:	9a 89       	ldd	r25, Y+18	; 0x12
    4932:	01 97       	sbiw	r24, 0x01	; 1
    4934:	f1 f7       	brne	.-4      	; 0x4932 <LCD_firstadd+0x25d6>
    4936:	9a 8b       	std	Y+18, r25	; 0x12
    4938:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    493a:	8b 89       	ldd	r24, Y+19	; 0x13
    493c:	9c 89       	ldd	r25, Y+20	; 0x14
    493e:	01 97       	sbiw	r24, 0x01	; 1
    4940:	9c 8b       	std	Y+20, r25	; 0x14
    4942:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4944:	8b 89       	ldd	r24, Y+19	; 0x13
    4946:	9c 89       	ldd	r25, Y+20	; 0x14
    4948:	00 97       	sbiw	r24, 0x00	; 0
    494a:	69 f7       	brne	.-38     	; 0x4926 <LCD_firstadd+0x25ca>
    494c:	14 c0       	rjmp	.+40     	; 0x4976 <LCD_firstadd+0x261a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    494e:	6d 89       	ldd	r22, Y+21	; 0x15
    4950:	7e 89       	ldd	r23, Y+22	; 0x16
    4952:	8f 89       	ldd	r24, Y+23	; 0x17
    4954:	98 8d       	ldd	r25, Y+24	; 0x18
    4956:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    495a:	dc 01       	movw	r26, r24
    495c:	cb 01       	movw	r24, r22
    495e:	9c 8b       	std	Y+20, r25	; 0x14
    4960:	8b 8b       	std	Y+19, r24	; 0x13
    4962:	8b 89       	ldd	r24, Y+19	; 0x13
    4964:	9c 89       	ldd	r25, Y+20	; 0x14
    4966:	98 8b       	std	Y+16, r25	; 0x10
    4968:	8f 87       	std	Y+15, r24	; 0x0f
    496a:	8f 85       	ldd	r24, Y+15	; 0x0f
    496c:	98 89       	ldd	r25, Y+16	; 0x10
    496e:	01 97       	sbiw	r24, 0x01	; 1
    4970:	f1 f7       	brne	.-4      	; 0x496e <LCD_firstadd+0x2612>
    4972:	98 8b       	std	Y+16, r25	; 0x10
    4974:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(10);
	LCD_write('g');
    4976:	87 e6       	ldi	r24, 0x67	; 103
    4978:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
    497c:	80 e0       	ldi	r24, 0x00	; 0
    497e:	90 e0       	ldi	r25, 0x00	; 0
    4980:	a0 e2       	ldi	r26, 0x20	; 32
    4982:	b1 e4       	ldi	r27, 0x41	; 65
    4984:	8b 87       	std	Y+11, r24	; 0x0b
    4986:	9c 87       	std	Y+12, r25	; 0x0c
    4988:	ad 87       	std	Y+13, r26	; 0x0d
    498a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    498c:	6b 85       	ldd	r22, Y+11	; 0x0b
    498e:	7c 85       	ldd	r23, Y+12	; 0x0c
    4990:	8d 85       	ldd	r24, Y+13	; 0x0d
    4992:	9e 85       	ldd	r25, Y+14	; 0x0e
    4994:	20 e0       	ldi	r18, 0x00	; 0
    4996:	30 e0       	ldi	r19, 0x00	; 0
    4998:	4a ef       	ldi	r20, 0xFA	; 250
    499a:	54 e4       	ldi	r21, 0x44	; 68
    499c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    49a0:	dc 01       	movw	r26, r24
    49a2:	cb 01       	movw	r24, r22
    49a4:	8f 83       	std	Y+7, r24	; 0x07
    49a6:	98 87       	std	Y+8, r25	; 0x08
    49a8:	a9 87       	std	Y+9, r26	; 0x09
    49aa:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    49ac:	6f 81       	ldd	r22, Y+7	; 0x07
    49ae:	78 85       	ldd	r23, Y+8	; 0x08
    49b0:	89 85       	ldd	r24, Y+9	; 0x09
    49b2:	9a 85       	ldd	r25, Y+10	; 0x0a
    49b4:	20 e0       	ldi	r18, 0x00	; 0
    49b6:	30 e0       	ldi	r19, 0x00	; 0
    49b8:	40 e8       	ldi	r20, 0x80	; 128
    49ba:	5f e3       	ldi	r21, 0x3F	; 63
    49bc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    49c0:	88 23       	and	r24, r24
    49c2:	2c f4       	brge	.+10     	; 0x49ce <LCD_firstadd+0x2672>
		__ticks = 1;
    49c4:	81 e0       	ldi	r24, 0x01	; 1
    49c6:	90 e0       	ldi	r25, 0x00	; 0
    49c8:	9e 83       	std	Y+6, r25	; 0x06
    49ca:	8d 83       	std	Y+5, r24	; 0x05
    49cc:	3f c0       	rjmp	.+126    	; 0x4a4c <LCD_firstadd+0x26f0>
	else if (__tmp > 65535)
    49ce:	6f 81       	ldd	r22, Y+7	; 0x07
    49d0:	78 85       	ldd	r23, Y+8	; 0x08
    49d2:	89 85       	ldd	r24, Y+9	; 0x09
    49d4:	9a 85       	ldd	r25, Y+10	; 0x0a
    49d6:	20 e0       	ldi	r18, 0x00	; 0
    49d8:	3f ef       	ldi	r19, 0xFF	; 255
    49da:	4f e7       	ldi	r20, 0x7F	; 127
    49dc:	57 e4       	ldi	r21, 0x47	; 71
    49de:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    49e2:	18 16       	cp	r1, r24
    49e4:	4c f5       	brge	.+82     	; 0x4a38 <LCD_firstadd+0x26dc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    49e6:	6b 85       	ldd	r22, Y+11	; 0x0b
    49e8:	7c 85       	ldd	r23, Y+12	; 0x0c
    49ea:	8d 85       	ldd	r24, Y+13	; 0x0d
    49ec:	9e 85       	ldd	r25, Y+14	; 0x0e
    49ee:	20 e0       	ldi	r18, 0x00	; 0
    49f0:	30 e0       	ldi	r19, 0x00	; 0
    49f2:	40 e2       	ldi	r20, 0x20	; 32
    49f4:	51 e4       	ldi	r21, 0x41	; 65
    49f6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    49fa:	dc 01       	movw	r26, r24
    49fc:	cb 01       	movw	r24, r22
    49fe:	bc 01       	movw	r22, r24
    4a00:	cd 01       	movw	r24, r26
    4a02:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4a06:	dc 01       	movw	r26, r24
    4a08:	cb 01       	movw	r24, r22
    4a0a:	9e 83       	std	Y+6, r25	; 0x06
    4a0c:	8d 83       	std	Y+5, r24	; 0x05
    4a0e:	0f c0       	rjmp	.+30     	; 0x4a2e <LCD_firstadd+0x26d2>
    4a10:	88 ec       	ldi	r24, 0xC8	; 200
    4a12:	90 e0       	ldi	r25, 0x00	; 0
    4a14:	9c 83       	std	Y+4, r25	; 0x04
    4a16:	8b 83       	std	Y+3, r24	; 0x03
    4a18:	8b 81       	ldd	r24, Y+3	; 0x03
    4a1a:	9c 81       	ldd	r25, Y+4	; 0x04
    4a1c:	01 97       	sbiw	r24, 0x01	; 1
    4a1e:	f1 f7       	brne	.-4      	; 0x4a1c <LCD_firstadd+0x26c0>
    4a20:	9c 83       	std	Y+4, r25	; 0x04
    4a22:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4a24:	8d 81       	ldd	r24, Y+5	; 0x05
    4a26:	9e 81       	ldd	r25, Y+6	; 0x06
    4a28:	01 97       	sbiw	r24, 0x01	; 1
    4a2a:	9e 83       	std	Y+6, r25	; 0x06
    4a2c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4a2e:	8d 81       	ldd	r24, Y+5	; 0x05
    4a30:	9e 81       	ldd	r25, Y+6	; 0x06
    4a32:	00 97       	sbiw	r24, 0x00	; 0
    4a34:	69 f7       	brne	.-38     	; 0x4a10 <LCD_firstadd+0x26b4>
    4a36:	14 c0       	rjmp	.+40     	; 0x4a60 <LCD_firstadd+0x2704>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4a38:	6f 81       	ldd	r22, Y+7	; 0x07
    4a3a:	78 85       	ldd	r23, Y+8	; 0x08
    4a3c:	89 85       	ldd	r24, Y+9	; 0x09
    4a3e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4a40:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4a44:	dc 01       	movw	r26, r24
    4a46:	cb 01       	movw	r24, r22
    4a48:	9e 83       	std	Y+6, r25	; 0x06
    4a4a:	8d 83       	std	Y+5, r24	; 0x05
    4a4c:	8d 81       	ldd	r24, Y+5	; 0x05
    4a4e:	9e 81       	ldd	r25, Y+6	; 0x06
    4a50:	9a 83       	std	Y+2, r25	; 0x02
    4a52:	89 83       	std	Y+1, r24	; 0x01
    4a54:	89 81       	ldd	r24, Y+1	; 0x01
    4a56:	9a 81       	ldd	r25, Y+2	; 0x02
    4a58:	01 97       	sbiw	r24, 0x01	; 1
    4a5a:	f1 f7       	brne	.-4      	; 0x4a58 <LCD_firstadd+0x26fc>
    4a5c:	9a 83       	std	Y+2, r25	; 0x02
    4a5e:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(10);

}
    4a60:	ca 56       	subi	r28, 0x6A	; 106
    4a62:	de 4f       	sbci	r29, 0xFE	; 254
    4a64:	0f b6       	in	r0, 0x3f	; 63
    4a66:	f8 94       	cli
    4a68:	de bf       	out	0x3e, r29	; 62
    4a6a:	0f be       	out	0x3f, r0	; 63
    4a6c:	cd bf       	out	0x3d, r28	; 61
    4a6e:	cf 91       	pop	r28
    4a70:	df 91       	pop	r29
    4a72:	1f 91       	pop	r17
    4a74:	0f 91       	pop	r16
    4a76:	08 95       	ret

00004a78 <LCD_secondadd>:

void LCD_secondadd()
{
    4a78:	0f 93       	push	r16
    4a7a:	1f 93       	push	r17
    4a7c:	df 93       	push	r29
    4a7e:	cf 93       	push	r28
    4a80:	cd b7       	in	r28, 0x3d	; 61
    4a82:	de b7       	in	r29, 0x3e	; 62
    4a84:	ce 57       	subi	r28, 0x7E	; 126
    4a86:	d0 40       	sbci	r29, 0x00	; 0
    4a88:	0f b6       	in	r0, 0x3f	; 63
    4a8a:	f8 94       	cli
    4a8c:	de bf       	out	0x3e, r29	; 62
    4a8e:	0f be       	out	0x3f, r0	; 63
    4a90:	cd bf       	out	0x3d, r28	; 61
	LCD_cmd(0x1);
    4a92:	81 e0       	ldi	r24, 0x01	; 1
    4a94:	0e 94 85 2e 	call	0x5d0a	; 0x5d0a <LCD_cmd>
	LCD_cmd(0x80);
    4a98:	80 e8       	ldi	r24, 0x80	; 128
    4a9a:	0e 94 85 2e 	call	0x5d0a	; 0x5d0a <LCD_cmd>
	LCD_write(' ');
    4a9e:	80 e2       	ldi	r24, 0x20	; 32
    4aa0:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
	LCD_write(' ');
    4aa4:	80 e2       	ldi	r24, 0x20	; 32
    4aa6:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
	LCD_write(' ');
    4aaa:	80 e2       	ldi	r24, 0x20	; 32
    4aac:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
	LCD_write(' ');
    4ab0:	80 e2       	ldi	r24, 0x20	; 32
    4ab2:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
	LCD_write(' ');
    4ab6:	80 e2       	ldi	r24, 0x20	; 32
    4ab8:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
	LCD_write('I');
    4abc:	89 e4       	ldi	r24, 0x49	; 73
    4abe:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
    4ac2:	fe 01       	movw	r30, r28
    4ac4:	e5 58       	subi	r30, 0x85	; 133
    4ac6:	ff 4f       	sbci	r31, 0xFF	; 255
    4ac8:	80 e0       	ldi	r24, 0x00	; 0
    4aca:	90 e0       	ldi	r25, 0x00	; 0
    4acc:	a0 e2       	ldi	r26, 0x20	; 32
    4ace:	b1 e4       	ldi	r27, 0x41	; 65
    4ad0:	80 83       	st	Z, r24
    4ad2:	91 83       	std	Z+1, r25	; 0x01
    4ad4:	a2 83       	std	Z+2, r26	; 0x02
    4ad6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4ad8:	8e 01       	movw	r16, r28
    4ada:	09 58       	subi	r16, 0x89	; 137
    4adc:	1f 4f       	sbci	r17, 0xFF	; 255
    4ade:	fe 01       	movw	r30, r28
    4ae0:	e5 58       	subi	r30, 0x85	; 133
    4ae2:	ff 4f       	sbci	r31, 0xFF	; 255
    4ae4:	60 81       	ld	r22, Z
    4ae6:	71 81       	ldd	r23, Z+1	; 0x01
    4ae8:	82 81       	ldd	r24, Z+2	; 0x02
    4aea:	93 81       	ldd	r25, Z+3	; 0x03
    4aec:	20 e0       	ldi	r18, 0x00	; 0
    4aee:	30 e0       	ldi	r19, 0x00	; 0
    4af0:	4a ef       	ldi	r20, 0xFA	; 250
    4af2:	54 e4       	ldi	r21, 0x44	; 68
    4af4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4af8:	dc 01       	movw	r26, r24
    4afa:	cb 01       	movw	r24, r22
    4afc:	f8 01       	movw	r30, r16
    4afe:	80 83       	st	Z, r24
    4b00:	91 83       	std	Z+1, r25	; 0x01
    4b02:	a2 83       	std	Z+2, r26	; 0x02
    4b04:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4b06:	fe 01       	movw	r30, r28
    4b08:	e9 58       	subi	r30, 0x89	; 137
    4b0a:	ff 4f       	sbci	r31, 0xFF	; 255
    4b0c:	60 81       	ld	r22, Z
    4b0e:	71 81       	ldd	r23, Z+1	; 0x01
    4b10:	82 81       	ldd	r24, Z+2	; 0x02
    4b12:	93 81       	ldd	r25, Z+3	; 0x03
    4b14:	20 e0       	ldi	r18, 0x00	; 0
    4b16:	30 e0       	ldi	r19, 0x00	; 0
    4b18:	40 e8       	ldi	r20, 0x80	; 128
    4b1a:	5f e3       	ldi	r21, 0x3F	; 63
    4b1c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4b20:	88 23       	and	r24, r24
    4b22:	44 f4       	brge	.+16     	; 0x4b34 <LCD_secondadd+0xbc>
		__ticks = 1;
    4b24:	fe 01       	movw	r30, r28
    4b26:	eb 58       	subi	r30, 0x8B	; 139
    4b28:	ff 4f       	sbci	r31, 0xFF	; 255
    4b2a:	81 e0       	ldi	r24, 0x01	; 1
    4b2c:	90 e0       	ldi	r25, 0x00	; 0
    4b2e:	91 83       	std	Z+1, r25	; 0x01
    4b30:	80 83       	st	Z, r24
    4b32:	64 c0       	rjmp	.+200    	; 0x4bfc <LCD_secondadd+0x184>
	else if (__tmp > 65535)
    4b34:	fe 01       	movw	r30, r28
    4b36:	e9 58       	subi	r30, 0x89	; 137
    4b38:	ff 4f       	sbci	r31, 0xFF	; 255
    4b3a:	60 81       	ld	r22, Z
    4b3c:	71 81       	ldd	r23, Z+1	; 0x01
    4b3e:	82 81       	ldd	r24, Z+2	; 0x02
    4b40:	93 81       	ldd	r25, Z+3	; 0x03
    4b42:	20 e0       	ldi	r18, 0x00	; 0
    4b44:	3f ef       	ldi	r19, 0xFF	; 255
    4b46:	4f e7       	ldi	r20, 0x7F	; 127
    4b48:	57 e4       	ldi	r21, 0x47	; 71
    4b4a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4b4e:	18 16       	cp	r1, r24
    4b50:	0c f0       	brlt	.+2      	; 0x4b54 <LCD_secondadd+0xdc>
    4b52:	43 c0       	rjmp	.+134    	; 0x4bda <LCD_secondadd+0x162>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4b54:	fe 01       	movw	r30, r28
    4b56:	e5 58       	subi	r30, 0x85	; 133
    4b58:	ff 4f       	sbci	r31, 0xFF	; 255
    4b5a:	60 81       	ld	r22, Z
    4b5c:	71 81       	ldd	r23, Z+1	; 0x01
    4b5e:	82 81       	ldd	r24, Z+2	; 0x02
    4b60:	93 81       	ldd	r25, Z+3	; 0x03
    4b62:	20 e0       	ldi	r18, 0x00	; 0
    4b64:	30 e0       	ldi	r19, 0x00	; 0
    4b66:	40 e2       	ldi	r20, 0x20	; 32
    4b68:	51 e4       	ldi	r21, 0x41	; 65
    4b6a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4b6e:	dc 01       	movw	r26, r24
    4b70:	cb 01       	movw	r24, r22
    4b72:	8e 01       	movw	r16, r28
    4b74:	0b 58       	subi	r16, 0x8B	; 139
    4b76:	1f 4f       	sbci	r17, 0xFF	; 255
    4b78:	bc 01       	movw	r22, r24
    4b7a:	cd 01       	movw	r24, r26
    4b7c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4b80:	dc 01       	movw	r26, r24
    4b82:	cb 01       	movw	r24, r22
    4b84:	f8 01       	movw	r30, r16
    4b86:	91 83       	std	Z+1, r25	; 0x01
    4b88:	80 83       	st	Z, r24
    4b8a:	1f c0       	rjmp	.+62     	; 0x4bca <LCD_secondadd+0x152>
    4b8c:	fe 01       	movw	r30, r28
    4b8e:	ed 58       	subi	r30, 0x8D	; 141
    4b90:	ff 4f       	sbci	r31, 0xFF	; 255
    4b92:	88 ec       	ldi	r24, 0xC8	; 200
    4b94:	90 e0       	ldi	r25, 0x00	; 0
    4b96:	91 83       	std	Z+1, r25	; 0x01
    4b98:	80 83       	st	Z, r24
    4b9a:	fe 01       	movw	r30, r28
    4b9c:	ed 58       	subi	r30, 0x8D	; 141
    4b9e:	ff 4f       	sbci	r31, 0xFF	; 255
    4ba0:	80 81       	ld	r24, Z
    4ba2:	91 81       	ldd	r25, Z+1	; 0x01
    4ba4:	01 97       	sbiw	r24, 0x01	; 1
    4ba6:	f1 f7       	brne	.-4      	; 0x4ba4 <LCD_secondadd+0x12c>
    4ba8:	fe 01       	movw	r30, r28
    4baa:	ed 58       	subi	r30, 0x8D	; 141
    4bac:	ff 4f       	sbci	r31, 0xFF	; 255
    4bae:	91 83       	std	Z+1, r25	; 0x01
    4bb0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4bb2:	de 01       	movw	r26, r28
    4bb4:	ab 58       	subi	r26, 0x8B	; 139
    4bb6:	bf 4f       	sbci	r27, 0xFF	; 255
    4bb8:	fe 01       	movw	r30, r28
    4bba:	eb 58       	subi	r30, 0x8B	; 139
    4bbc:	ff 4f       	sbci	r31, 0xFF	; 255
    4bbe:	80 81       	ld	r24, Z
    4bc0:	91 81       	ldd	r25, Z+1	; 0x01
    4bc2:	01 97       	sbiw	r24, 0x01	; 1
    4bc4:	11 96       	adiw	r26, 0x01	; 1
    4bc6:	9c 93       	st	X, r25
    4bc8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4bca:	fe 01       	movw	r30, r28
    4bcc:	eb 58       	subi	r30, 0x8B	; 139
    4bce:	ff 4f       	sbci	r31, 0xFF	; 255
    4bd0:	80 81       	ld	r24, Z
    4bd2:	91 81       	ldd	r25, Z+1	; 0x01
    4bd4:	00 97       	sbiw	r24, 0x00	; 0
    4bd6:	d1 f6       	brne	.-76     	; 0x4b8c <LCD_secondadd+0x114>
    4bd8:	27 c0       	rjmp	.+78     	; 0x4c28 <LCD_secondadd+0x1b0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4bda:	8e 01       	movw	r16, r28
    4bdc:	0b 58       	subi	r16, 0x8B	; 139
    4bde:	1f 4f       	sbci	r17, 0xFF	; 255
    4be0:	fe 01       	movw	r30, r28
    4be2:	e9 58       	subi	r30, 0x89	; 137
    4be4:	ff 4f       	sbci	r31, 0xFF	; 255
    4be6:	60 81       	ld	r22, Z
    4be8:	71 81       	ldd	r23, Z+1	; 0x01
    4bea:	82 81       	ldd	r24, Z+2	; 0x02
    4bec:	93 81       	ldd	r25, Z+3	; 0x03
    4bee:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4bf2:	dc 01       	movw	r26, r24
    4bf4:	cb 01       	movw	r24, r22
    4bf6:	f8 01       	movw	r30, r16
    4bf8:	91 83       	std	Z+1, r25	; 0x01
    4bfa:	80 83       	st	Z, r24
    4bfc:	de 01       	movw	r26, r28
    4bfe:	af 58       	subi	r26, 0x8F	; 143
    4c00:	bf 4f       	sbci	r27, 0xFF	; 255
    4c02:	fe 01       	movw	r30, r28
    4c04:	eb 58       	subi	r30, 0x8B	; 139
    4c06:	ff 4f       	sbci	r31, 0xFF	; 255
    4c08:	80 81       	ld	r24, Z
    4c0a:	91 81       	ldd	r25, Z+1	; 0x01
    4c0c:	8d 93       	st	X+, r24
    4c0e:	9c 93       	st	X, r25
    4c10:	fe 01       	movw	r30, r28
    4c12:	ef 58       	subi	r30, 0x8F	; 143
    4c14:	ff 4f       	sbci	r31, 0xFF	; 255
    4c16:	80 81       	ld	r24, Z
    4c18:	91 81       	ldd	r25, Z+1	; 0x01
    4c1a:	01 97       	sbiw	r24, 0x01	; 1
    4c1c:	f1 f7       	brne	.-4      	; 0x4c1a <LCD_secondadd+0x1a2>
    4c1e:	fe 01       	movw	r30, r28
    4c20:	ef 58       	subi	r30, 0x8F	; 143
    4c22:	ff 4f       	sbci	r31, 0xFF	; 255
    4c24:	91 83       	std	Z+1, r25	; 0x01
    4c26:	80 83       	st	Z, r24
	_delay_ms(10);
	LCD_write('M');
    4c28:	8d e4       	ldi	r24, 0x4D	; 77
    4c2a:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
    4c2e:	fe 01       	movw	r30, r28
    4c30:	e3 59       	subi	r30, 0x93	; 147
    4c32:	ff 4f       	sbci	r31, 0xFF	; 255
    4c34:	80 e0       	ldi	r24, 0x00	; 0
    4c36:	90 e0       	ldi	r25, 0x00	; 0
    4c38:	a0 e2       	ldi	r26, 0x20	; 32
    4c3a:	b1 e4       	ldi	r27, 0x41	; 65
    4c3c:	80 83       	st	Z, r24
    4c3e:	91 83       	std	Z+1, r25	; 0x01
    4c40:	a2 83       	std	Z+2, r26	; 0x02
    4c42:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4c44:	8e 01       	movw	r16, r28
    4c46:	07 59       	subi	r16, 0x97	; 151
    4c48:	1f 4f       	sbci	r17, 0xFF	; 255
    4c4a:	fe 01       	movw	r30, r28
    4c4c:	e3 59       	subi	r30, 0x93	; 147
    4c4e:	ff 4f       	sbci	r31, 0xFF	; 255
    4c50:	60 81       	ld	r22, Z
    4c52:	71 81       	ldd	r23, Z+1	; 0x01
    4c54:	82 81       	ldd	r24, Z+2	; 0x02
    4c56:	93 81       	ldd	r25, Z+3	; 0x03
    4c58:	20 e0       	ldi	r18, 0x00	; 0
    4c5a:	30 e0       	ldi	r19, 0x00	; 0
    4c5c:	4a ef       	ldi	r20, 0xFA	; 250
    4c5e:	54 e4       	ldi	r21, 0x44	; 68
    4c60:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4c64:	dc 01       	movw	r26, r24
    4c66:	cb 01       	movw	r24, r22
    4c68:	f8 01       	movw	r30, r16
    4c6a:	80 83       	st	Z, r24
    4c6c:	91 83       	std	Z+1, r25	; 0x01
    4c6e:	a2 83       	std	Z+2, r26	; 0x02
    4c70:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4c72:	fe 01       	movw	r30, r28
    4c74:	e7 59       	subi	r30, 0x97	; 151
    4c76:	ff 4f       	sbci	r31, 0xFF	; 255
    4c78:	60 81       	ld	r22, Z
    4c7a:	71 81       	ldd	r23, Z+1	; 0x01
    4c7c:	82 81       	ldd	r24, Z+2	; 0x02
    4c7e:	93 81       	ldd	r25, Z+3	; 0x03
    4c80:	20 e0       	ldi	r18, 0x00	; 0
    4c82:	30 e0       	ldi	r19, 0x00	; 0
    4c84:	40 e8       	ldi	r20, 0x80	; 128
    4c86:	5f e3       	ldi	r21, 0x3F	; 63
    4c88:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4c8c:	88 23       	and	r24, r24
    4c8e:	44 f4       	brge	.+16     	; 0x4ca0 <LCD_secondadd+0x228>
		__ticks = 1;
    4c90:	fe 01       	movw	r30, r28
    4c92:	e9 59       	subi	r30, 0x99	; 153
    4c94:	ff 4f       	sbci	r31, 0xFF	; 255
    4c96:	81 e0       	ldi	r24, 0x01	; 1
    4c98:	90 e0       	ldi	r25, 0x00	; 0
    4c9a:	91 83       	std	Z+1, r25	; 0x01
    4c9c:	80 83       	st	Z, r24
    4c9e:	64 c0       	rjmp	.+200    	; 0x4d68 <LCD_secondadd+0x2f0>
	else if (__tmp > 65535)
    4ca0:	fe 01       	movw	r30, r28
    4ca2:	e7 59       	subi	r30, 0x97	; 151
    4ca4:	ff 4f       	sbci	r31, 0xFF	; 255
    4ca6:	60 81       	ld	r22, Z
    4ca8:	71 81       	ldd	r23, Z+1	; 0x01
    4caa:	82 81       	ldd	r24, Z+2	; 0x02
    4cac:	93 81       	ldd	r25, Z+3	; 0x03
    4cae:	20 e0       	ldi	r18, 0x00	; 0
    4cb0:	3f ef       	ldi	r19, 0xFF	; 255
    4cb2:	4f e7       	ldi	r20, 0x7F	; 127
    4cb4:	57 e4       	ldi	r21, 0x47	; 71
    4cb6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4cba:	18 16       	cp	r1, r24
    4cbc:	0c f0       	brlt	.+2      	; 0x4cc0 <LCD_secondadd+0x248>
    4cbe:	43 c0       	rjmp	.+134    	; 0x4d46 <LCD_secondadd+0x2ce>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4cc0:	fe 01       	movw	r30, r28
    4cc2:	e3 59       	subi	r30, 0x93	; 147
    4cc4:	ff 4f       	sbci	r31, 0xFF	; 255
    4cc6:	60 81       	ld	r22, Z
    4cc8:	71 81       	ldd	r23, Z+1	; 0x01
    4cca:	82 81       	ldd	r24, Z+2	; 0x02
    4ccc:	93 81       	ldd	r25, Z+3	; 0x03
    4cce:	20 e0       	ldi	r18, 0x00	; 0
    4cd0:	30 e0       	ldi	r19, 0x00	; 0
    4cd2:	40 e2       	ldi	r20, 0x20	; 32
    4cd4:	51 e4       	ldi	r21, 0x41	; 65
    4cd6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4cda:	dc 01       	movw	r26, r24
    4cdc:	cb 01       	movw	r24, r22
    4cde:	8e 01       	movw	r16, r28
    4ce0:	09 59       	subi	r16, 0x99	; 153
    4ce2:	1f 4f       	sbci	r17, 0xFF	; 255
    4ce4:	bc 01       	movw	r22, r24
    4ce6:	cd 01       	movw	r24, r26
    4ce8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4cec:	dc 01       	movw	r26, r24
    4cee:	cb 01       	movw	r24, r22
    4cf0:	f8 01       	movw	r30, r16
    4cf2:	91 83       	std	Z+1, r25	; 0x01
    4cf4:	80 83       	st	Z, r24
    4cf6:	1f c0       	rjmp	.+62     	; 0x4d36 <LCD_secondadd+0x2be>
    4cf8:	fe 01       	movw	r30, r28
    4cfa:	eb 59       	subi	r30, 0x9B	; 155
    4cfc:	ff 4f       	sbci	r31, 0xFF	; 255
    4cfe:	88 ec       	ldi	r24, 0xC8	; 200
    4d00:	90 e0       	ldi	r25, 0x00	; 0
    4d02:	91 83       	std	Z+1, r25	; 0x01
    4d04:	80 83       	st	Z, r24
    4d06:	fe 01       	movw	r30, r28
    4d08:	eb 59       	subi	r30, 0x9B	; 155
    4d0a:	ff 4f       	sbci	r31, 0xFF	; 255
    4d0c:	80 81       	ld	r24, Z
    4d0e:	91 81       	ldd	r25, Z+1	; 0x01
    4d10:	01 97       	sbiw	r24, 0x01	; 1
    4d12:	f1 f7       	brne	.-4      	; 0x4d10 <LCD_secondadd+0x298>
    4d14:	fe 01       	movw	r30, r28
    4d16:	eb 59       	subi	r30, 0x9B	; 155
    4d18:	ff 4f       	sbci	r31, 0xFF	; 255
    4d1a:	91 83       	std	Z+1, r25	; 0x01
    4d1c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4d1e:	de 01       	movw	r26, r28
    4d20:	a9 59       	subi	r26, 0x99	; 153
    4d22:	bf 4f       	sbci	r27, 0xFF	; 255
    4d24:	fe 01       	movw	r30, r28
    4d26:	e9 59       	subi	r30, 0x99	; 153
    4d28:	ff 4f       	sbci	r31, 0xFF	; 255
    4d2a:	80 81       	ld	r24, Z
    4d2c:	91 81       	ldd	r25, Z+1	; 0x01
    4d2e:	01 97       	sbiw	r24, 0x01	; 1
    4d30:	11 96       	adiw	r26, 0x01	; 1
    4d32:	9c 93       	st	X, r25
    4d34:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4d36:	fe 01       	movw	r30, r28
    4d38:	e9 59       	subi	r30, 0x99	; 153
    4d3a:	ff 4f       	sbci	r31, 0xFF	; 255
    4d3c:	80 81       	ld	r24, Z
    4d3e:	91 81       	ldd	r25, Z+1	; 0x01
    4d40:	00 97       	sbiw	r24, 0x00	; 0
    4d42:	d1 f6       	brne	.-76     	; 0x4cf8 <LCD_secondadd+0x280>
    4d44:	27 c0       	rjmp	.+78     	; 0x4d94 <LCD_secondadd+0x31c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4d46:	8e 01       	movw	r16, r28
    4d48:	09 59       	subi	r16, 0x99	; 153
    4d4a:	1f 4f       	sbci	r17, 0xFF	; 255
    4d4c:	fe 01       	movw	r30, r28
    4d4e:	e7 59       	subi	r30, 0x97	; 151
    4d50:	ff 4f       	sbci	r31, 0xFF	; 255
    4d52:	60 81       	ld	r22, Z
    4d54:	71 81       	ldd	r23, Z+1	; 0x01
    4d56:	82 81       	ldd	r24, Z+2	; 0x02
    4d58:	93 81       	ldd	r25, Z+3	; 0x03
    4d5a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4d5e:	dc 01       	movw	r26, r24
    4d60:	cb 01       	movw	r24, r22
    4d62:	f8 01       	movw	r30, r16
    4d64:	91 83       	std	Z+1, r25	; 0x01
    4d66:	80 83       	st	Z, r24
    4d68:	de 01       	movw	r26, r28
    4d6a:	ad 59       	subi	r26, 0x9D	; 157
    4d6c:	bf 4f       	sbci	r27, 0xFF	; 255
    4d6e:	fe 01       	movw	r30, r28
    4d70:	e9 59       	subi	r30, 0x99	; 153
    4d72:	ff 4f       	sbci	r31, 0xFF	; 255
    4d74:	80 81       	ld	r24, Z
    4d76:	91 81       	ldd	r25, Z+1	; 0x01
    4d78:	8d 93       	st	X+, r24
    4d7a:	9c 93       	st	X, r25
    4d7c:	fe 01       	movw	r30, r28
    4d7e:	ed 59       	subi	r30, 0x9D	; 157
    4d80:	ff 4f       	sbci	r31, 0xFF	; 255
    4d82:	80 81       	ld	r24, Z
    4d84:	91 81       	ldd	r25, Z+1	; 0x01
    4d86:	01 97       	sbiw	r24, 0x01	; 1
    4d88:	f1 f7       	brne	.-4      	; 0x4d86 <LCD_secondadd+0x30e>
    4d8a:	fe 01       	movw	r30, r28
    4d8c:	ed 59       	subi	r30, 0x9D	; 157
    4d8e:	ff 4f       	sbci	r31, 0xFF	; 255
    4d90:	91 83       	std	Z+1, r25	; 0x01
    4d92:	80 83       	st	Z, r24
	_delay_ms(10);
	LCD_write('T');
    4d94:	84 e5       	ldi	r24, 0x54	; 84
    4d96:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
    4d9a:	fe 01       	movw	r30, r28
    4d9c:	e1 5a       	subi	r30, 0xA1	; 161
    4d9e:	ff 4f       	sbci	r31, 0xFF	; 255
    4da0:	80 e0       	ldi	r24, 0x00	; 0
    4da2:	90 e0       	ldi	r25, 0x00	; 0
    4da4:	a0 e2       	ldi	r26, 0x20	; 32
    4da6:	b1 e4       	ldi	r27, 0x41	; 65
    4da8:	80 83       	st	Z, r24
    4daa:	91 83       	std	Z+1, r25	; 0x01
    4dac:	a2 83       	std	Z+2, r26	; 0x02
    4dae:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4db0:	8e 01       	movw	r16, r28
    4db2:	05 5a       	subi	r16, 0xA5	; 165
    4db4:	1f 4f       	sbci	r17, 0xFF	; 255
    4db6:	fe 01       	movw	r30, r28
    4db8:	e1 5a       	subi	r30, 0xA1	; 161
    4dba:	ff 4f       	sbci	r31, 0xFF	; 255
    4dbc:	60 81       	ld	r22, Z
    4dbe:	71 81       	ldd	r23, Z+1	; 0x01
    4dc0:	82 81       	ldd	r24, Z+2	; 0x02
    4dc2:	93 81       	ldd	r25, Z+3	; 0x03
    4dc4:	20 e0       	ldi	r18, 0x00	; 0
    4dc6:	30 e0       	ldi	r19, 0x00	; 0
    4dc8:	4a ef       	ldi	r20, 0xFA	; 250
    4dca:	54 e4       	ldi	r21, 0x44	; 68
    4dcc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4dd0:	dc 01       	movw	r26, r24
    4dd2:	cb 01       	movw	r24, r22
    4dd4:	f8 01       	movw	r30, r16
    4dd6:	80 83       	st	Z, r24
    4dd8:	91 83       	std	Z+1, r25	; 0x01
    4dda:	a2 83       	std	Z+2, r26	; 0x02
    4ddc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4dde:	fe 01       	movw	r30, r28
    4de0:	e5 5a       	subi	r30, 0xA5	; 165
    4de2:	ff 4f       	sbci	r31, 0xFF	; 255
    4de4:	60 81       	ld	r22, Z
    4de6:	71 81       	ldd	r23, Z+1	; 0x01
    4de8:	82 81       	ldd	r24, Z+2	; 0x02
    4dea:	93 81       	ldd	r25, Z+3	; 0x03
    4dec:	20 e0       	ldi	r18, 0x00	; 0
    4dee:	30 e0       	ldi	r19, 0x00	; 0
    4df0:	40 e8       	ldi	r20, 0x80	; 128
    4df2:	5f e3       	ldi	r21, 0x3F	; 63
    4df4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4df8:	88 23       	and	r24, r24
    4dfa:	44 f4       	brge	.+16     	; 0x4e0c <LCD_secondadd+0x394>
		__ticks = 1;
    4dfc:	fe 01       	movw	r30, r28
    4dfe:	e7 5a       	subi	r30, 0xA7	; 167
    4e00:	ff 4f       	sbci	r31, 0xFF	; 255
    4e02:	81 e0       	ldi	r24, 0x01	; 1
    4e04:	90 e0       	ldi	r25, 0x00	; 0
    4e06:	91 83       	std	Z+1, r25	; 0x01
    4e08:	80 83       	st	Z, r24
    4e0a:	64 c0       	rjmp	.+200    	; 0x4ed4 <LCD_secondadd+0x45c>
	else if (__tmp > 65535)
    4e0c:	fe 01       	movw	r30, r28
    4e0e:	e5 5a       	subi	r30, 0xA5	; 165
    4e10:	ff 4f       	sbci	r31, 0xFF	; 255
    4e12:	60 81       	ld	r22, Z
    4e14:	71 81       	ldd	r23, Z+1	; 0x01
    4e16:	82 81       	ldd	r24, Z+2	; 0x02
    4e18:	93 81       	ldd	r25, Z+3	; 0x03
    4e1a:	20 e0       	ldi	r18, 0x00	; 0
    4e1c:	3f ef       	ldi	r19, 0xFF	; 255
    4e1e:	4f e7       	ldi	r20, 0x7F	; 127
    4e20:	57 e4       	ldi	r21, 0x47	; 71
    4e22:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4e26:	18 16       	cp	r1, r24
    4e28:	0c f0       	brlt	.+2      	; 0x4e2c <LCD_secondadd+0x3b4>
    4e2a:	43 c0       	rjmp	.+134    	; 0x4eb2 <LCD_secondadd+0x43a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4e2c:	fe 01       	movw	r30, r28
    4e2e:	e1 5a       	subi	r30, 0xA1	; 161
    4e30:	ff 4f       	sbci	r31, 0xFF	; 255
    4e32:	60 81       	ld	r22, Z
    4e34:	71 81       	ldd	r23, Z+1	; 0x01
    4e36:	82 81       	ldd	r24, Z+2	; 0x02
    4e38:	93 81       	ldd	r25, Z+3	; 0x03
    4e3a:	20 e0       	ldi	r18, 0x00	; 0
    4e3c:	30 e0       	ldi	r19, 0x00	; 0
    4e3e:	40 e2       	ldi	r20, 0x20	; 32
    4e40:	51 e4       	ldi	r21, 0x41	; 65
    4e42:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4e46:	dc 01       	movw	r26, r24
    4e48:	cb 01       	movw	r24, r22
    4e4a:	8e 01       	movw	r16, r28
    4e4c:	07 5a       	subi	r16, 0xA7	; 167
    4e4e:	1f 4f       	sbci	r17, 0xFF	; 255
    4e50:	bc 01       	movw	r22, r24
    4e52:	cd 01       	movw	r24, r26
    4e54:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4e58:	dc 01       	movw	r26, r24
    4e5a:	cb 01       	movw	r24, r22
    4e5c:	f8 01       	movw	r30, r16
    4e5e:	91 83       	std	Z+1, r25	; 0x01
    4e60:	80 83       	st	Z, r24
    4e62:	1f c0       	rjmp	.+62     	; 0x4ea2 <LCD_secondadd+0x42a>
    4e64:	fe 01       	movw	r30, r28
    4e66:	e9 5a       	subi	r30, 0xA9	; 169
    4e68:	ff 4f       	sbci	r31, 0xFF	; 255
    4e6a:	88 ec       	ldi	r24, 0xC8	; 200
    4e6c:	90 e0       	ldi	r25, 0x00	; 0
    4e6e:	91 83       	std	Z+1, r25	; 0x01
    4e70:	80 83       	st	Z, r24
    4e72:	fe 01       	movw	r30, r28
    4e74:	e9 5a       	subi	r30, 0xA9	; 169
    4e76:	ff 4f       	sbci	r31, 0xFF	; 255
    4e78:	80 81       	ld	r24, Z
    4e7a:	91 81       	ldd	r25, Z+1	; 0x01
    4e7c:	01 97       	sbiw	r24, 0x01	; 1
    4e7e:	f1 f7       	brne	.-4      	; 0x4e7c <LCD_secondadd+0x404>
    4e80:	fe 01       	movw	r30, r28
    4e82:	e9 5a       	subi	r30, 0xA9	; 169
    4e84:	ff 4f       	sbci	r31, 0xFF	; 255
    4e86:	91 83       	std	Z+1, r25	; 0x01
    4e88:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4e8a:	de 01       	movw	r26, r28
    4e8c:	a7 5a       	subi	r26, 0xA7	; 167
    4e8e:	bf 4f       	sbci	r27, 0xFF	; 255
    4e90:	fe 01       	movw	r30, r28
    4e92:	e7 5a       	subi	r30, 0xA7	; 167
    4e94:	ff 4f       	sbci	r31, 0xFF	; 255
    4e96:	80 81       	ld	r24, Z
    4e98:	91 81       	ldd	r25, Z+1	; 0x01
    4e9a:	01 97       	sbiw	r24, 0x01	; 1
    4e9c:	11 96       	adiw	r26, 0x01	; 1
    4e9e:	9c 93       	st	X, r25
    4ea0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4ea2:	fe 01       	movw	r30, r28
    4ea4:	e7 5a       	subi	r30, 0xA7	; 167
    4ea6:	ff 4f       	sbci	r31, 0xFF	; 255
    4ea8:	80 81       	ld	r24, Z
    4eaa:	91 81       	ldd	r25, Z+1	; 0x01
    4eac:	00 97       	sbiw	r24, 0x00	; 0
    4eae:	d1 f6       	brne	.-76     	; 0x4e64 <LCD_secondadd+0x3ec>
    4eb0:	27 c0       	rjmp	.+78     	; 0x4f00 <LCD_secondadd+0x488>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4eb2:	8e 01       	movw	r16, r28
    4eb4:	07 5a       	subi	r16, 0xA7	; 167
    4eb6:	1f 4f       	sbci	r17, 0xFF	; 255
    4eb8:	fe 01       	movw	r30, r28
    4eba:	e5 5a       	subi	r30, 0xA5	; 165
    4ebc:	ff 4f       	sbci	r31, 0xFF	; 255
    4ebe:	60 81       	ld	r22, Z
    4ec0:	71 81       	ldd	r23, Z+1	; 0x01
    4ec2:	82 81       	ldd	r24, Z+2	; 0x02
    4ec4:	93 81       	ldd	r25, Z+3	; 0x03
    4ec6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4eca:	dc 01       	movw	r26, r24
    4ecc:	cb 01       	movw	r24, r22
    4ece:	f8 01       	movw	r30, r16
    4ed0:	91 83       	std	Z+1, r25	; 0x01
    4ed2:	80 83       	st	Z, r24
    4ed4:	de 01       	movw	r26, r28
    4ed6:	ab 5a       	subi	r26, 0xAB	; 171
    4ed8:	bf 4f       	sbci	r27, 0xFF	; 255
    4eda:	fe 01       	movw	r30, r28
    4edc:	e7 5a       	subi	r30, 0xA7	; 167
    4ede:	ff 4f       	sbci	r31, 0xFF	; 255
    4ee0:	80 81       	ld	r24, Z
    4ee2:	91 81       	ldd	r25, Z+1	; 0x01
    4ee4:	8d 93       	st	X+, r24
    4ee6:	9c 93       	st	X, r25
    4ee8:	fe 01       	movw	r30, r28
    4eea:	eb 5a       	subi	r30, 0xAB	; 171
    4eec:	ff 4f       	sbci	r31, 0xFF	; 255
    4eee:	80 81       	ld	r24, Z
    4ef0:	91 81       	ldd	r25, Z+1	; 0x01
    4ef2:	01 97       	sbiw	r24, 0x01	; 1
    4ef4:	f1 f7       	brne	.-4      	; 0x4ef2 <LCD_secondadd+0x47a>
    4ef6:	fe 01       	movw	r30, r28
    4ef8:	eb 5a       	subi	r30, 0xAB	; 171
    4efa:	ff 4f       	sbci	r31, 0xFF	; 255
    4efc:	91 83       	std	Z+1, r25	; 0x01
    4efe:	80 83       	st	Z, r24
	_delay_ms(10);
	LCD_cmd(0xC8);
    4f00:	88 ec       	ldi	r24, 0xC8	; 200
    4f02:	0e 94 85 2e 	call	0x5d0a	; 0x5d0a <LCD_cmd>
	LCD_write(1);
    4f06:	81 e0       	ldi	r24, 0x01	; 1
    4f08:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
    4f0c:	fe 01       	movw	r30, r28
    4f0e:	ef 5a       	subi	r30, 0xAF	; 175
    4f10:	ff 4f       	sbci	r31, 0xFF	; 255
    4f12:	80 e0       	ldi	r24, 0x00	; 0
    4f14:	90 e0       	ldi	r25, 0x00	; 0
    4f16:	a0 e2       	ldi	r26, 0x20	; 32
    4f18:	b1 e4       	ldi	r27, 0x41	; 65
    4f1a:	80 83       	st	Z, r24
    4f1c:	91 83       	std	Z+1, r25	; 0x01
    4f1e:	a2 83       	std	Z+2, r26	; 0x02
    4f20:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4f22:	8e 01       	movw	r16, r28
    4f24:	03 5b       	subi	r16, 0xB3	; 179
    4f26:	1f 4f       	sbci	r17, 0xFF	; 255
    4f28:	fe 01       	movw	r30, r28
    4f2a:	ef 5a       	subi	r30, 0xAF	; 175
    4f2c:	ff 4f       	sbci	r31, 0xFF	; 255
    4f2e:	60 81       	ld	r22, Z
    4f30:	71 81       	ldd	r23, Z+1	; 0x01
    4f32:	82 81       	ldd	r24, Z+2	; 0x02
    4f34:	93 81       	ldd	r25, Z+3	; 0x03
    4f36:	20 e0       	ldi	r18, 0x00	; 0
    4f38:	30 e0       	ldi	r19, 0x00	; 0
    4f3a:	4a ef       	ldi	r20, 0xFA	; 250
    4f3c:	54 e4       	ldi	r21, 0x44	; 68
    4f3e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4f42:	dc 01       	movw	r26, r24
    4f44:	cb 01       	movw	r24, r22
    4f46:	f8 01       	movw	r30, r16
    4f48:	80 83       	st	Z, r24
    4f4a:	91 83       	std	Z+1, r25	; 0x01
    4f4c:	a2 83       	std	Z+2, r26	; 0x02
    4f4e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4f50:	fe 01       	movw	r30, r28
    4f52:	e3 5b       	subi	r30, 0xB3	; 179
    4f54:	ff 4f       	sbci	r31, 0xFF	; 255
    4f56:	60 81       	ld	r22, Z
    4f58:	71 81       	ldd	r23, Z+1	; 0x01
    4f5a:	82 81       	ldd	r24, Z+2	; 0x02
    4f5c:	93 81       	ldd	r25, Z+3	; 0x03
    4f5e:	20 e0       	ldi	r18, 0x00	; 0
    4f60:	30 e0       	ldi	r19, 0x00	; 0
    4f62:	40 e8       	ldi	r20, 0x80	; 128
    4f64:	5f e3       	ldi	r21, 0x3F	; 63
    4f66:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4f6a:	88 23       	and	r24, r24
    4f6c:	44 f4       	brge	.+16     	; 0x4f7e <LCD_secondadd+0x506>
		__ticks = 1;
    4f6e:	fe 01       	movw	r30, r28
    4f70:	e5 5b       	subi	r30, 0xB5	; 181
    4f72:	ff 4f       	sbci	r31, 0xFF	; 255
    4f74:	81 e0       	ldi	r24, 0x01	; 1
    4f76:	90 e0       	ldi	r25, 0x00	; 0
    4f78:	91 83       	std	Z+1, r25	; 0x01
    4f7a:	80 83       	st	Z, r24
    4f7c:	64 c0       	rjmp	.+200    	; 0x5046 <LCD_secondadd+0x5ce>
	else if (__tmp > 65535)
    4f7e:	fe 01       	movw	r30, r28
    4f80:	e3 5b       	subi	r30, 0xB3	; 179
    4f82:	ff 4f       	sbci	r31, 0xFF	; 255
    4f84:	60 81       	ld	r22, Z
    4f86:	71 81       	ldd	r23, Z+1	; 0x01
    4f88:	82 81       	ldd	r24, Z+2	; 0x02
    4f8a:	93 81       	ldd	r25, Z+3	; 0x03
    4f8c:	20 e0       	ldi	r18, 0x00	; 0
    4f8e:	3f ef       	ldi	r19, 0xFF	; 255
    4f90:	4f e7       	ldi	r20, 0x7F	; 127
    4f92:	57 e4       	ldi	r21, 0x47	; 71
    4f94:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4f98:	18 16       	cp	r1, r24
    4f9a:	0c f0       	brlt	.+2      	; 0x4f9e <LCD_secondadd+0x526>
    4f9c:	43 c0       	rjmp	.+134    	; 0x5024 <LCD_secondadd+0x5ac>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4f9e:	fe 01       	movw	r30, r28
    4fa0:	ef 5a       	subi	r30, 0xAF	; 175
    4fa2:	ff 4f       	sbci	r31, 0xFF	; 255
    4fa4:	60 81       	ld	r22, Z
    4fa6:	71 81       	ldd	r23, Z+1	; 0x01
    4fa8:	82 81       	ldd	r24, Z+2	; 0x02
    4faa:	93 81       	ldd	r25, Z+3	; 0x03
    4fac:	20 e0       	ldi	r18, 0x00	; 0
    4fae:	30 e0       	ldi	r19, 0x00	; 0
    4fb0:	40 e2       	ldi	r20, 0x20	; 32
    4fb2:	51 e4       	ldi	r21, 0x41	; 65
    4fb4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4fb8:	dc 01       	movw	r26, r24
    4fba:	cb 01       	movw	r24, r22
    4fbc:	8e 01       	movw	r16, r28
    4fbe:	05 5b       	subi	r16, 0xB5	; 181
    4fc0:	1f 4f       	sbci	r17, 0xFF	; 255
    4fc2:	bc 01       	movw	r22, r24
    4fc4:	cd 01       	movw	r24, r26
    4fc6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4fca:	dc 01       	movw	r26, r24
    4fcc:	cb 01       	movw	r24, r22
    4fce:	f8 01       	movw	r30, r16
    4fd0:	91 83       	std	Z+1, r25	; 0x01
    4fd2:	80 83       	st	Z, r24
    4fd4:	1f c0       	rjmp	.+62     	; 0x5014 <LCD_secondadd+0x59c>
    4fd6:	fe 01       	movw	r30, r28
    4fd8:	e7 5b       	subi	r30, 0xB7	; 183
    4fda:	ff 4f       	sbci	r31, 0xFF	; 255
    4fdc:	88 ec       	ldi	r24, 0xC8	; 200
    4fde:	90 e0       	ldi	r25, 0x00	; 0
    4fe0:	91 83       	std	Z+1, r25	; 0x01
    4fe2:	80 83       	st	Z, r24
    4fe4:	fe 01       	movw	r30, r28
    4fe6:	e7 5b       	subi	r30, 0xB7	; 183
    4fe8:	ff 4f       	sbci	r31, 0xFF	; 255
    4fea:	80 81       	ld	r24, Z
    4fec:	91 81       	ldd	r25, Z+1	; 0x01
    4fee:	01 97       	sbiw	r24, 0x01	; 1
    4ff0:	f1 f7       	brne	.-4      	; 0x4fee <LCD_secondadd+0x576>
    4ff2:	fe 01       	movw	r30, r28
    4ff4:	e7 5b       	subi	r30, 0xB7	; 183
    4ff6:	ff 4f       	sbci	r31, 0xFF	; 255
    4ff8:	91 83       	std	Z+1, r25	; 0x01
    4ffa:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4ffc:	de 01       	movw	r26, r28
    4ffe:	a5 5b       	subi	r26, 0xB5	; 181
    5000:	bf 4f       	sbci	r27, 0xFF	; 255
    5002:	fe 01       	movw	r30, r28
    5004:	e5 5b       	subi	r30, 0xB5	; 181
    5006:	ff 4f       	sbci	r31, 0xFF	; 255
    5008:	80 81       	ld	r24, Z
    500a:	91 81       	ldd	r25, Z+1	; 0x01
    500c:	01 97       	sbiw	r24, 0x01	; 1
    500e:	11 96       	adiw	r26, 0x01	; 1
    5010:	9c 93       	st	X, r25
    5012:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5014:	fe 01       	movw	r30, r28
    5016:	e5 5b       	subi	r30, 0xB5	; 181
    5018:	ff 4f       	sbci	r31, 0xFF	; 255
    501a:	80 81       	ld	r24, Z
    501c:	91 81       	ldd	r25, Z+1	; 0x01
    501e:	00 97       	sbiw	r24, 0x00	; 0
    5020:	d1 f6       	brne	.-76     	; 0x4fd6 <LCD_secondadd+0x55e>
    5022:	27 c0       	rjmp	.+78     	; 0x5072 <LCD_secondadd+0x5fa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5024:	8e 01       	movw	r16, r28
    5026:	05 5b       	subi	r16, 0xB5	; 181
    5028:	1f 4f       	sbci	r17, 0xFF	; 255
    502a:	fe 01       	movw	r30, r28
    502c:	e3 5b       	subi	r30, 0xB3	; 179
    502e:	ff 4f       	sbci	r31, 0xFF	; 255
    5030:	60 81       	ld	r22, Z
    5032:	71 81       	ldd	r23, Z+1	; 0x01
    5034:	82 81       	ldd	r24, Z+2	; 0x02
    5036:	93 81       	ldd	r25, Z+3	; 0x03
    5038:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    503c:	dc 01       	movw	r26, r24
    503e:	cb 01       	movw	r24, r22
    5040:	f8 01       	movw	r30, r16
    5042:	91 83       	std	Z+1, r25	; 0x01
    5044:	80 83       	st	Z, r24
    5046:	de 01       	movw	r26, r28
    5048:	a9 5b       	subi	r26, 0xB9	; 185
    504a:	bf 4f       	sbci	r27, 0xFF	; 255
    504c:	fe 01       	movw	r30, r28
    504e:	e5 5b       	subi	r30, 0xB5	; 181
    5050:	ff 4f       	sbci	r31, 0xFF	; 255
    5052:	80 81       	ld	r24, Z
    5054:	91 81       	ldd	r25, Z+1	; 0x01
    5056:	8d 93       	st	X+, r24
    5058:	9c 93       	st	X, r25
    505a:	fe 01       	movw	r30, r28
    505c:	e9 5b       	subi	r30, 0xB9	; 185
    505e:	ff 4f       	sbci	r31, 0xFF	; 255
    5060:	80 81       	ld	r24, Z
    5062:	91 81       	ldd	r25, Z+1	; 0x01
    5064:	01 97       	sbiw	r24, 0x01	; 1
    5066:	f1 f7       	brne	.-4      	; 0x5064 <LCD_secondadd+0x5ec>
    5068:	fe 01       	movw	r30, r28
    506a:	e9 5b       	subi	r30, 0xB9	; 185
    506c:	ff 4f       	sbci	r31, 0xFF	; 255
    506e:	91 83       	std	Z+1, r25	; 0x01
    5070:	80 83       	st	Z, r24
	_delay_ms(10);
	LCD_cmd(0xC7);
    5072:	87 ec       	ldi	r24, 0xC7	; 199
    5074:	0e 94 85 2e 	call	0x5d0a	; 0x5d0a <LCD_cmd>
	LCD_write(2);
    5078:	82 e0       	ldi	r24, 0x02	; 2
    507a:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
    507e:	fe 01       	movw	r30, r28
    5080:	ed 5b       	subi	r30, 0xBD	; 189
    5082:	ff 4f       	sbci	r31, 0xFF	; 255
    5084:	80 e0       	ldi	r24, 0x00	; 0
    5086:	90 e0       	ldi	r25, 0x00	; 0
    5088:	a0 e2       	ldi	r26, 0x20	; 32
    508a:	b1 e4       	ldi	r27, 0x41	; 65
    508c:	80 83       	st	Z, r24
    508e:	91 83       	std	Z+1, r25	; 0x01
    5090:	a2 83       	std	Z+2, r26	; 0x02
    5092:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5094:	8e 01       	movw	r16, r28
    5096:	01 5c       	subi	r16, 0xC1	; 193
    5098:	1f 4f       	sbci	r17, 0xFF	; 255
    509a:	fe 01       	movw	r30, r28
    509c:	ed 5b       	subi	r30, 0xBD	; 189
    509e:	ff 4f       	sbci	r31, 0xFF	; 255
    50a0:	60 81       	ld	r22, Z
    50a2:	71 81       	ldd	r23, Z+1	; 0x01
    50a4:	82 81       	ldd	r24, Z+2	; 0x02
    50a6:	93 81       	ldd	r25, Z+3	; 0x03
    50a8:	20 e0       	ldi	r18, 0x00	; 0
    50aa:	30 e0       	ldi	r19, 0x00	; 0
    50ac:	4a ef       	ldi	r20, 0xFA	; 250
    50ae:	54 e4       	ldi	r21, 0x44	; 68
    50b0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    50b4:	dc 01       	movw	r26, r24
    50b6:	cb 01       	movw	r24, r22
    50b8:	f8 01       	movw	r30, r16
    50ba:	80 83       	st	Z, r24
    50bc:	91 83       	std	Z+1, r25	; 0x01
    50be:	a2 83       	std	Z+2, r26	; 0x02
    50c0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    50c2:	fe 01       	movw	r30, r28
    50c4:	ff 96       	adiw	r30, 0x3f	; 63
    50c6:	60 81       	ld	r22, Z
    50c8:	71 81       	ldd	r23, Z+1	; 0x01
    50ca:	82 81       	ldd	r24, Z+2	; 0x02
    50cc:	93 81       	ldd	r25, Z+3	; 0x03
    50ce:	20 e0       	ldi	r18, 0x00	; 0
    50d0:	30 e0       	ldi	r19, 0x00	; 0
    50d2:	40 e8       	ldi	r20, 0x80	; 128
    50d4:	5f e3       	ldi	r21, 0x3F	; 63
    50d6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    50da:	88 23       	and	r24, r24
    50dc:	2c f4       	brge	.+10     	; 0x50e8 <LCD_secondadd+0x670>
		__ticks = 1;
    50de:	81 e0       	ldi	r24, 0x01	; 1
    50e0:	90 e0       	ldi	r25, 0x00	; 0
    50e2:	9e af       	std	Y+62, r25	; 0x3e
    50e4:	8d af       	std	Y+61, r24	; 0x3d
    50e6:	46 c0       	rjmp	.+140    	; 0x5174 <LCD_secondadd+0x6fc>
	else if (__tmp > 65535)
    50e8:	fe 01       	movw	r30, r28
    50ea:	ff 96       	adiw	r30, 0x3f	; 63
    50ec:	60 81       	ld	r22, Z
    50ee:	71 81       	ldd	r23, Z+1	; 0x01
    50f0:	82 81       	ldd	r24, Z+2	; 0x02
    50f2:	93 81       	ldd	r25, Z+3	; 0x03
    50f4:	20 e0       	ldi	r18, 0x00	; 0
    50f6:	3f ef       	ldi	r19, 0xFF	; 255
    50f8:	4f e7       	ldi	r20, 0x7F	; 127
    50fa:	57 e4       	ldi	r21, 0x47	; 71
    50fc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5100:	18 16       	cp	r1, r24
    5102:	64 f5       	brge	.+88     	; 0x515c <LCD_secondadd+0x6e4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5104:	fe 01       	movw	r30, r28
    5106:	ed 5b       	subi	r30, 0xBD	; 189
    5108:	ff 4f       	sbci	r31, 0xFF	; 255
    510a:	60 81       	ld	r22, Z
    510c:	71 81       	ldd	r23, Z+1	; 0x01
    510e:	82 81       	ldd	r24, Z+2	; 0x02
    5110:	93 81       	ldd	r25, Z+3	; 0x03
    5112:	20 e0       	ldi	r18, 0x00	; 0
    5114:	30 e0       	ldi	r19, 0x00	; 0
    5116:	40 e2       	ldi	r20, 0x20	; 32
    5118:	51 e4       	ldi	r21, 0x41	; 65
    511a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    511e:	dc 01       	movw	r26, r24
    5120:	cb 01       	movw	r24, r22
    5122:	bc 01       	movw	r22, r24
    5124:	cd 01       	movw	r24, r26
    5126:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    512a:	dc 01       	movw	r26, r24
    512c:	cb 01       	movw	r24, r22
    512e:	9e af       	std	Y+62, r25	; 0x3e
    5130:	8d af       	std	Y+61, r24	; 0x3d
    5132:	0f c0       	rjmp	.+30     	; 0x5152 <LCD_secondadd+0x6da>
    5134:	88 ec       	ldi	r24, 0xC8	; 200
    5136:	90 e0       	ldi	r25, 0x00	; 0
    5138:	9c af       	std	Y+60, r25	; 0x3c
    513a:	8b af       	std	Y+59, r24	; 0x3b
    513c:	8b ad       	ldd	r24, Y+59	; 0x3b
    513e:	9c ad       	ldd	r25, Y+60	; 0x3c
    5140:	01 97       	sbiw	r24, 0x01	; 1
    5142:	f1 f7       	brne	.-4      	; 0x5140 <LCD_secondadd+0x6c8>
    5144:	9c af       	std	Y+60, r25	; 0x3c
    5146:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5148:	8d ad       	ldd	r24, Y+61	; 0x3d
    514a:	9e ad       	ldd	r25, Y+62	; 0x3e
    514c:	01 97       	sbiw	r24, 0x01	; 1
    514e:	9e af       	std	Y+62, r25	; 0x3e
    5150:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5152:	8d ad       	ldd	r24, Y+61	; 0x3d
    5154:	9e ad       	ldd	r25, Y+62	; 0x3e
    5156:	00 97       	sbiw	r24, 0x00	; 0
    5158:	69 f7       	brne	.-38     	; 0x5134 <LCD_secondadd+0x6bc>
    515a:	16 c0       	rjmp	.+44     	; 0x5188 <LCD_secondadd+0x710>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    515c:	fe 01       	movw	r30, r28
    515e:	ff 96       	adiw	r30, 0x3f	; 63
    5160:	60 81       	ld	r22, Z
    5162:	71 81       	ldd	r23, Z+1	; 0x01
    5164:	82 81       	ldd	r24, Z+2	; 0x02
    5166:	93 81       	ldd	r25, Z+3	; 0x03
    5168:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    516c:	dc 01       	movw	r26, r24
    516e:	cb 01       	movw	r24, r22
    5170:	9e af       	std	Y+62, r25	; 0x3e
    5172:	8d af       	std	Y+61, r24	; 0x3d
    5174:	8d ad       	ldd	r24, Y+61	; 0x3d
    5176:	9e ad       	ldd	r25, Y+62	; 0x3e
    5178:	9a af       	std	Y+58, r25	; 0x3a
    517a:	89 af       	std	Y+57, r24	; 0x39
    517c:	89 ad       	ldd	r24, Y+57	; 0x39
    517e:	9a ad       	ldd	r25, Y+58	; 0x3a
    5180:	01 97       	sbiw	r24, 0x01	; 1
    5182:	f1 f7       	brne	.-4      	; 0x5180 <LCD_secondadd+0x708>
    5184:	9a af       	std	Y+58, r25	; 0x3a
    5186:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(10);
	LCD_cmd(0xC6);
    5188:	86 ec       	ldi	r24, 0xC6	; 198
    518a:	0e 94 85 2e 	call	0x5d0a	; 0x5d0a <LCD_cmd>
	LCD_write(3);
    518e:	83 e0       	ldi	r24, 0x03	; 3
    5190:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
    5194:	80 e0       	ldi	r24, 0x00	; 0
    5196:	90 e0       	ldi	r25, 0x00	; 0
    5198:	a0 e2       	ldi	r26, 0x20	; 32
    519a:	b1 e4       	ldi	r27, 0x41	; 65
    519c:	8d ab       	std	Y+53, r24	; 0x35
    519e:	9e ab       	std	Y+54, r25	; 0x36
    51a0:	af ab       	std	Y+55, r26	; 0x37
    51a2:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    51a4:	6d a9       	ldd	r22, Y+53	; 0x35
    51a6:	7e a9       	ldd	r23, Y+54	; 0x36
    51a8:	8f a9       	ldd	r24, Y+55	; 0x37
    51aa:	98 ad       	ldd	r25, Y+56	; 0x38
    51ac:	20 e0       	ldi	r18, 0x00	; 0
    51ae:	30 e0       	ldi	r19, 0x00	; 0
    51b0:	4a ef       	ldi	r20, 0xFA	; 250
    51b2:	54 e4       	ldi	r21, 0x44	; 68
    51b4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    51b8:	dc 01       	movw	r26, r24
    51ba:	cb 01       	movw	r24, r22
    51bc:	89 ab       	std	Y+49, r24	; 0x31
    51be:	9a ab       	std	Y+50, r25	; 0x32
    51c0:	ab ab       	std	Y+51, r26	; 0x33
    51c2:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    51c4:	69 a9       	ldd	r22, Y+49	; 0x31
    51c6:	7a a9       	ldd	r23, Y+50	; 0x32
    51c8:	8b a9       	ldd	r24, Y+51	; 0x33
    51ca:	9c a9       	ldd	r25, Y+52	; 0x34
    51cc:	20 e0       	ldi	r18, 0x00	; 0
    51ce:	30 e0       	ldi	r19, 0x00	; 0
    51d0:	40 e8       	ldi	r20, 0x80	; 128
    51d2:	5f e3       	ldi	r21, 0x3F	; 63
    51d4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    51d8:	88 23       	and	r24, r24
    51da:	2c f4       	brge	.+10     	; 0x51e6 <LCD_secondadd+0x76e>
		__ticks = 1;
    51dc:	81 e0       	ldi	r24, 0x01	; 1
    51de:	90 e0       	ldi	r25, 0x00	; 0
    51e0:	98 ab       	std	Y+48, r25	; 0x30
    51e2:	8f a7       	std	Y+47, r24	; 0x2f
    51e4:	3f c0       	rjmp	.+126    	; 0x5264 <LCD_secondadd+0x7ec>
	else if (__tmp > 65535)
    51e6:	69 a9       	ldd	r22, Y+49	; 0x31
    51e8:	7a a9       	ldd	r23, Y+50	; 0x32
    51ea:	8b a9       	ldd	r24, Y+51	; 0x33
    51ec:	9c a9       	ldd	r25, Y+52	; 0x34
    51ee:	20 e0       	ldi	r18, 0x00	; 0
    51f0:	3f ef       	ldi	r19, 0xFF	; 255
    51f2:	4f e7       	ldi	r20, 0x7F	; 127
    51f4:	57 e4       	ldi	r21, 0x47	; 71
    51f6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    51fa:	18 16       	cp	r1, r24
    51fc:	4c f5       	brge	.+82     	; 0x5250 <LCD_secondadd+0x7d8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    51fe:	6d a9       	ldd	r22, Y+53	; 0x35
    5200:	7e a9       	ldd	r23, Y+54	; 0x36
    5202:	8f a9       	ldd	r24, Y+55	; 0x37
    5204:	98 ad       	ldd	r25, Y+56	; 0x38
    5206:	20 e0       	ldi	r18, 0x00	; 0
    5208:	30 e0       	ldi	r19, 0x00	; 0
    520a:	40 e2       	ldi	r20, 0x20	; 32
    520c:	51 e4       	ldi	r21, 0x41	; 65
    520e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5212:	dc 01       	movw	r26, r24
    5214:	cb 01       	movw	r24, r22
    5216:	bc 01       	movw	r22, r24
    5218:	cd 01       	movw	r24, r26
    521a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    521e:	dc 01       	movw	r26, r24
    5220:	cb 01       	movw	r24, r22
    5222:	98 ab       	std	Y+48, r25	; 0x30
    5224:	8f a7       	std	Y+47, r24	; 0x2f
    5226:	0f c0       	rjmp	.+30     	; 0x5246 <LCD_secondadd+0x7ce>
    5228:	88 ec       	ldi	r24, 0xC8	; 200
    522a:	90 e0       	ldi	r25, 0x00	; 0
    522c:	9e a7       	std	Y+46, r25	; 0x2e
    522e:	8d a7       	std	Y+45, r24	; 0x2d
    5230:	8d a5       	ldd	r24, Y+45	; 0x2d
    5232:	9e a5       	ldd	r25, Y+46	; 0x2e
    5234:	01 97       	sbiw	r24, 0x01	; 1
    5236:	f1 f7       	brne	.-4      	; 0x5234 <LCD_secondadd+0x7bc>
    5238:	9e a7       	std	Y+46, r25	; 0x2e
    523a:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    523c:	8f a5       	ldd	r24, Y+47	; 0x2f
    523e:	98 a9       	ldd	r25, Y+48	; 0x30
    5240:	01 97       	sbiw	r24, 0x01	; 1
    5242:	98 ab       	std	Y+48, r25	; 0x30
    5244:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5246:	8f a5       	ldd	r24, Y+47	; 0x2f
    5248:	98 a9       	ldd	r25, Y+48	; 0x30
    524a:	00 97       	sbiw	r24, 0x00	; 0
    524c:	69 f7       	brne	.-38     	; 0x5228 <LCD_secondadd+0x7b0>
    524e:	14 c0       	rjmp	.+40     	; 0x5278 <LCD_secondadd+0x800>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5250:	69 a9       	ldd	r22, Y+49	; 0x31
    5252:	7a a9       	ldd	r23, Y+50	; 0x32
    5254:	8b a9       	ldd	r24, Y+51	; 0x33
    5256:	9c a9       	ldd	r25, Y+52	; 0x34
    5258:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    525c:	dc 01       	movw	r26, r24
    525e:	cb 01       	movw	r24, r22
    5260:	98 ab       	std	Y+48, r25	; 0x30
    5262:	8f a7       	std	Y+47, r24	; 0x2f
    5264:	8f a5       	ldd	r24, Y+47	; 0x2f
    5266:	98 a9       	ldd	r25, Y+48	; 0x30
    5268:	9c a7       	std	Y+44, r25	; 0x2c
    526a:	8b a7       	std	Y+43, r24	; 0x2b
    526c:	8b a5       	ldd	r24, Y+43	; 0x2b
    526e:	9c a5       	ldd	r25, Y+44	; 0x2c
    5270:	01 97       	sbiw	r24, 0x01	; 1
    5272:	f1 f7       	brne	.-4      	; 0x5270 <LCD_secondadd+0x7f8>
    5274:	9c a7       	std	Y+44, r25	; 0x2c
    5276:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(10);
	LCD_cmd(0xC5);
    5278:	85 ec       	ldi	r24, 0xC5	; 197
    527a:	0e 94 85 2e 	call	0x5d0a	; 0x5d0a <LCD_cmd>
	LCD_write(4);
    527e:	84 e0       	ldi	r24, 0x04	; 4
    5280:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
    5284:	80 e0       	ldi	r24, 0x00	; 0
    5286:	90 e0       	ldi	r25, 0x00	; 0
    5288:	a0 e2       	ldi	r26, 0x20	; 32
    528a:	b1 e4       	ldi	r27, 0x41	; 65
    528c:	8f a3       	std	Y+39, r24	; 0x27
    528e:	98 a7       	std	Y+40, r25	; 0x28
    5290:	a9 a7       	std	Y+41, r26	; 0x29
    5292:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5294:	6f a1       	ldd	r22, Y+39	; 0x27
    5296:	78 a5       	ldd	r23, Y+40	; 0x28
    5298:	89 a5       	ldd	r24, Y+41	; 0x29
    529a:	9a a5       	ldd	r25, Y+42	; 0x2a
    529c:	20 e0       	ldi	r18, 0x00	; 0
    529e:	30 e0       	ldi	r19, 0x00	; 0
    52a0:	4a ef       	ldi	r20, 0xFA	; 250
    52a2:	54 e4       	ldi	r21, 0x44	; 68
    52a4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    52a8:	dc 01       	movw	r26, r24
    52aa:	cb 01       	movw	r24, r22
    52ac:	8b a3       	std	Y+35, r24	; 0x23
    52ae:	9c a3       	std	Y+36, r25	; 0x24
    52b0:	ad a3       	std	Y+37, r26	; 0x25
    52b2:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    52b4:	6b a1       	ldd	r22, Y+35	; 0x23
    52b6:	7c a1       	ldd	r23, Y+36	; 0x24
    52b8:	8d a1       	ldd	r24, Y+37	; 0x25
    52ba:	9e a1       	ldd	r25, Y+38	; 0x26
    52bc:	20 e0       	ldi	r18, 0x00	; 0
    52be:	30 e0       	ldi	r19, 0x00	; 0
    52c0:	40 e8       	ldi	r20, 0x80	; 128
    52c2:	5f e3       	ldi	r21, 0x3F	; 63
    52c4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    52c8:	88 23       	and	r24, r24
    52ca:	2c f4       	brge	.+10     	; 0x52d6 <LCD_secondadd+0x85e>
		__ticks = 1;
    52cc:	81 e0       	ldi	r24, 0x01	; 1
    52ce:	90 e0       	ldi	r25, 0x00	; 0
    52d0:	9a a3       	std	Y+34, r25	; 0x22
    52d2:	89 a3       	std	Y+33, r24	; 0x21
    52d4:	3f c0       	rjmp	.+126    	; 0x5354 <LCD_secondadd+0x8dc>
	else if (__tmp > 65535)
    52d6:	6b a1       	ldd	r22, Y+35	; 0x23
    52d8:	7c a1       	ldd	r23, Y+36	; 0x24
    52da:	8d a1       	ldd	r24, Y+37	; 0x25
    52dc:	9e a1       	ldd	r25, Y+38	; 0x26
    52de:	20 e0       	ldi	r18, 0x00	; 0
    52e0:	3f ef       	ldi	r19, 0xFF	; 255
    52e2:	4f e7       	ldi	r20, 0x7F	; 127
    52e4:	57 e4       	ldi	r21, 0x47	; 71
    52e6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    52ea:	18 16       	cp	r1, r24
    52ec:	4c f5       	brge	.+82     	; 0x5340 <LCD_secondadd+0x8c8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    52ee:	6f a1       	ldd	r22, Y+39	; 0x27
    52f0:	78 a5       	ldd	r23, Y+40	; 0x28
    52f2:	89 a5       	ldd	r24, Y+41	; 0x29
    52f4:	9a a5       	ldd	r25, Y+42	; 0x2a
    52f6:	20 e0       	ldi	r18, 0x00	; 0
    52f8:	30 e0       	ldi	r19, 0x00	; 0
    52fa:	40 e2       	ldi	r20, 0x20	; 32
    52fc:	51 e4       	ldi	r21, 0x41	; 65
    52fe:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5302:	dc 01       	movw	r26, r24
    5304:	cb 01       	movw	r24, r22
    5306:	bc 01       	movw	r22, r24
    5308:	cd 01       	movw	r24, r26
    530a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    530e:	dc 01       	movw	r26, r24
    5310:	cb 01       	movw	r24, r22
    5312:	9a a3       	std	Y+34, r25	; 0x22
    5314:	89 a3       	std	Y+33, r24	; 0x21
    5316:	0f c0       	rjmp	.+30     	; 0x5336 <LCD_secondadd+0x8be>
    5318:	88 ec       	ldi	r24, 0xC8	; 200
    531a:	90 e0       	ldi	r25, 0x00	; 0
    531c:	98 a3       	std	Y+32, r25	; 0x20
    531e:	8f 8f       	std	Y+31, r24	; 0x1f
    5320:	8f 8d       	ldd	r24, Y+31	; 0x1f
    5322:	98 a1       	ldd	r25, Y+32	; 0x20
    5324:	01 97       	sbiw	r24, 0x01	; 1
    5326:	f1 f7       	brne	.-4      	; 0x5324 <LCD_secondadd+0x8ac>
    5328:	98 a3       	std	Y+32, r25	; 0x20
    532a:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    532c:	89 a1       	ldd	r24, Y+33	; 0x21
    532e:	9a a1       	ldd	r25, Y+34	; 0x22
    5330:	01 97       	sbiw	r24, 0x01	; 1
    5332:	9a a3       	std	Y+34, r25	; 0x22
    5334:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5336:	89 a1       	ldd	r24, Y+33	; 0x21
    5338:	9a a1       	ldd	r25, Y+34	; 0x22
    533a:	00 97       	sbiw	r24, 0x00	; 0
    533c:	69 f7       	brne	.-38     	; 0x5318 <LCD_secondadd+0x8a0>
    533e:	14 c0       	rjmp	.+40     	; 0x5368 <LCD_secondadd+0x8f0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5340:	6b a1       	ldd	r22, Y+35	; 0x23
    5342:	7c a1       	ldd	r23, Y+36	; 0x24
    5344:	8d a1       	ldd	r24, Y+37	; 0x25
    5346:	9e a1       	ldd	r25, Y+38	; 0x26
    5348:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    534c:	dc 01       	movw	r26, r24
    534e:	cb 01       	movw	r24, r22
    5350:	9a a3       	std	Y+34, r25	; 0x22
    5352:	89 a3       	std	Y+33, r24	; 0x21
    5354:	89 a1       	ldd	r24, Y+33	; 0x21
    5356:	9a a1       	ldd	r25, Y+34	; 0x22
    5358:	9e 8f       	std	Y+30, r25	; 0x1e
    535a:	8d 8f       	std	Y+29, r24	; 0x1d
    535c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    535e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    5360:	01 97       	sbiw	r24, 0x01	; 1
    5362:	f1 f7       	brne	.-4      	; 0x5360 <LCD_secondadd+0x8e8>
    5364:	9e 8f       	std	Y+30, r25	; 0x1e
    5366:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(10);
	LCD_cmd(0xC4);
    5368:	84 ec       	ldi	r24, 0xC4	; 196
    536a:	0e 94 85 2e 	call	0x5d0a	; 0x5d0a <LCD_cmd>
	LCD_write(5);
    536e:	85 e0       	ldi	r24, 0x05	; 5
    5370:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
    5374:	80 e0       	ldi	r24, 0x00	; 0
    5376:	90 e0       	ldi	r25, 0x00	; 0
    5378:	a0 e2       	ldi	r26, 0x20	; 32
    537a:	b1 e4       	ldi	r27, 0x41	; 65
    537c:	89 8f       	std	Y+25, r24	; 0x19
    537e:	9a 8f       	std	Y+26, r25	; 0x1a
    5380:	ab 8f       	std	Y+27, r26	; 0x1b
    5382:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5384:	69 8d       	ldd	r22, Y+25	; 0x19
    5386:	7a 8d       	ldd	r23, Y+26	; 0x1a
    5388:	8b 8d       	ldd	r24, Y+27	; 0x1b
    538a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    538c:	20 e0       	ldi	r18, 0x00	; 0
    538e:	30 e0       	ldi	r19, 0x00	; 0
    5390:	4a ef       	ldi	r20, 0xFA	; 250
    5392:	54 e4       	ldi	r21, 0x44	; 68
    5394:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5398:	dc 01       	movw	r26, r24
    539a:	cb 01       	movw	r24, r22
    539c:	8d 8b       	std	Y+21, r24	; 0x15
    539e:	9e 8b       	std	Y+22, r25	; 0x16
    53a0:	af 8b       	std	Y+23, r26	; 0x17
    53a2:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    53a4:	6d 89       	ldd	r22, Y+21	; 0x15
    53a6:	7e 89       	ldd	r23, Y+22	; 0x16
    53a8:	8f 89       	ldd	r24, Y+23	; 0x17
    53aa:	98 8d       	ldd	r25, Y+24	; 0x18
    53ac:	20 e0       	ldi	r18, 0x00	; 0
    53ae:	30 e0       	ldi	r19, 0x00	; 0
    53b0:	40 e8       	ldi	r20, 0x80	; 128
    53b2:	5f e3       	ldi	r21, 0x3F	; 63
    53b4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    53b8:	88 23       	and	r24, r24
    53ba:	2c f4       	brge	.+10     	; 0x53c6 <LCD_secondadd+0x94e>
		__ticks = 1;
    53bc:	81 e0       	ldi	r24, 0x01	; 1
    53be:	90 e0       	ldi	r25, 0x00	; 0
    53c0:	9c 8b       	std	Y+20, r25	; 0x14
    53c2:	8b 8b       	std	Y+19, r24	; 0x13
    53c4:	3f c0       	rjmp	.+126    	; 0x5444 <LCD_secondadd+0x9cc>
	else if (__tmp > 65535)
    53c6:	6d 89       	ldd	r22, Y+21	; 0x15
    53c8:	7e 89       	ldd	r23, Y+22	; 0x16
    53ca:	8f 89       	ldd	r24, Y+23	; 0x17
    53cc:	98 8d       	ldd	r25, Y+24	; 0x18
    53ce:	20 e0       	ldi	r18, 0x00	; 0
    53d0:	3f ef       	ldi	r19, 0xFF	; 255
    53d2:	4f e7       	ldi	r20, 0x7F	; 127
    53d4:	57 e4       	ldi	r21, 0x47	; 71
    53d6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    53da:	18 16       	cp	r1, r24
    53dc:	4c f5       	brge	.+82     	; 0x5430 <LCD_secondadd+0x9b8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    53de:	69 8d       	ldd	r22, Y+25	; 0x19
    53e0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    53e2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    53e4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    53e6:	20 e0       	ldi	r18, 0x00	; 0
    53e8:	30 e0       	ldi	r19, 0x00	; 0
    53ea:	40 e2       	ldi	r20, 0x20	; 32
    53ec:	51 e4       	ldi	r21, 0x41	; 65
    53ee:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    53f2:	dc 01       	movw	r26, r24
    53f4:	cb 01       	movw	r24, r22
    53f6:	bc 01       	movw	r22, r24
    53f8:	cd 01       	movw	r24, r26
    53fa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    53fe:	dc 01       	movw	r26, r24
    5400:	cb 01       	movw	r24, r22
    5402:	9c 8b       	std	Y+20, r25	; 0x14
    5404:	8b 8b       	std	Y+19, r24	; 0x13
    5406:	0f c0       	rjmp	.+30     	; 0x5426 <LCD_secondadd+0x9ae>
    5408:	88 ec       	ldi	r24, 0xC8	; 200
    540a:	90 e0       	ldi	r25, 0x00	; 0
    540c:	9a 8b       	std	Y+18, r25	; 0x12
    540e:	89 8b       	std	Y+17, r24	; 0x11
    5410:	89 89       	ldd	r24, Y+17	; 0x11
    5412:	9a 89       	ldd	r25, Y+18	; 0x12
    5414:	01 97       	sbiw	r24, 0x01	; 1
    5416:	f1 f7       	brne	.-4      	; 0x5414 <LCD_secondadd+0x99c>
    5418:	9a 8b       	std	Y+18, r25	; 0x12
    541a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    541c:	8b 89       	ldd	r24, Y+19	; 0x13
    541e:	9c 89       	ldd	r25, Y+20	; 0x14
    5420:	01 97       	sbiw	r24, 0x01	; 1
    5422:	9c 8b       	std	Y+20, r25	; 0x14
    5424:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5426:	8b 89       	ldd	r24, Y+19	; 0x13
    5428:	9c 89       	ldd	r25, Y+20	; 0x14
    542a:	00 97       	sbiw	r24, 0x00	; 0
    542c:	69 f7       	brne	.-38     	; 0x5408 <LCD_secondadd+0x990>
    542e:	14 c0       	rjmp	.+40     	; 0x5458 <LCD_secondadd+0x9e0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5430:	6d 89       	ldd	r22, Y+21	; 0x15
    5432:	7e 89       	ldd	r23, Y+22	; 0x16
    5434:	8f 89       	ldd	r24, Y+23	; 0x17
    5436:	98 8d       	ldd	r25, Y+24	; 0x18
    5438:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    543c:	dc 01       	movw	r26, r24
    543e:	cb 01       	movw	r24, r22
    5440:	9c 8b       	std	Y+20, r25	; 0x14
    5442:	8b 8b       	std	Y+19, r24	; 0x13
    5444:	8b 89       	ldd	r24, Y+19	; 0x13
    5446:	9c 89       	ldd	r25, Y+20	; 0x14
    5448:	98 8b       	std	Y+16, r25	; 0x10
    544a:	8f 87       	std	Y+15, r24	; 0x0f
    544c:	8f 85       	ldd	r24, Y+15	; 0x0f
    544e:	98 89       	ldd	r25, Y+16	; 0x10
    5450:	01 97       	sbiw	r24, 0x01	; 1
    5452:	f1 f7       	brne	.-4      	; 0x5450 <LCD_secondadd+0x9d8>
    5454:	98 8b       	std	Y+16, r25	; 0x10
    5456:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(10);
	LCD_cmd(0xC3);
    5458:	83 ec       	ldi	r24, 0xC3	; 195
    545a:	0e 94 85 2e 	call	0x5d0a	; 0x5d0a <LCD_cmd>
	LCD_write(6);
    545e:	86 e0       	ldi	r24, 0x06	; 6
    5460:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>
    5464:	80 e0       	ldi	r24, 0x00	; 0
    5466:	90 e0       	ldi	r25, 0x00	; 0
    5468:	a0 e2       	ldi	r26, 0x20	; 32
    546a:	b1 e4       	ldi	r27, 0x41	; 65
    546c:	8b 87       	std	Y+11, r24	; 0x0b
    546e:	9c 87       	std	Y+12, r25	; 0x0c
    5470:	ad 87       	std	Y+13, r26	; 0x0d
    5472:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5474:	6b 85       	ldd	r22, Y+11	; 0x0b
    5476:	7c 85       	ldd	r23, Y+12	; 0x0c
    5478:	8d 85       	ldd	r24, Y+13	; 0x0d
    547a:	9e 85       	ldd	r25, Y+14	; 0x0e
    547c:	20 e0       	ldi	r18, 0x00	; 0
    547e:	30 e0       	ldi	r19, 0x00	; 0
    5480:	4a ef       	ldi	r20, 0xFA	; 250
    5482:	54 e4       	ldi	r21, 0x44	; 68
    5484:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5488:	dc 01       	movw	r26, r24
    548a:	cb 01       	movw	r24, r22
    548c:	8f 83       	std	Y+7, r24	; 0x07
    548e:	98 87       	std	Y+8, r25	; 0x08
    5490:	a9 87       	std	Y+9, r26	; 0x09
    5492:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    5494:	6f 81       	ldd	r22, Y+7	; 0x07
    5496:	78 85       	ldd	r23, Y+8	; 0x08
    5498:	89 85       	ldd	r24, Y+9	; 0x09
    549a:	9a 85       	ldd	r25, Y+10	; 0x0a
    549c:	20 e0       	ldi	r18, 0x00	; 0
    549e:	30 e0       	ldi	r19, 0x00	; 0
    54a0:	40 e8       	ldi	r20, 0x80	; 128
    54a2:	5f e3       	ldi	r21, 0x3F	; 63
    54a4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    54a8:	88 23       	and	r24, r24
    54aa:	2c f4       	brge	.+10     	; 0x54b6 <LCD_secondadd+0xa3e>
		__ticks = 1;
    54ac:	81 e0       	ldi	r24, 0x01	; 1
    54ae:	90 e0       	ldi	r25, 0x00	; 0
    54b0:	9e 83       	std	Y+6, r25	; 0x06
    54b2:	8d 83       	std	Y+5, r24	; 0x05
    54b4:	3f c0       	rjmp	.+126    	; 0x5534 <LCD_secondadd+0xabc>
	else if (__tmp > 65535)
    54b6:	6f 81       	ldd	r22, Y+7	; 0x07
    54b8:	78 85       	ldd	r23, Y+8	; 0x08
    54ba:	89 85       	ldd	r24, Y+9	; 0x09
    54bc:	9a 85       	ldd	r25, Y+10	; 0x0a
    54be:	20 e0       	ldi	r18, 0x00	; 0
    54c0:	3f ef       	ldi	r19, 0xFF	; 255
    54c2:	4f e7       	ldi	r20, 0x7F	; 127
    54c4:	57 e4       	ldi	r21, 0x47	; 71
    54c6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    54ca:	18 16       	cp	r1, r24
    54cc:	4c f5       	brge	.+82     	; 0x5520 <LCD_secondadd+0xaa8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    54ce:	6b 85       	ldd	r22, Y+11	; 0x0b
    54d0:	7c 85       	ldd	r23, Y+12	; 0x0c
    54d2:	8d 85       	ldd	r24, Y+13	; 0x0d
    54d4:	9e 85       	ldd	r25, Y+14	; 0x0e
    54d6:	20 e0       	ldi	r18, 0x00	; 0
    54d8:	30 e0       	ldi	r19, 0x00	; 0
    54da:	40 e2       	ldi	r20, 0x20	; 32
    54dc:	51 e4       	ldi	r21, 0x41	; 65
    54de:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    54e2:	dc 01       	movw	r26, r24
    54e4:	cb 01       	movw	r24, r22
    54e6:	bc 01       	movw	r22, r24
    54e8:	cd 01       	movw	r24, r26
    54ea:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    54ee:	dc 01       	movw	r26, r24
    54f0:	cb 01       	movw	r24, r22
    54f2:	9e 83       	std	Y+6, r25	; 0x06
    54f4:	8d 83       	std	Y+5, r24	; 0x05
    54f6:	0f c0       	rjmp	.+30     	; 0x5516 <LCD_secondadd+0xa9e>
    54f8:	88 ec       	ldi	r24, 0xC8	; 200
    54fa:	90 e0       	ldi	r25, 0x00	; 0
    54fc:	9c 83       	std	Y+4, r25	; 0x04
    54fe:	8b 83       	std	Y+3, r24	; 0x03
    5500:	8b 81       	ldd	r24, Y+3	; 0x03
    5502:	9c 81       	ldd	r25, Y+4	; 0x04
    5504:	01 97       	sbiw	r24, 0x01	; 1
    5506:	f1 f7       	brne	.-4      	; 0x5504 <LCD_secondadd+0xa8c>
    5508:	9c 83       	std	Y+4, r25	; 0x04
    550a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    550c:	8d 81       	ldd	r24, Y+5	; 0x05
    550e:	9e 81       	ldd	r25, Y+6	; 0x06
    5510:	01 97       	sbiw	r24, 0x01	; 1
    5512:	9e 83       	std	Y+6, r25	; 0x06
    5514:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5516:	8d 81       	ldd	r24, Y+5	; 0x05
    5518:	9e 81       	ldd	r25, Y+6	; 0x06
    551a:	00 97       	sbiw	r24, 0x00	; 0
    551c:	69 f7       	brne	.-38     	; 0x54f8 <LCD_secondadd+0xa80>
    551e:	14 c0       	rjmp	.+40     	; 0x5548 <LCD_secondadd+0xad0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5520:	6f 81       	ldd	r22, Y+7	; 0x07
    5522:	78 85       	ldd	r23, Y+8	; 0x08
    5524:	89 85       	ldd	r24, Y+9	; 0x09
    5526:	9a 85       	ldd	r25, Y+10	; 0x0a
    5528:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    552c:	dc 01       	movw	r26, r24
    552e:	cb 01       	movw	r24, r22
    5530:	9e 83       	std	Y+6, r25	; 0x06
    5532:	8d 83       	std	Y+5, r24	; 0x05
    5534:	8d 81       	ldd	r24, Y+5	; 0x05
    5536:	9e 81       	ldd	r25, Y+6	; 0x06
    5538:	9a 83       	std	Y+2, r25	; 0x02
    553a:	89 83       	std	Y+1, r24	; 0x01
    553c:	89 81       	ldd	r24, Y+1	; 0x01
    553e:	9a 81       	ldd	r25, Y+2	; 0x02
    5540:	01 97       	sbiw	r24, 0x01	; 1
    5542:	f1 f7       	brne	.-4      	; 0x5540 <LCD_secondadd+0xac8>
    5544:	9a 83       	std	Y+2, r25	; 0x02
    5546:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(10);


}
    5548:	c2 58       	subi	r28, 0x82	; 130
    554a:	df 4f       	sbci	r29, 0xFF	; 255
    554c:	0f b6       	in	r0, 0x3f	; 63
    554e:	f8 94       	cli
    5550:	de bf       	out	0x3e, r29	; 62
    5552:	0f be       	out	0x3f, r0	; 63
    5554:	cd bf       	out	0x3d, r28	; 61
    5556:	cf 91       	pop	r28
    5558:	df 91       	pop	r29
    555a:	1f 91       	pop	r17
    555c:	0f 91       	pop	r16
    555e:	08 95       	ret

00005560 <LeftMotor>:

void LeftMotor(void)
{
    5560:	df 93       	push	r29
    5562:	cf 93       	push	r28
    5564:	cd b7       	in	r28, 0x3d	; 61
    5566:	de b7       	in	r29, 0x3e	; 62
    5568:	2e 97       	sbiw	r28, 0x0e	; 14
    556a:	0f b6       	in	r0, 0x3f	; 63
    556c:	f8 94       	cli
    556e:	de bf       	out	0x3e, r29	; 62
    5570:	0f be       	out	0x3f, r0	; 63
    5572:	cd bf       	out	0x3d, r28	; 61
	PORTD |=(1<<3);
    5574:	a2 e3       	ldi	r26, 0x32	; 50
    5576:	b0 e0       	ldi	r27, 0x00	; 0
    5578:	e2 e3       	ldi	r30, 0x32	; 50
    557a:	f0 e0       	ldi	r31, 0x00	; 0
    557c:	80 81       	ld	r24, Z
    557e:	88 60       	ori	r24, 0x08	; 8
    5580:	8c 93       	st	X, r24
    5582:	80 e0       	ldi	r24, 0x00	; 0
    5584:	90 e0       	ldi	r25, 0x00	; 0
    5586:	a0 e8       	ldi	r26, 0x80	; 128
    5588:	bf e3       	ldi	r27, 0x3F	; 63
    558a:	8b 87       	std	Y+11, r24	; 0x0b
    558c:	9c 87       	std	Y+12, r25	; 0x0c
    558e:	ad 87       	std	Y+13, r26	; 0x0d
    5590:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5592:	6b 85       	ldd	r22, Y+11	; 0x0b
    5594:	7c 85       	ldd	r23, Y+12	; 0x0c
    5596:	8d 85       	ldd	r24, Y+13	; 0x0d
    5598:	9e 85       	ldd	r25, Y+14	; 0x0e
    559a:	20 e0       	ldi	r18, 0x00	; 0
    559c:	30 e0       	ldi	r19, 0x00	; 0
    559e:	4a ef       	ldi	r20, 0xFA	; 250
    55a0:	54 e4       	ldi	r21, 0x44	; 68
    55a2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    55a6:	dc 01       	movw	r26, r24
    55a8:	cb 01       	movw	r24, r22
    55aa:	8f 83       	std	Y+7, r24	; 0x07
    55ac:	98 87       	std	Y+8, r25	; 0x08
    55ae:	a9 87       	std	Y+9, r26	; 0x09
    55b0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    55b2:	6f 81       	ldd	r22, Y+7	; 0x07
    55b4:	78 85       	ldd	r23, Y+8	; 0x08
    55b6:	89 85       	ldd	r24, Y+9	; 0x09
    55b8:	9a 85       	ldd	r25, Y+10	; 0x0a
    55ba:	20 e0       	ldi	r18, 0x00	; 0
    55bc:	30 e0       	ldi	r19, 0x00	; 0
    55be:	40 e8       	ldi	r20, 0x80	; 128
    55c0:	5f e3       	ldi	r21, 0x3F	; 63
    55c2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    55c6:	88 23       	and	r24, r24
    55c8:	2c f4       	brge	.+10     	; 0x55d4 <LeftMotor+0x74>
		__ticks = 1;
    55ca:	81 e0       	ldi	r24, 0x01	; 1
    55cc:	90 e0       	ldi	r25, 0x00	; 0
    55ce:	9e 83       	std	Y+6, r25	; 0x06
    55d0:	8d 83       	std	Y+5, r24	; 0x05
    55d2:	3f c0       	rjmp	.+126    	; 0x5652 <LeftMotor+0xf2>
	else if (__tmp > 65535)
    55d4:	6f 81       	ldd	r22, Y+7	; 0x07
    55d6:	78 85       	ldd	r23, Y+8	; 0x08
    55d8:	89 85       	ldd	r24, Y+9	; 0x09
    55da:	9a 85       	ldd	r25, Y+10	; 0x0a
    55dc:	20 e0       	ldi	r18, 0x00	; 0
    55de:	3f ef       	ldi	r19, 0xFF	; 255
    55e0:	4f e7       	ldi	r20, 0x7F	; 127
    55e2:	57 e4       	ldi	r21, 0x47	; 71
    55e4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    55e8:	18 16       	cp	r1, r24
    55ea:	4c f5       	brge	.+82     	; 0x563e <LeftMotor+0xde>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    55ec:	6b 85       	ldd	r22, Y+11	; 0x0b
    55ee:	7c 85       	ldd	r23, Y+12	; 0x0c
    55f0:	8d 85       	ldd	r24, Y+13	; 0x0d
    55f2:	9e 85       	ldd	r25, Y+14	; 0x0e
    55f4:	20 e0       	ldi	r18, 0x00	; 0
    55f6:	30 e0       	ldi	r19, 0x00	; 0
    55f8:	40 e2       	ldi	r20, 0x20	; 32
    55fa:	51 e4       	ldi	r21, 0x41	; 65
    55fc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5600:	dc 01       	movw	r26, r24
    5602:	cb 01       	movw	r24, r22
    5604:	bc 01       	movw	r22, r24
    5606:	cd 01       	movw	r24, r26
    5608:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    560c:	dc 01       	movw	r26, r24
    560e:	cb 01       	movw	r24, r22
    5610:	9e 83       	std	Y+6, r25	; 0x06
    5612:	8d 83       	std	Y+5, r24	; 0x05
    5614:	0f c0       	rjmp	.+30     	; 0x5634 <LeftMotor+0xd4>
    5616:	88 ec       	ldi	r24, 0xC8	; 200
    5618:	90 e0       	ldi	r25, 0x00	; 0
    561a:	9c 83       	std	Y+4, r25	; 0x04
    561c:	8b 83       	std	Y+3, r24	; 0x03
    561e:	8b 81       	ldd	r24, Y+3	; 0x03
    5620:	9c 81       	ldd	r25, Y+4	; 0x04
    5622:	01 97       	sbiw	r24, 0x01	; 1
    5624:	f1 f7       	brne	.-4      	; 0x5622 <LeftMotor+0xc2>
    5626:	9c 83       	std	Y+4, r25	; 0x04
    5628:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    562a:	8d 81       	ldd	r24, Y+5	; 0x05
    562c:	9e 81       	ldd	r25, Y+6	; 0x06
    562e:	01 97       	sbiw	r24, 0x01	; 1
    5630:	9e 83       	std	Y+6, r25	; 0x06
    5632:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5634:	8d 81       	ldd	r24, Y+5	; 0x05
    5636:	9e 81       	ldd	r25, Y+6	; 0x06
    5638:	00 97       	sbiw	r24, 0x00	; 0
    563a:	69 f7       	brne	.-38     	; 0x5616 <LeftMotor+0xb6>
    563c:	14 c0       	rjmp	.+40     	; 0x5666 <LeftMotor+0x106>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    563e:	6f 81       	ldd	r22, Y+7	; 0x07
    5640:	78 85       	ldd	r23, Y+8	; 0x08
    5642:	89 85       	ldd	r24, Y+9	; 0x09
    5644:	9a 85       	ldd	r25, Y+10	; 0x0a
    5646:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    564a:	dc 01       	movw	r26, r24
    564c:	cb 01       	movw	r24, r22
    564e:	9e 83       	std	Y+6, r25	; 0x06
    5650:	8d 83       	std	Y+5, r24	; 0x05
    5652:	8d 81       	ldd	r24, Y+5	; 0x05
    5654:	9e 81       	ldd	r25, Y+6	; 0x06
    5656:	9a 83       	std	Y+2, r25	; 0x02
    5658:	89 83       	std	Y+1, r24	; 0x01
    565a:	89 81       	ldd	r24, Y+1	; 0x01
    565c:	9a 81       	ldd	r25, Y+2	; 0x02
    565e:	01 97       	sbiw	r24, 0x01	; 1
    5660:	f1 f7       	brne	.-4      	; 0x565e <LeftMotor+0xfe>
    5662:	9a 83       	std	Y+2, r25	; 0x02
    5664:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
	PORTD&=~(1<<4);
    5666:	a2 e3       	ldi	r26, 0x32	; 50
    5668:	b0 e0       	ldi	r27, 0x00	; 0
    566a:	e2 e3       	ldi	r30, 0x32	; 50
    566c:	f0 e0       	ldi	r31, 0x00	; 0
    566e:	80 81       	ld	r24, Z
    5670:	8f 7e       	andi	r24, 0xEF	; 239
    5672:	8c 93       	st	X, r24
}
    5674:	2e 96       	adiw	r28, 0x0e	; 14
    5676:	0f b6       	in	r0, 0x3f	; 63
    5678:	f8 94       	cli
    567a:	de bf       	out	0x3e, r29	; 62
    567c:	0f be       	out	0x3f, r0	; 63
    567e:	cd bf       	out	0x3d, r28	; 61
    5680:	cf 91       	pop	r28
    5682:	df 91       	pop	r29
    5684:	08 95       	ret

00005686 <RightMotor>:
void RightMotor(void)
{
    5686:	df 93       	push	r29
    5688:	cf 93       	push	r28
    568a:	cd b7       	in	r28, 0x3d	; 61
    568c:	de b7       	in	r29, 0x3e	; 62
    568e:	2e 97       	sbiw	r28, 0x0e	; 14
    5690:	0f b6       	in	r0, 0x3f	; 63
    5692:	f8 94       	cli
    5694:	de bf       	out	0x3e, r29	; 62
    5696:	0f be       	out	0x3f, r0	; 63
    5698:	cd bf       	out	0x3d, r28	; 61
	PORTD |=(1<<4);
    569a:	a2 e3       	ldi	r26, 0x32	; 50
    569c:	b0 e0       	ldi	r27, 0x00	; 0
    569e:	e2 e3       	ldi	r30, 0x32	; 50
    56a0:	f0 e0       	ldi	r31, 0x00	; 0
    56a2:	80 81       	ld	r24, Z
    56a4:	80 61       	ori	r24, 0x10	; 16
    56a6:	8c 93       	st	X, r24
    56a8:	80 e0       	ldi	r24, 0x00	; 0
    56aa:	90 e0       	ldi	r25, 0x00	; 0
    56ac:	a0 e8       	ldi	r26, 0x80	; 128
    56ae:	bf e3       	ldi	r27, 0x3F	; 63
    56b0:	8b 87       	std	Y+11, r24	; 0x0b
    56b2:	9c 87       	std	Y+12, r25	; 0x0c
    56b4:	ad 87       	std	Y+13, r26	; 0x0d
    56b6:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    56b8:	6b 85       	ldd	r22, Y+11	; 0x0b
    56ba:	7c 85       	ldd	r23, Y+12	; 0x0c
    56bc:	8d 85       	ldd	r24, Y+13	; 0x0d
    56be:	9e 85       	ldd	r25, Y+14	; 0x0e
    56c0:	20 e0       	ldi	r18, 0x00	; 0
    56c2:	30 e0       	ldi	r19, 0x00	; 0
    56c4:	4a ef       	ldi	r20, 0xFA	; 250
    56c6:	54 e4       	ldi	r21, 0x44	; 68
    56c8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    56cc:	dc 01       	movw	r26, r24
    56ce:	cb 01       	movw	r24, r22
    56d0:	8f 83       	std	Y+7, r24	; 0x07
    56d2:	98 87       	std	Y+8, r25	; 0x08
    56d4:	a9 87       	std	Y+9, r26	; 0x09
    56d6:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    56d8:	6f 81       	ldd	r22, Y+7	; 0x07
    56da:	78 85       	ldd	r23, Y+8	; 0x08
    56dc:	89 85       	ldd	r24, Y+9	; 0x09
    56de:	9a 85       	ldd	r25, Y+10	; 0x0a
    56e0:	20 e0       	ldi	r18, 0x00	; 0
    56e2:	30 e0       	ldi	r19, 0x00	; 0
    56e4:	40 e8       	ldi	r20, 0x80	; 128
    56e6:	5f e3       	ldi	r21, 0x3F	; 63
    56e8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    56ec:	88 23       	and	r24, r24
    56ee:	2c f4       	brge	.+10     	; 0x56fa <RightMotor+0x74>
		__ticks = 1;
    56f0:	81 e0       	ldi	r24, 0x01	; 1
    56f2:	90 e0       	ldi	r25, 0x00	; 0
    56f4:	9e 83       	std	Y+6, r25	; 0x06
    56f6:	8d 83       	std	Y+5, r24	; 0x05
    56f8:	3f c0       	rjmp	.+126    	; 0x5778 <RightMotor+0xf2>
	else if (__tmp > 65535)
    56fa:	6f 81       	ldd	r22, Y+7	; 0x07
    56fc:	78 85       	ldd	r23, Y+8	; 0x08
    56fe:	89 85       	ldd	r24, Y+9	; 0x09
    5700:	9a 85       	ldd	r25, Y+10	; 0x0a
    5702:	20 e0       	ldi	r18, 0x00	; 0
    5704:	3f ef       	ldi	r19, 0xFF	; 255
    5706:	4f e7       	ldi	r20, 0x7F	; 127
    5708:	57 e4       	ldi	r21, 0x47	; 71
    570a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    570e:	18 16       	cp	r1, r24
    5710:	4c f5       	brge	.+82     	; 0x5764 <RightMotor+0xde>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5712:	6b 85       	ldd	r22, Y+11	; 0x0b
    5714:	7c 85       	ldd	r23, Y+12	; 0x0c
    5716:	8d 85       	ldd	r24, Y+13	; 0x0d
    5718:	9e 85       	ldd	r25, Y+14	; 0x0e
    571a:	20 e0       	ldi	r18, 0x00	; 0
    571c:	30 e0       	ldi	r19, 0x00	; 0
    571e:	40 e2       	ldi	r20, 0x20	; 32
    5720:	51 e4       	ldi	r21, 0x41	; 65
    5722:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5726:	dc 01       	movw	r26, r24
    5728:	cb 01       	movw	r24, r22
    572a:	bc 01       	movw	r22, r24
    572c:	cd 01       	movw	r24, r26
    572e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5732:	dc 01       	movw	r26, r24
    5734:	cb 01       	movw	r24, r22
    5736:	9e 83       	std	Y+6, r25	; 0x06
    5738:	8d 83       	std	Y+5, r24	; 0x05
    573a:	0f c0       	rjmp	.+30     	; 0x575a <RightMotor+0xd4>
    573c:	88 ec       	ldi	r24, 0xC8	; 200
    573e:	90 e0       	ldi	r25, 0x00	; 0
    5740:	9c 83       	std	Y+4, r25	; 0x04
    5742:	8b 83       	std	Y+3, r24	; 0x03
    5744:	8b 81       	ldd	r24, Y+3	; 0x03
    5746:	9c 81       	ldd	r25, Y+4	; 0x04
    5748:	01 97       	sbiw	r24, 0x01	; 1
    574a:	f1 f7       	brne	.-4      	; 0x5748 <RightMotor+0xc2>
    574c:	9c 83       	std	Y+4, r25	; 0x04
    574e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5750:	8d 81       	ldd	r24, Y+5	; 0x05
    5752:	9e 81       	ldd	r25, Y+6	; 0x06
    5754:	01 97       	sbiw	r24, 0x01	; 1
    5756:	9e 83       	std	Y+6, r25	; 0x06
    5758:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    575a:	8d 81       	ldd	r24, Y+5	; 0x05
    575c:	9e 81       	ldd	r25, Y+6	; 0x06
    575e:	00 97       	sbiw	r24, 0x00	; 0
    5760:	69 f7       	brne	.-38     	; 0x573c <RightMotor+0xb6>
    5762:	14 c0       	rjmp	.+40     	; 0x578c <RightMotor+0x106>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5764:	6f 81       	ldd	r22, Y+7	; 0x07
    5766:	78 85       	ldd	r23, Y+8	; 0x08
    5768:	89 85       	ldd	r24, Y+9	; 0x09
    576a:	9a 85       	ldd	r25, Y+10	; 0x0a
    576c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5770:	dc 01       	movw	r26, r24
    5772:	cb 01       	movw	r24, r22
    5774:	9e 83       	std	Y+6, r25	; 0x06
    5776:	8d 83       	std	Y+5, r24	; 0x05
    5778:	8d 81       	ldd	r24, Y+5	; 0x05
    577a:	9e 81       	ldd	r25, Y+6	; 0x06
    577c:	9a 83       	std	Y+2, r25	; 0x02
    577e:	89 83       	std	Y+1, r24	; 0x01
    5780:	89 81       	ldd	r24, Y+1	; 0x01
    5782:	9a 81       	ldd	r25, Y+2	; 0x02
    5784:	01 97       	sbiw	r24, 0x01	; 1
    5786:	f1 f7       	brne	.-4      	; 0x5784 <RightMotor+0xfe>
    5788:	9a 83       	std	Y+2, r25	; 0x02
    578a:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
	PORTD&=~(1<<3);
    578c:	a2 e3       	ldi	r26, 0x32	; 50
    578e:	b0 e0       	ldi	r27, 0x00	; 0
    5790:	e2 e3       	ldi	r30, 0x32	; 50
    5792:	f0 e0       	ldi	r31, 0x00	; 0
    5794:	80 81       	ld	r24, Z
    5796:	87 7f       	andi	r24, 0xF7	; 247
    5798:	8c 93       	st	X, r24
}
    579a:	2e 96       	adiw	r28, 0x0e	; 14
    579c:	0f b6       	in	r0, 0x3f	; 63
    579e:	f8 94       	cli
    57a0:	de bf       	out	0x3e, r29	; 62
    57a2:	0f be       	out	0x3f, r0	; 63
    57a4:	cd bf       	out	0x3d, r28	; 61
    57a6:	cf 91       	pop	r28
    57a8:	df 91       	pop	r29
    57aa:	08 95       	ret

000057ac <LCD_arabic>:

void LCD_arabic(unsigned char *pattern,const char location)
{
    57ac:	df 93       	push	r29
    57ae:	cf 93       	push	r28
    57b0:	00 d0       	rcall	.+0      	; 0x57b2 <LCD_arabic+0x6>
    57b2:	00 d0       	rcall	.+0      	; 0x57b4 <LCD_arabic+0x8>
    57b4:	0f 92       	push	r0
    57b6:	cd b7       	in	r28, 0x3d	; 61
    57b8:	de b7       	in	r29, 0x3e	; 62
    57ba:	9c 83       	std	Y+4, r25	; 0x04
    57bc:	8b 83       	std	Y+3, r24	; 0x03
    57be:	6d 83       	std	Y+5, r22	; 0x05
	int i=0;
    57c0:	1a 82       	std	Y+2, r1	; 0x02
    57c2:	19 82       	std	Y+1, r1	; 0x01
	LCD_cmd(0x40 + (location*8));
    57c4:	8d 81       	ldd	r24, Y+5	; 0x05
    57c6:	88 2f       	mov	r24, r24
    57c8:	90 e0       	ldi	r25, 0x00	; 0
    57ca:	08 96       	adiw	r24, 0x08	; 8
    57cc:	88 0f       	add	r24, r24
    57ce:	99 1f       	adc	r25, r25
    57d0:	88 0f       	add	r24, r24
    57d2:	99 1f       	adc	r25, r25
    57d4:	88 0f       	add	r24, r24
    57d6:	99 1f       	adc	r25, r25
    57d8:	0e 94 85 2e 	call	0x5d0a	; 0x5d0a <LCD_cmd>
	for(i=0;i<7;i++)
    57dc:	1a 82       	std	Y+2, r1	; 0x02
    57de:	19 82       	std	Y+1, r1	; 0x01
    57e0:	0f c0       	rjmp	.+30     	; 0x5800 <LCD_arabic+0x54>
	{
		LCD_write(pattern[i]);
    57e2:	29 81       	ldd	r18, Y+1	; 0x01
    57e4:	3a 81       	ldd	r19, Y+2	; 0x02
    57e6:	8b 81       	ldd	r24, Y+3	; 0x03
    57e8:	9c 81       	ldd	r25, Y+4	; 0x04
    57ea:	fc 01       	movw	r30, r24
    57ec:	e2 0f       	add	r30, r18
    57ee:	f3 1f       	adc	r31, r19
    57f0:	80 81       	ld	r24, Z
    57f2:	0e 94 32 2f 	call	0x5e64	; 0x5e64 <LCD_write>

void LCD_arabic(unsigned char *pattern,const char location)
{
	int i=0;
	LCD_cmd(0x40 + (location*8));
	for(i=0;i<7;i++)
    57f6:	89 81       	ldd	r24, Y+1	; 0x01
    57f8:	9a 81       	ldd	r25, Y+2	; 0x02
    57fa:	01 96       	adiw	r24, 0x01	; 1
    57fc:	9a 83       	std	Y+2, r25	; 0x02
    57fe:	89 83       	std	Y+1, r24	; 0x01
    5800:	89 81       	ldd	r24, Y+1	; 0x01
    5802:	9a 81       	ldd	r25, Y+2	; 0x02
    5804:	87 30       	cpi	r24, 0x07	; 7
    5806:	91 05       	cpc	r25, r1
    5808:	64 f3       	brlt	.-40     	; 0x57e2 <LCD_arabic+0x36>
	{
		LCD_write(pattern[i]);
	}
}
    580a:	0f 90       	pop	r0
    580c:	0f 90       	pop	r0
    580e:	0f 90       	pop	r0
    5810:	0f 90       	pop	r0
    5812:	0f 90       	pop	r0
    5814:	cf 91       	pop	r28
    5816:	df 91       	pop	r29
    5818:	08 95       	ret

0000581a <init_LCD>:


void init_LCD(void)
{
    581a:	0f 93       	push	r16
    581c:	1f 93       	push	r17
    581e:	df 93       	push	r29
    5820:	cf 93       	push	r28
    5822:	cd b7       	in	r28, 0x3d	; 61
    5824:	de b7       	in	r29, 0x3e	; 62
    5826:	c6 54       	subi	r28, 0x46	; 70
    5828:	d0 40       	sbci	r29, 0x00	; 0
    582a:	0f b6       	in	r0, 0x3f	; 63
    582c:	f8 94       	cli
    582e:	de bf       	out	0x3e, r29	; 62
    5830:	0f be       	out	0x3f, r0	; 63
    5832:	cd bf       	out	0x3d, r28	; 61
	LCD_cmd(0x38);
    5834:	88 e3       	ldi	r24, 0x38	; 56
    5836:	0e 94 85 2e 	call	0x5d0a	; 0x5d0a <LCD_cmd>
    583a:	fe 01       	movw	r30, r28
    583c:	ed 5b       	subi	r30, 0xBD	; 189
    583e:	ff 4f       	sbci	r31, 0xFF	; 255
    5840:	80 e0       	ldi	r24, 0x00	; 0
    5842:	90 e0       	ldi	r25, 0x00	; 0
    5844:	a0 e2       	ldi	r26, 0x20	; 32
    5846:	b1 e4       	ldi	r27, 0x41	; 65
    5848:	80 83       	st	Z, r24
    584a:	91 83       	std	Z+1, r25	; 0x01
    584c:	a2 83       	std	Z+2, r26	; 0x02
    584e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5850:	8e 01       	movw	r16, r28
    5852:	01 5c       	subi	r16, 0xC1	; 193
    5854:	1f 4f       	sbci	r17, 0xFF	; 255
    5856:	fe 01       	movw	r30, r28
    5858:	ed 5b       	subi	r30, 0xBD	; 189
    585a:	ff 4f       	sbci	r31, 0xFF	; 255
    585c:	60 81       	ld	r22, Z
    585e:	71 81       	ldd	r23, Z+1	; 0x01
    5860:	82 81       	ldd	r24, Z+2	; 0x02
    5862:	93 81       	ldd	r25, Z+3	; 0x03
    5864:	20 e0       	ldi	r18, 0x00	; 0
    5866:	30 e0       	ldi	r19, 0x00	; 0
    5868:	4a ef       	ldi	r20, 0xFA	; 250
    586a:	54 e4       	ldi	r21, 0x44	; 68
    586c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5870:	dc 01       	movw	r26, r24
    5872:	cb 01       	movw	r24, r22
    5874:	f8 01       	movw	r30, r16
    5876:	80 83       	st	Z, r24
    5878:	91 83       	std	Z+1, r25	; 0x01
    587a:	a2 83       	std	Z+2, r26	; 0x02
    587c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    587e:	fe 01       	movw	r30, r28
    5880:	ff 96       	adiw	r30, 0x3f	; 63
    5882:	60 81       	ld	r22, Z
    5884:	71 81       	ldd	r23, Z+1	; 0x01
    5886:	82 81       	ldd	r24, Z+2	; 0x02
    5888:	93 81       	ldd	r25, Z+3	; 0x03
    588a:	20 e0       	ldi	r18, 0x00	; 0
    588c:	30 e0       	ldi	r19, 0x00	; 0
    588e:	40 e8       	ldi	r20, 0x80	; 128
    5890:	5f e3       	ldi	r21, 0x3F	; 63
    5892:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5896:	88 23       	and	r24, r24
    5898:	2c f4       	brge	.+10     	; 0x58a4 <init_LCD+0x8a>
		__ticks = 1;
    589a:	81 e0       	ldi	r24, 0x01	; 1
    589c:	90 e0       	ldi	r25, 0x00	; 0
    589e:	9e af       	std	Y+62, r25	; 0x3e
    58a0:	8d af       	std	Y+61, r24	; 0x3d
    58a2:	46 c0       	rjmp	.+140    	; 0x5930 <init_LCD+0x116>
	else if (__tmp > 65535)
    58a4:	fe 01       	movw	r30, r28
    58a6:	ff 96       	adiw	r30, 0x3f	; 63
    58a8:	60 81       	ld	r22, Z
    58aa:	71 81       	ldd	r23, Z+1	; 0x01
    58ac:	82 81       	ldd	r24, Z+2	; 0x02
    58ae:	93 81       	ldd	r25, Z+3	; 0x03
    58b0:	20 e0       	ldi	r18, 0x00	; 0
    58b2:	3f ef       	ldi	r19, 0xFF	; 255
    58b4:	4f e7       	ldi	r20, 0x7F	; 127
    58b6:	57 e4       	ldi	r21, 0x47	; 71
    58b8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    58bc:	18 16       	cp	r1, r24
    58be:	64 f5       	brge	.+88     	; 0x5918 <init_LCD+0xfe>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    58c0:	fe 01       	movw	r30, r28
    58c2:	ed 5b       	subi	r30, 0xBD	; 189
    58c4:	ff 4f       	sbci	r31, 0xFF	; 255
    58c6:	60 81       	ld	r22, Z
    58c8:	71 81       	ldd	r23, Z+1	; 0x01
    58ca:	82 81       	ldd	r24, Z+2	; 0x02
    58cc:	93 81       	ldd	r25, Z+3	; 0x03
    58ce:	20 e0       	ldi	r18, 0x00	; 0
    58d0:	30 e0       	ldi	r19, 0x00	; 0
    58d2:	40 e2       	ldi	r20, 0x20	; 32
    58d4:	51 e4       	ldi	r21, 0x41	; 65
    58d6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    58da:	dc 01       	movw	r26, r24
    58dc:	cb 01       	movw	r24, r22
    58de:	bc 01       	movw	r22, r24
    58e0:	cd 01       	movw	r24, r26
    58e2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    58e6:	dc 01       	movw	r26, r24
    58e8:	cb 01       	movw	r24, r22
    58ea:	9e af       	std	Y+62, r25	; 0x3e
    58ec:	8d af       	std	Y+61, r24	; 0x3d
    58ee:	0f c0       	rjmp	.+30     	; 0x590e <init_LCD+0xf4>
    58f0:	88 ec       	ldi	r24, 0xC8	; 200
    58f2:	90 e0       	ldi	r25, 0x00	; 0
    58f4:	9c af       	std	Y+60, r25	; 0x3c
    58f6:	8b af       	std	Y+59, r24	; 0x3b
    58f8:	8b ad       	ldd	r24, Y+59	; 0x3b
    58fa:	9c ad       	ldd	r25, Y+60	; 0x3c
    58fc:	01 97       	sbiw	r24, 0x01	; 1
    58fe:	f1 f7       	brne	.-4      	; 0x58fc <init_LCD+0xe2>
    5900:	9c af       	std	Y+60, r25	; 0x3c
    5902:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5904:	8d ad       	ldd	r24, Y+61	; 0x3d
    5906:	9e ad       	ldd	r25, Y+62	; 0x3e
    5908:	01 97       	sbiw	r24, 0x01	; 1
    590a:	9e af       	std	Y+62, r25	; 0x3e
    590c:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    590e:	8d ad       	ldd	r24, Y+61	; 0x3d
    5910:	9e ad       	ldd	r25, Y+62	; 0x3e
    5912:	00 97       	sbiw	r24, 0x00	; 0
    5914:	69 f7       	brne	.-38     	; 0x58f0 <init_LCD+0xd6>
    5916:	16 c0       	rjmp	.+44     	; 0x5944 <init_LCD+0x12a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5918:	fe 01       	movw	r30, r28
    591a:	ff 96       	adiw	r30, 0x3f	; 63
    591c:	60 81       	ld	r22, Z
    591e:	71 81       	ldd	r23, Z+1	; 0x01
    5920:	82 81       	ldd	r24, Z+2	; 0x02
    5922:	93 81       	ldd	r25, Z+3	; 0x03
    5924:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5928:	dc 01       	movw	r26, r24
    592a:	cb 01       	movw	r24, r22
    592c:	9e af       	std	Y+62, r25	; 0x3e
    592e:	8d af       	std	Y+61, r24	; 0x3d
    5930:	8d ad       	ldd	r24, Y+61	; 0x3d
    5932:	9e ad       	ldd	r25, Y+62	; 0x3e
    5934:	9a af       	std	Y+58, r25	; 0x3a
    5936:	89 af       	std	Y+57, r24	; 0x39
    5938:	89 ad       	ldd	r24, Y+57	; 0x39
    593a:	9a ad       	ldd	r25, Y+58	; 0x3a
    593c:	01 97       	sbiw	r24, 0x01	; 1
    593e:	f1 f7       	brne	.-4      	; 0x593c <init_LCD+0x122>
    5940:	9a af       	std	Y+58, r25	; 0x3a
    5942:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(t);
	LCD_cmd(0x01);
    5944:	81 e0       	ldi	r24, 0x01	; 1
    5946:	0e 94 85 2e 	call	0x5d0a	; 0x5d0a <LCD_cmd>
    594a:	80 e0       	ldi	r24, 0x00	; 0
    594c:	90 e0       	ldi	r25, 0x00	; 0
    594e:	a0 e2       	ldi	r26, 0x20	; 32
    5950:	b1 e4       	ldi	r27, 0x41	; 65
    5952:	8d ab       	std	Y+53, r24	; 0x35
    5954:	9e ab       	std	Y+54, r25	; 0x36
    5956:	af ab       	std	Y+55, r26	; 0x37
    5958:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    595a:	6d a9       	ldd	r22, Y+53	; 0x35
    595c:	7e a9       	ldd	r23, Y+54	; 0x36
    595e:	8f a9       	ldd	r24, Y+55	; 0x37
    5960:	98 ad       	ldd	r25, Y+56	; 0x38
    5962:	20 e0       	ldi	r18, 0x00	; 0
    5964:	30 e0       	ldi	r19, 0x00	; 0
    5966:	4a ef       	ldi	r20, 0xFA	; 250
    5968:	54 e4       	ldi	r21, 0x44	; 68
    596a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    596e:	dc 01       	movw	r26, r24
    5970:	cb 01       	movw	r24, r22
    5972:	89 ab       	std	Y+49, r24	; 0x31
    5974:	9a ab       	std	Y+50, r25	; 0x32
    5976:	ab ab       	std	Y+51, r26	; 0x33
    5978:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    597a:	69 a9       	ldd	r22, Y+49	; 0x31
    597c:	7a a9       	ldd	r23, Y+50	; 0x32
    597e:	8b a9       	ldd	r24, Y+51	; 0x33
    5980:	9c a9       	ldd	r25, Y+52	; 0x34
    5982:	20 e0       	ldi	r18, 0x00	; 0
    5984:	30 e0       	ldi	r19, 0x00	; 0
    5986:	40 e8       	ldi	r20, 0x80	; 128
    5988:	5f e3       	ldi	r21, 0x3F	; 63
    598a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    598e:	88 23       	and	r24, r24
    5990:	2c f4       	brge	.+10     	; 0x599c <init_LCD+0x182>
		__ticks = 1;
    5992:	81 e0       	ldi	r24, 0x01	; 1
    5994:	90 e0       	ldi	r25, 0x00	; 0
    5996:	98 ab       	std	Y+48, r25	; 0x30
    5998:	8f a7       	std	Y+47, r24	; 0x2f
    599a:	3f c0       	rjmp	.+126    	; 0x5a1a <init_LCD+0x200>
	else if (__tmp > 65535)
    599c:	69 a9       	ldd	r22, Y+49	; 0x31
    599e:	7a a9       	ldd	r23, Y+50	; 0x32
    59a0:	8b a9       	ldd	r24, Y+51	; 0x33
    59a2:	9c a9       	ldd	r25, Y+52	; 0x34
    59a4:	20 e0       	ldi	r18, 0x00	; 0
    59a6:	3f ef       	ldi	r19, 0xFF	; 255
    59a8:	4f e7       	ldi	r20, 0x7F	; 127
    59aa:	57 e4       	ldi	r21, 0x47	; 71
    59ac:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    59b0:	18 16       	cp	r1, r24
    59b2:	4c f5       	brge	.+82     	; 0x5a06 <init_LCD+0x1ec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    59b4:	6d a9       	ldd	r22, Y+53	; 0x35
    59b6:	7e a9       	ldd	r23, Y+54	; 0x36
    59b8:	8f a9       	ldd	r24, Y+55	; 0x37
    59ba:	98 ad       	ldd	r25, Y+56	; 0x38
    59bc:	20 e0       	ldi	r18, 0x00	; 0
    59be:	30 e0       	ldi	r19, 0x00	; 0
    59c0:	40 e2       	ldi	r20, 0x20	; 32
    59c2:	51 e4       	ldi	r21, 0x41	; 65
    59c4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    59c8:	dc 01       	movw	r26, r24
    59ca:	cb 01       	movw	r24, r22
    59cc:	bc 01       	movw	r22, r24
    59ce:	cd 01       	movw	r24, r26
    59d0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    59d4:	dc 01       	movw	r26, r24
    59d6:	cb 01       	movw	r24, r22
    59d8:	98 ab       	std	Y+48, r25	; 0x30
    59da:	8f a7       	std	Y+47, r24	; 0x2f
    59dc:	0f c0       	rjmp	.+30     	; 0x59fc <init_LCD+0x1e2>
    59de:	88 ec       	ldi	r24, 0xC8	; 200
    59e0:	90 e0       	ldi	r25, 0x00	; 0
    59e2:	9e a7       	std	Y+46, r25	; 0x2e
    59e4:	8d a7       	std	Y+45, r24	; 0x2d
    59e6:	8d a5       	ldd	r24, Y+45	; 0x2d
    59e8:	9e a5       	ldd	r25, Y+46	; 0x2e
    59ea:	01 97       	sbiw	r24, 0x01	; 1
    59ec:	f1 f7       	brne	.-4      	; 0x59ea <init_LCD+0x1d0>
    59ee:	9e a7       	std	Y+46, r25	; 0x2e
    59f0:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    59f2:	8f a5       	ldd	r24, Y+47	; 0x2f
    59f4:	98 a9       	ldd	r25, Y+48	; 0x30
    59f6:	01 97       	sbiw	r24, 0x01	; 1
    59f8:	98 ab       	std	Y+48, r25	; 0x30
    59fa:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    59fc:	8f a5       	ldd	r24, Y+47	; 0x2f
    59fe:	98 a9       	ldd	r25, Y+48	; 0x30
    5a00:	00 97       	sbiw	r24, 0x00	; 0
    5a02:	69 f7       	brne	.-38     	; 0x59de <init_LCD+0x1c4>
    5a04:	14 c0       	rjmp	.+40     	; 0x5a2e <init_LCD+0x214>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5a06:	69 a9       	ldd	r22, Y+49	; 0x31
    5a08:	7a a9       	ldd	r23, Y+50	; 0x32
    5a0a:	8b a9       	ldd	r24, Y+51	; 0x33
    5a0c:	9c a9       	ldd	r25, Y+52	; 0x34
    5a0e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5a12:	dc 01       	movw	r26, r24
    5a14:	cb 01       	movw	r24, r22
    5a16:	98 ab       	std	Y+48, r25	; 0x30
    5a18:	8f a7       	std	Y+47, r24	; 0x2f
    5a1a:	8f a5       	ldd	r24, Y+47	; 0x2f
    5a1c:	98 a9       	ldd	r25, Y+48	; 0x30
    5a1e:	9c a7       	std	Y+44, r25	; 0x2c
    5a20:	8b a7       	std	Y+43, r24	; 0x2b
    5a22:	8b a5       	ldd	r24, Y+43	; 0x2b
    5a24:	9c a5       	ldd	r25, Y+44	; 0x2c
    5a26:	01 97       	sbiw	r24, 0x01	; 1
    5a28:	f1 f7       	brne	.-4      	; 0x5a26 <init_LCD+0x20c>
    5a2a:	9c a7       	std	Y+44, r25	; 0x2c
    5a2c:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(t);
	LCD_cmd(0x02);
    5a2e:	82 e0       	ldi	r24, 0x02	; 2
    5a30:	0e 94 85 2e 	call	0x5d0a	; 0x5d0a <LCD_cmd>
    5a34:	80 e0       	ldi	r24, 0x00	; 0
    5a36:	90 e0       	ldi	r25, 0x00	; 0
    5a38:	a0 e2       	ldi	r26, 0x20	; 32
    5a3a:	b1 e4       	ldi	r27, 0x41	; 65
    5a3c:	8f a3       	std	Y+39, r24	; 0x27
    5a3e:	98 a7       	std	Y+40, r25	; 0x28
    5a40:	a9 a7       	std	Y+41, r26	; 0x29
    5a42:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5a44:	6f a1       	ldd	r22, Y+39	; 0x27
    5a46:	78 a5       	ldd	r23, Y+40	; 0x28
    5a48:	89 a5       	ldd	r24, Y+41	; 0x29
    5a4a:	9a a5       	ldd	r25, Y+42	; 0x2a
    5a4c:	20 e0       	ldi	r18, 0x00	; 0
    5a4e:	30 e0       	ldi	r19, 0x00	; 0
    5a50:	4a ef       	ldi	r20, 0xFA	; 250
    5a52:	54 e4       	ldi	r21, 0x44	; 68
    5a54:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5a58:	dc 01       	movw	r26, r24
    5a5a:	cb 01       	movw	r24, r22
    5a5c:	8b a3       	std	Y+35, r24	; 0x23
    5a5e:	9c a3       	std	Y+36, r25	; 0x24
    5a60:	ad a3       	std	Y+37, r26	; 0x25
    5a62:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    5a64:	6b a1       	ldd	r22, Y+35	; 0x23
    5a66:	7c a1       	ldd	r23, Y+36	; 0x24
    5a68:	8d a1       	ldd	r24, Y+37	; 0x25
    5a6a:	9e a1       	ldd	r25, Y+38	; 0x26
    5a6c:	20 e0       	ldi	r18, 0x00	; 0
    5a6e:	30 e0       	ldi	r19, 0x00	; 0
    5a70:	40 e8       	ldi	r20, 0x80	; 128
    5a72:	5f e3       	ldi	r21, 0x3F	; 63
    5a74:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5a78:	88 23       	and	r24, r24
    5a7a:	2c f4       	brge	.+10     	; 0x5a86 <init_LCD+0x26c>
		__ticks = 1;
    5a7c:	81 e0       	ldi	r24, 0x01	; 1
    5a7e:	90 e0       	ldi	r25, 0x00	; 0
    5a80:	9a a3       	std	Y+34, r25	; 0x22
    5a82:	89 a3       	std	Y+33, r24	; 0x21
    5a84:	3f c0       	rjmp	.+126    	; 0x5b04 <init_LCD+0x2ea>
	else if (__tmp > 65535)
    5a86:	6b a1       	ldd	r22, Y+35	; 0x23
    5a88:	7c a1       	ldd	r23, Y+36	; 0x24
    5a8a:	8d a1       	ldd	r24, Y+37	; 0x25
    5a8c:	9e a1       	ldd	r25, Y+38	; 0x26
    5a8e:	20 e0       	ldi	r18, 0x00	; 0
    5a90:	3f ef       	ldi	r19, 0xFF	; 255
    5a92:	4f e7       	ldi	r20, 0x7F	; 127
    5a94:	57 e4       	ldi	r21, 0x47	; 71
    5a96:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5a9a:	18 16       	cp	r1, r24
    5a9c:	4c f5       	brge	.+82     	; 0x5af0 <init_LCD+0x2d6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5a9e:	6f a1       	ldd	r22, Y+39	; 0x27
    5aa0:	78 a5       	ldd	r23, Y+40	; 0x28
    5aa2:	89 a5       	ldd	r24, Y+41	; 0x29
    5aa4:	9a a5       	ldd	r25, Y+42	; 0x2a
    5aa6:	20 e0       	ldi	r18, 0x00	; 0
    5aa8:	30 e0       	ldi	r19, 0x00	; 0
    5aaa:	40 e2       	ldi	r20, 0x20	; 32
    5aac:	51 e4       	ldi	r21, 0x41	; 65
    5aae:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5ab2:	dc 01       	movw	r26, r24
    5ab4:	cb 01       	movw	r24, r22
    5ab6:	bc 01       	movw	r22, r24
    5ab8:	cd 01       	movw	r24, r26
    5aba:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5abe:	dc 01       	movw	r26, r24
    5ac0:	cb 01       	movw	r24, r22
    5ac2:	9a a3       	std	Y+34, r25	; 0x22
    5ac4:	89 a3       	std	Y+33, r24	; 0x21
    5ac6:	0f c0       	rjmp	.+30     	; 0x5ae6 <init_LCD+0x2cc>
    5ac8:	88 ec       	ldi	r24, 0xC8	; 200
    5aca:	90 e0       	ldi	r25, 0x00	; 0
    5acc:	98 a3       	std	Y+32, r25	; 0x20
    5ace:	8f 8f       	std	Y+31, r24	; 0x1f
    5ad0:	8f 8d       	ldd	r24, Y+31	; 0x1f
    5ad2:	98 a1       	ldd	r25, Y+32	; 0x20
    5ad4:	01 97       	sbiw	r24, 0x01	; 1
    5ad6:	f1 f7       	brne	.-4      	; 0x5ad4 <init_LCD+0x2ba>
    5ad8:	98 a3       	std	Y+32, r25	; 0x20
    5ada:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5adc:	89 a1       	ldd	r24, Y+33	; 0x21
    5ade:	9a a1       	ldd	r25, Y+34	; 0x22
    5ae0:	01 97       	sbiw	r24, 0x01	; 1
    5ae2:	9a a3       	std	Y+34, r25	; 0x22
    5ae4:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5ae6:	89 a1       	ldd	r24, Y+33	; 0x21
    5ae8:	9a a1       	ldd	r25, Y+34	; 0x22
    5aea:	00 97       	sbiw	r24, 0x00	; 0
    5aec:	69 f7       	brne	.-38     	; 0x5ac8 <init_LCD+0x2ae>
    5aee:	14 c0       	rjmp	.+40     	; 0x5b18 <init_LCD+0x2fe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5af0:	6b a1       	ldd	r22, Y+35	; 0x23
    5af2:	7c a1       	ldd	r23, Y+36	; 0x24
    5af4:	8d a1       	ldd	r24, Y+37	; 0x25
    5af6:	9e a1       	ldd	r25, Y+38	; 0x26
    5af8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5afc:	dc 01       	movw	r26, r24
    5afe:	cb 01       	movw	r24, r22
    5b00:	9a a3       	std	Y+34, r25	; 0x22
    5b02:	89 a3       	std	Y+33, r24	; 0x21
    5b04:	89 a1       	ldd	r24, Y+33	; 0x21
    5b06:	9a a1       	ldd	r25, Y+34	; 0x22
    5b08:	9e 8f       	std	Y+30, r25	; 0x1e
    5b0a:	8d 8f       	std	Y+29, r24	; 0x1d
    5b0c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    5b0e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    5b10:	01 97       	sbiw	r24, 0x01	; 1
    5b12:	f1 f7       	brne	.-4      	; 0x5b10 <init_LCD+0x2f6>
    5b14:	9e 8f       	std	Y+30, r25	; 0x1e
    5b16:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(t);
	LCD_cmd(0x06);
    5b18:	86 e0       	ldi	r24, 0x06	; 6
    5b1a:	0e 94 85 2e 	call	0x5d0a	; 0x5d0a <LCD_cmd>
    5b1e:	80 e0       	ldi	r24, 0x00	; 0
    5b20:	90 e0       	ldi	r25, 0x00	; 0
    5b22:	a0 e2       	ldi	r26, 0x20	; 32
    5b24:	b1 e4       	ldi	r27, 0x41	; 65
    5b26:	89 8f       	std	Y+25, r24	; 0x19
    5b28:	9a 8f       	std	Y+26, r25	; 0x1a
    5b2a:	ab 8f       	std	Y+27, r26	; 0x1b
    5b2c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5b2e:	69 8d       	ldd	r22, Y+25	; 0x19
    5b30:	7a 8d       	ldd	r23, Y+26	; 0x1a
    5b32:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5b34:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5b36:	20 e0       	ldi	r18, 0x00	; 0
    5b38:	30 e0       	ldi	r19, 0x00	; 0
    5b3a:	4a ef       	ldi	r20, 0xFA	; 250
    5b3c:	54 e4       	ldi	r21, 0x44	; 68
    5b3e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5b42:	dc 01       	movw	r26, r24
    5b44:	cb 01       	movw	r24, r22
    5b46:	8d 8b       	std	Y+21, r24	; 0x15
    5b48:	9e 8b       	std	Y+22, r25	; 0x16
    5b4a:	af 8b       	std	Y+23, r26	; 0x17
    5b4c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    5b4e:	6d 89       	ldd	r22, Y+21	; 0x15
    5b50:	7e 89       	ldd	r23, Y+22	; 0x16
    5b52:	8f 89       	ldd	r24, Y+23	; 0x17
    5b54:	98 8d       	ldd	r25, Y+24	; 0x18
    5b56:	20 e0       	ldi	r18, 0x00	; 0
    5b58:	30 e0       	ldi	r19, 0x00	; 0
    5b5a:	40 e8       	ldi	r20, 0x80	; 128
    5b5c:	5f e3       	ldi	r21, 0x3F	; 63
    5b5e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5b62:	88 23       	and	r24, r24
    5b64:	2c f4       	brge	.+10     	; 0x5b70 <init_LCD+0x356>
		__ticks = 1;
    5b66:	81 e0       	ldi	r24, 0x01	; 1
    5b68:	90 e0       	ldi	r25, 0x00	; 0
    5b6a:	9c 8b       	std	Y+20, r25	; 0x14
    5b6c:	8b 8b       	std	Y+19, r24	; 0x13
    5b6e:	3f c0       	rjmp	.+126    	; 0x5bee <init_LCD+0x3d4>
	else if (__tmp > 65535)
    5b70:	6d 89       	ldd	r22, Y+21	; 0x15
    5b72:	7e 89       	ldd	r23, Y+22	; 0x16
    5b74:	8f 89       	ldd	r24, Y+23	; 0x17
    5b76:	98 8d       	ldd	r25, Y+24	; 0x18
    5b78:	20 e0       	ldi	r18, 0x00	; 0
    5b7a:	3f ef       	ldi	r19, 0xFF	; 255
    5b7c:	4f e7       	ldi	r20, 0x7F	; 127
    5b7e:	57 e4       	ldi	r21, 0x47	; 71
    5b80:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5b84:	18 16       	cp	r1, r24
    5b86:	4c f5       	brge	.+82     	; 0x5bda <init_LCD+0x3c0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5b88:	69 8d       	ldd	r22, Y+25	; 0x19
    5b8a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    5b8c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5b8e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5b90:	20 e0       	ldi	r18, 0x00	; 0
    5b92:	30 e0       	ldi	r19, 0x00	; 0
    5b94:	40 e2       	ldi	r20, 0x20	; 32
    5b96:	51 e4       	ldi	r21, 0x41	; 65
    5b98:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5b9c:	dc 01       	movw	r26, r24
    5b9e:	cb 01       	movw	r24, r22
    5ba0:	bc 01       	movw	r22, r24
    5ba2:	cd 01       	movw	r24, r26
    5ba4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5ba8:	dc 01       	movw	r26, r24
    5baa:	cb 01       	movw	r24, r22
    5bac:	9c 8b       	std	Y+20, r25	; 0x14
    5bae:	8b 8b       	std	Y+19, r24	; 0x13
    5bb0:	0f c0       	rjmp	.+30     	; 0x5bd0 <init_LCD+0x3b6>
    5bb2:	88 ec       	ldi	r24, 0xC8	; 200
    5bb4:	90 e0       	ldi	r25, 0x00	; 0
    5bb6:	9a 8b       	std	Y+18, r25	; 0x12
    5bb8:	89 8b       	std	Y+17, r24	; 0x11
    5bba:	89 89       	ldd	r24, Y+17	; 0x11
    5bbc:	9a 89       	ldd	r25, Y+18	; 0x12
    5bbe:	01 97       	sbiw	r24, 0x01	; 1
    5bc0:	f1 f7       	brne	.-4      	; 0x5bbe <init_LCD+0x3a4>
    5bc2:	9a 8b       	std	Y+18, r25	; 0x12
    5bc4:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5bc6:	8b 89       	ldd	r24, Y+19	; 0x13
    5bc8:	9c 89       	ldd	r25, Y+20	; 0x14
    5bca:	01 97       	sbiw	r24, 0x01	; 1
    5bcc:	9c 8b       	std	Y+20, r25	; 0x14
    5bce:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5bd0:	8b 89       	ldd	r24, Y+19	; 0x13
    5bd2:	9c 89       	ldd	r25, Y+20	; 0x14
    5bd4:	00 97       	sbiw	r24, 0x00	; 0
    5bd6:	69 f7       	brne	.-38     	; 0x5bb2 <init_LCD+0x398>
    5bd8:	14 c0       	rjmp	.+40     	; 0x5c02 <init_LCD+0x3e8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5bda:	6d 89       	ldd	r22, Y+21	; 0x15
    5bdc:	7e 89       	ldd	r23, Y+22	; 0x16
    5bde:	8f 89       	ldd	r24, Y+23	; 0x17
    5be0:	98 8d       	ldd	r25, Y+24	; 0x18
    5be2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5be6:	dc 01       	movw	r26, r24
    5be8:	cb 01       	movw	r24, r22
    5bea:	9c 8b       	std	Y+20, r25	; 0x14
    5bec:	8b 8b       	std	Y+19, r24	; 0x13
    5bee:	8b 89       	ldd	r24, Y+19	; 0x13
    5bf0:	9c 89       	ldd	r25, Y+20	; 0x14
    5bf2:	98 8b       	std	Y+16, r25	; 0x10
    5bf4:	8f 87       	std	Y+15, r24	; 0x0f
    5bf6:	8f 85       	ldd	r24, Y+15	; 0x0f
    5bf8:	98 89       	ldd	r25, Y+16	; 0x10
    5bfa:	01 97       	sbiw	r24, 0x01	; 1
    5bfc:	f1 f7       	brne	.-4      	; 0x5bfa <init_LCD+0x3e0>
    5bfe:	98 8b       	std	Y+16, r25	; 0x10
    5c00:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(t);
	LCD_cmd(0x80);
    5c02:	80 e8       	ldi	r24, 0x80	; 128
    5c04:	0e 94 85 2e 	call	0x5d0a	; 0x5d0a <LCD_cmd>
    5c08:	80 e0       	ldi	r24, 0x00	; 0
    5c0a:	90 e0       	ldi	r25, 0x00	; 0
    5c0c:	a0 e2       	ldi	r26, 0x20	; 32
    5c0e:	b1 e4       	ldi	r27, 0x41	; 65
    5c10:	8b 87       	std	Y+11, r24	; 0x0b
    5c12:	9c 87       	std	Y+12, r25	; 0x0c
    5c14:	ad 87       	std	Y+13, r26	; 0x0d
    5c16:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5c18:	6b 85       	ldd	r22, Y+11	; 0x0b
    5c1a:	7c 85       	ldd	r23, Y+12	; 0x0c
    5c1c:	8d 85       	ldd	r24, Y+13	; 0x0d
    5c1e:	9e 85       	ldd	r25, Y+14	; 0x0e
    5c20:	20 e0       	ldi	r18, 0x00	; 0
    5c22:	30 e0       	ldi	r19, 0x00	; 0
    5c24:	4a ef       	ldi	r20, 0xFA	; 250
    5c26:	54 e4       	ldi	r21, 0x44	; 68
    5c28:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5c2c:	dc 01       	movw	r26, r24
    5c2e:	cb 01       	movw	r24, r22
    5c30:	8f 83       	std	Y+7, r24	; 0x07
    5c32:	98 87       	std	Y+8, r25	; 0x08
    5c34:	a9 87       	std	Y+9, r26	; 0x09
    5c36:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    5c38:	6f 81       	ldd	r22, Y+7	; 0x07
    5c3a:	78 85       	ldd	r23, Y+8	; 0x08
    5c3c:	89 85       	ldd	r24, Y+9	; 0x09
    5c3e:	9a 85       	ldd	r25, Y+10	; 0x0a
    5c40:	20 e0       	ldi	r18, 0x00	; 0
    5c42:	30 e0       	ldi	r19, 0x00	; 0
    5c44:	40 e8       	ldi	r20, 0x80	; 128
    5c46:	5f e3       	ldi	r21, 0x3F	; 63
    5c48:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5c4c:	88 23       	and	r24, r24
    5c4e:	2c f4       	brge	.+10     	; 0x5c5a <init_LCD+0x440>
		__ticks = 1;
    5c50:	81 e0       	ldi	r24, 0x01	; 1
    5c52:	90 e0       	ldi	r25, 0x00	; 0
    5c54:	9e 83       	std	Y+6, r25	; 0x06
    5c56:	8d 83       	std	Y+5, r24	; 0x05
    5c58:	3f c0       	rjmp	.+126    	; 0x5cd8 <init_LCD+0x4be>
	else if (__tmp > 65535)
    5c5a:	6f 81       	ldd	r22, Y+7	; 0x07
    5c5c:	78 85       	ldd	r23, Y+8	; 0x08
    5c5e:	89 85       	ldd	r24, Y+9	; 0x09
    5c60:	9a 85       	ldd	r25, Y+10	; 0x0a
    5c62:	20 e0       	ldi	r18, 0x00	; 0
    5c64:	3f ef       	ldi	r19, 0xFF	; 255
    5c66:	4f e7       	ldi	r20, 0x7F	; 127
    5c68:	57 e4       	ldi	r21, 0x47	; 71
    5c6a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5c6e:	18 16       	cp	r1, r24
    5c70:	4c f5       	brge	.+82     	; 0x5cc4 <init_LCD+0x4aa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5c72:	6b 85       	ldd	r22, Y+11	; 0x0b
    5c74:	7c 85       	ldd	r23, Y+12	; 0x0c
    5c76:	8d 85       	ldd	r24, Y+13	; 0x0d
    5c78:	9e 85       	ldd	r25, Y+14	; 0x0e
    5c7a:	20 e0       	ldi	r18, 0x00	; 0
    5c7c:	30 e0       	ldi	r19, 0x00	; 0
    5c7e:	40 e2       	ldi	r20, 0x20	; 32
    5c80:	51 e4       	ldi	r21, 0x41	; 65
    5c82:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5c86:	dc 01       	movw	r26, r24
    5c88:	cb 01       	movw	r24, r22
    5c8a:	bc 01       	movw	r22, r24
    5c8c:	cd 01       	movw	r24, r26
    5c8e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5c92:	dc 01       	movw	r26, r24
    5c94:	cb 01       	movw	r24, r22
    5c96:	9e 83       	std	Y+6, r25	; 0x06
    5c98:	8d 83       	std	Y+5, r24	; 0x05
    5c9a:	0f c0       	rjmp	.+30     	; 0x5cba <init_LCD+0x4a0>
    5c9c:	88 ec       	ldi	r24, 0xC8	; 200
    5c9e:	90 e0       	ldi	r25, 0x00	; 0
    5ca0:	9c 83       	std	Y+4, r25	; 0x04
    5ca2:	8b 83       	std	Y+3, r24	; 0x03
    5ca4:	8b 81       	ldd	r24, Y+3	; 0x03
    5ca6:	9c 81       	ldd	r25, Y+4	; 0x04
    5ca8:	01 97       	sbiw	r24, 0x01	; 1
    5caa:	f1 f7       	brne	.-4      	; 0x5ca8 <init_LCD+0x48e>
    5cac:	9c 83       	std	Y+4, r25	; 0x04
    5cae:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5cb0:	8d 81       	ldd	r24, Y+5	; 0x05
    5cb2:	9e 81       	ldd	r25, Y+6	; 0x06
    5cb4:	01 97       	sbiw	r24, 0x01	; 1
    5cb6:	9e 83       	std	Y+6, r25	; 0x06
    5cb8:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5cba:	8d 81       	ldd	r24, Y+5	; 0x05
    5cbc:	9e 81       	ldd	r25, Y+6	; 0x06
    5cbe:	00 97       	sbiw	r24, 0x00	; 0
    5cc0:	69 f7       	brne	.-38     	; 0x5c9c <init_LCD+0x482>
    5cc2:	14 c0       	rjmp	.+40     	; 0x5cec <init_LCD+0x4d2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5cc4:	6f 81       	ldd	r22, Y+7	; 0x07
    5cc6:	78 85       	ldd	r23, Y+8	; 0x08
    5cc8:	89 85       	ldd	r24, Y+9	; 0x09
    5cca:	9a 85       	ldd	r25, Y+10	; 0x0a
    5ccc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5cd0:	dc 01       	movw	r26, r24
    5cd2:	cb 01       	movw	r24, r22
    5cd4:	9e 83       	std	Y+6, r25	; 0x06
    5cd6:	8d 83       	std	Y+5, r24	; 0x05
    5cd8:	8d 81       	ldd	r24, Y+5	; 0x05
    5cda:	9e 81       	ldd	r25, Y+6	; 0x06
    5cdc:	9a 83       	std	Y+2, r25	; 0x02
    5cde:	89 83       	std	Y+1, r24	; 0x01
    5ce0:	89 81       	ldd	r24, Y+1	; 0x01
    5ce2:	9a 81       	ldd	r25, Y+2	; 0x02
    5ce4:	01 97       	sbiw	r24, 0x01	; 1
    5ce6:	f1 f7       	brne	.-4      	; 0x5ce4 <init_LCD+0x4ca>
    5ce8:	9a 83       	std	Y+2, r25	; 0x02
    5cea:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(t);
	LCD_cmd(0x0C);
    5cec:	8c e0       	ldi	r24, 0x0C	; 12
    5cee:	0e 94 85 2e 	call	0x5d0a	; 0x5d0a <LCD_cmd>
}
    5cf2:	ca 5b       	subi	r28, 0xBA	; 186
    5cf4:	df 4f       	sbci	r29, 0xFF	; 255
    5cf6:	0f b6       	in	r0, 0x3f	; 63
    5cf8:	f8 94       	cli
    5cfa:	de bf       	out	0x3e, r29	; 62
    5cfc:	0f be       	out	0x3f, r0	; 63
    5cfe:	cd bf       	out	0x3d, r28	; 61
    5d00:	cf 91       	pop	r28
    5d02:	df 91       	pop	r29
    5d04:	1f 91       	pop	r17
    5d06:	0f 91       	pop	r16
    5d08:	08 95       	ret

00005d0a <LCD_cmd>:


void LCD_cmd(unsigned char cmd)
{
    5d0a:	df 93       	push	r29
    5d0c:	cf 93       	push	r28
    5d0e:	cd b7       	in	r28, 0x3d	; 61
    5d10:	de b7       	in	r29, 0x3e	; 62
    5d12:	2f 97       	sbiw	r28, 0x0f	; 15
    5d14:	0f b6       	in	r0, 0x3f	; 63
    5d16:	f8 94       	cli
    5d18:	de bf       	out	0x3e, r29	; 62
    5d1a:	0f be       	out	0x3f, r0	; 63
    5d1c:	cd bf       	out	0x3d, r28	; 61
    5d1e:	8f 87       	std	Y+15, r24	; 0x0f
	LCD_DATA=cmd;
    5d20:	e8 e3       	ldi	r30, 0x38	; 56
    5d22:	f0 e0       	ldi	r31, 0x00	; 0
    5d24:	8f 85       	ldd	r24, Y+15	; 0x0f
    5d26:	80 83       	st	Z, r24
	PORTD &=~(1<<rs);
    5d28:	a2 e3       	ldi	r26, 0x32	; 50
    5d2a:	b0 e0       	ldi	r27, 0x00	; 0
    5d2c:	e2 e3       	ldi	r30, 0x32	; 50
    5d2e:	f0 e0       	ldi	r31, 0x00	; 0
    5d30:	80 81       	ld	r24, Z
    5d32:	8f 77       	andi	r24, 0x7F	; 127
    5d34:	8c 93       	st	X, r24
	PORTD &=~(1<<rw);
    5d36:	a2 e3       	ldi	r26, 0x32	; 50
    5d38:	b0 e0       	ldi	r27, 0x00	; 0
    5d3a:	e2 e3       	ldi	r30, 0x32	; 50
    5d3c:	f0 e0       	ldi	r31, 0x00	; 0
    5d3e:	80 81       	ld	r24, Z
    5d40:	8f 7b       	andi	r24, 0xBF	; 191
    5d42:	8c 93       	st	X, r24
	PORTD|=(1<<en);
    5d44:	a2 e3       	ldi	r26, 0x32	; 50
    5d46:	b0 e0       	ldi	r27, 0x00	; 0
    5d48:	e2 e3       	ldi	r30, 0x32	; 50
    5d4a:	f0 e0       	ldi	r31, 0x00	; 0
    5d4c:	80 81       	ld	r24, Z
    5d4e:	80 62       	ori	r24, 0x20	; 32
    5d50:	8c 93       	st	X, r24
    5d52:	80 e0       	ldi	r24, 0x00	; 0
    5d54:	90 e0       	ldi	r25, 0x00	; 0
    5d56:	a0 e8       	ldi	r26, 0x80	; 128
    5d58:	bf e3       	ldi	r27, 0x3F	; 63
    5d5a:	8b 87       	std	Y+11, r24	; 0x0b
    5d5c:	9c 87       	std	Y+12, r25	; 0x0c
    5d5e:	ad 87       	std	Y+13, r26	; 0x0d
    5d60:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5d62:	6b 85       	ldd	r22, Y+11	; 0x0b
    5d64:	7c 85       	ldd	r23, Y+12	; 0x0c
    5d66:	8d 85       	ldd	r24, Y+13	; 0x0d
    5d68:	9e 85       	ldd	r25, Y+14	; 0x0e
    5d6a:	20 e0       	ldi	r18, 0x00	; 0
    5d6c:	30 e0       	ldi	r19, 0x00	; 0
    5d6e:	4a ef       	ldi	r20, 0xFA	; 250
    5d70:	54 e4       	ldi	r21, 0x44	; 68
    5d72:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5d76:	dc 01       	movw	r26, r24
    5d78:	cb 01       	movw	r24, r22
    5d7a:	8f 83       	std	Y+7, r24	; 0x07
    5d7c:	98 87       	std	Y+8, r25	; 0x08
    5d7e:	a9 87       	std	Y+9, r26	; 0x09
    5d80:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    5d82:	6f 81       	ldd	r22, Y+7	; 0x07
    5d84:	78 85       	ldd	r23, Y+8	; 0x08
    5d86:	89 85       	ldd	r24, Y+9	; 0x09
    5d88:	9a 85       	ldd	r25, Y+10	; 0x0a
    5d8a:	20 e0       	ldi	r18, 0x00	; 0
    5d8c:	30 e0       	ldi	r19, 0x00	; 0
    5d8e:	40 e8       	ldi	r20, 0x80	; 128
    5d90:	5f e3       	ldi	r21, 0x3F	; 63
    5d92:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5d96:	88 23       	and	r24, r24
    5d98:	2c f4       	brge	.+10     	; 0x5da4 <LCD_cmd+0x9a>
		__ticks = 1;
    5d9a:	81 e0       	ldi	r24, 0x01	; 1
    5d9c:	90 e0       	ldi	r25, 0x00	; 0
    5d9e:	9e 83       	std	Y+6, r25	; 0x06
    5da0:	8d 83       	std	Y+5, r24	; 0x05
    5da2:	3f c0       	rjmp	.+126    	; 0x5e22 <LCD_cmd+0x118>
	else if (__tmp > 65535)
    5da4:	6f 81       	ldd	r22, Y+7	; 0x07
    5da6:	78 85       	ldd	r23, Y+8	; 0x08
    5da8:	89 85       	ldd	r24, Y+9	; 0x09
    5daa:	9a 85       	ldd	r25, Y+10	; 0x0a
    5dac:	20 e0       	ldi	r18, 0x00	; 0
    5dae:	3f ef       	ldi	r19, 0xFF	; 255
    5db0:	4f e7       	ldi	r20, 0x7F	; 127
    5db2:	57 e4       	ldi	r21, 0x47	; 71
    5db4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5db8:	18 16       	cp	r1, r24
    5dba:	4c f5       	brge	.+82     	; 0x5e0e <LCD_cmd+0x104>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5dbc:	6b 85       	ldd	r22, Y+11	; 0x0b
    5dbe:	7c 85       	ldd	r23, Y+12	; 0x0c
    5dc0:	8d 85       	ldd	r24, Y+13	; 0x0d
    5dc2:	9e 85       	ldd	r25, Y+14	; 0x0e
    5dc4:	20 e0       	ldi	r18, 0x00	; 0
    5dc6:	30 e0       	ldi	r19, 0x00	; 0
    5dc8:	40 e2       	ldi	r20, 0x20	; 32
    5dca:	51 e4       	ldi	r21, 0x41	; 65
    5dcc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5dd0:	dc 01       	movw	r26, r24
    5dd2:	cb 01       	movw	r24, r22
    5dd4:	bc 01       	movw	r22, r24
    5dd6:	cd 01       	movw	r24, r26
    5dd8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5ddc:	dc 01       	movw	r26, r24
    5dde:	cb 01       	movw	r24, r22
    5de0:	9e 83       	std	Y+6, r25	; 0x06
    5de2:	8d 83       	std	Y+5, r24	; 0x05
    5de4:	0f c0       	rjmp	.+30     	; 0x5e04 <LCD_cmd+0xfa>
    5de6:	88 ec       	ldi	r24, 0xC8	; 200
    5de8:	90 e0       	ldi	r25, 0x00	; 0
    5dea:	9c 83       	std	Y+4, r25	; 0x04
    5dec:	8b 83       	std	Y+3, r24	; 0x03
    5dee:	8b 81       	ldd	r24, Y+3	; 0x03
    5df0:	9c 81       	ldd	r25, Y+4	; 0x04
    5df2:	01 97       	sbiw	r24, 0x01	; 1
    5df4:	f1 f7       	brne	.-4      	; 0x5df2 <LCD_cmd+0xe8>
    5df6:	9c 83       	std	Y+4, r25	; 0x04
    5df8:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5dfa:	8d 81       	ldd	r24, Y+5	; 0x05
    5dfc:	9e 81       	ldd	r25, Y+6	; 0x06
    5dfe:	01 97       	sbiw	r24, 0x01	; 1
    5e00:	9e 83       	std	Y+6, r25	; 0x06
    5e02:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5e04:	8d 81       	ldd	r24, Y+5	; 0x05
    5e06:	9e 81       	ldd	r25, Y+6	; 0x06
    5e08:	00 97       	sbiw	r24, 0x00	; 0
    5e0a:	69 f7       	brne	.-38     	; 0x5de6 <LCD_cmd+0xdc>
    5e0c:	14 c0       	rjmp	.+40     	; 0x5e36 <LCD_cmd+0x12c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5e0e:	6f 81       	ldd	r22, Y+7	; 0x07
    5e10:	78 85       	ldd	r23, Y+8	; 0x08
    5e12:	89 85       	ldd	r24, Y+9	; 0x09
    5e14:	9a 85       	ldd	r25, Y+10	; 0x0a
    5e16:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5e1a:	dc 01       	movw	r26, r24
    5e1c:	cb 01       	movw	r24, r22
    5e1e:	9e 83       	std	Y+6, r25	; 0x06
    5e20:	8d 83       	std	Y+5, r24	; 0x05
    5e22:	8d 81       	ldd	r24, Y+5	; 0x05
    5e24:	9e 81       	ldd	r25, Y+6	; 0x06
    5e26:	9a 83       	std	Y+2, r25	; 0x02
    5e28:	89 83       	std	Y+1, r24	; 0x01
    5e2a:	89 81       	ldd	r24, Y+1	; 0x01
    5e2c:	9a 81       	ldd	r25, Y+2	; 0x02
    5e2e:	01 97       	sbiw	r24, 0x01	; 1
    5e30:	f1 f7       	brne	.-4      	; 0x5e2e <LCD_cmd+0x124>
    5e32:	9a 83       	std	Y+2, r25	; 0x02
    5e34:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
	PORTD &=~(1<<en);
    5e36:	a2 e3       	ldi	r26, 0x32	; 50
    5e38:	b0 e0       	ldi	r27, 0x00	; 0
    5e3a:	e2 e3       	ldi	r30, 0x32	; 50
    5e3c:	f0 e0       	ldi	r31, 0x00	; 0
    5e3e:	80 81       	ld	r24, Z
    5e40:	8f 7d       	andi	r24, 0xDF	; 223
    5e42:	8c 93       	st	X, r24
	PORTD |=(1<<en);
    5e44:	a2 e3       	ldi	r26, 0x32	; 50
    5e46:	b0 e0       	ldi	r27, 0x00	; 0
    5e48:	e2 e3       	ldi	r30, 0x32	; 50
    5e4a:	f0 e0       	ldi	r31, 0x00	; 0
    5e4c:	80 81       	ld	r24, Z
    5e4e:	80 62       	ori	r24, 0x20	; 32
    5e50:	8c 93       	st	X, r24

}
    5e52:	2f 96       	adiw	r28, 0x0f	; 15
    5e54:	0f b6       	in	r0, 0x3f	; 63
    5e56:	f8 94       	cli
    5e58:	de bf       	out	0x3e, r29	; 62
    5e5a:	0f be       	out	0x3f, r0	; 63
    5e5c:	cd bf       	out	0x3d, r28	; 61
    5e5e:	cf 91       	pop	r28
    5e60:	df 91       	pop	r29
    5e62:	08 95       	ret

00005e64 <LCD_write>:

void LCD_write(unsigned char data)
{
    5e64:	df 93       	push	r29
    5e66:	cf 93       	push	r28
    5e68:	cd b7       	in	r28, 0x3d	; 61
    5e6a:	de b7       	in	r29, 0x3e	; 62
    5e6c:	2f 97       	sbiw	r28, 0x0f	; 15
    5e6e:	0f b6       	in	r0, 0x3f	; 63
    5e70:	f8 94       	cli
    5e72:	de bf       	out	0x3e, r29	; 62
    5e74:	0f be       	out	0x3f, r0	; 63
    5e76:	cd bf       	out	0x3d, r28	; 61
    5e78:	8f 87       	std	Y+15, r24	; 0x0f
	LCD_DATA=data;
    5e7a:	e8 e3       	ldi	r30, 0x38	; 56
    5e7c:	f0 e0       	ldi	r31, 0x00	; 0
    5e7e:	8f 85       	ldd	r24, Y+15	; 0x0f
    5e80:	80 83       	st	Z, r24
	PORTD|=(1<<rs);
    5e82:	a2 e3       	ldi	r26, 0x32	; 50
    5e84:	b0 e0       	ldi	r27, 0x00	; 0
    5e86:	e2 e3       	ldi	r30, 0x32	; 50
    5e88:	f0 e0       	ldi	r31, 0x00	; 0
    5e8a:	80 81       	ld	r24, Z
    5e8c:	80 68       	ori	r24, 0x80	; 128
    5e8e:	8c 93       	st	X, r24
	PORTD &=~(1<<rw);
    5e90:	a2 e3       	ldi	r26, 0x32	; 50
    5e92:	b0 e0       	ldi	r27, 0x00	; 0
    5e94:	e2 e3       	ldi	r30, 0x32	; 50
    5e96:	f0 e0       	ldi	r31, 0x00	; 0
    5e98:	80 81       	ld	r24, Z
    5e9a:	8f 7b       	andi	r24, 0xBF	; 191
    5e9c:	8c 93       	st	X, r24
	PORTD |=(1<<en);
    5e9e:	a2 e3       	ldi	r26, 0x32	; 50
    5ea0:	b0 e0       	ldi	r27, 0x00	; 0
    5ea2:	e2 e3       	ldi	r30, 0x32	; 50
    5ea4:	f0 e0       	ldi	r31, 0x00	; 0
    5ea6:	80 81       	ld	r24, Z
    5ea8:	80 62       	ori	r24, 0x20	; 32
    5eaa:	8c 93       	st	X, r24
    5eac:	80 e0       	ldi	r24, 0x00	; 0
    5eae:	90 e0       	ldi	r25, 0x00	; 0
    5eb0:	a0 e8       	ldi	r26, 0x80	; 128
    5eb2:	bf e3       	ldi	r27, 0x3F	; 63
    5eb4:	8b 87       	std	Y+11, r24	; 0x0b
    5eb6:	9c 87       	std	Y+12, r25	; 0x0c
    5eb8:	ad 87       	std	Y+13, r26	; 0x0d
    5eba:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5ebc:	6b 85       	ldd	r22, Y+11	; 0x0b
    5ebe:	7c 85       	ldd	r23, Y+12	; 0x0c
    5ec0:	8d 85       	ldd	r24, Y+13	; 0x0d
    5ec2:	9e 85       	ldd	r25, Y+14	; 0x0e
    5ec4:	20 e0       	ldi	r18, 0x00	; 0
    5ec6:	30 e0       	ldi	r19, 0x00	; 0
    5ec8:	4a ef       	ldi	r20, 0xFA	; 250
    5eca:	54 e4       	ldi	r21, 0x44	; 68
    5ecc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5ed0:	dc 01       	movw	r26, r24
    5ed2:	cb 01       	movw	r24, r22
    5ed4:	8f 83       	std	Y+7, r24	; 0x07
    5ed6:	98 87       	std	Y+8, r25	; 0x08
    5ed8:	a9 87       	std	Y+9, r26	; 0x09
    5eda:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    5edc:	6f 81       	ldd	r22, Y+7	; 0x07
    5ede:	78 85       	ldd	r23, Y+8	; 0x08
    5ee0:	89 85       	ldd	r24, Y+9	; 0x09
    5ee2:	9a 85       	ldd	r25, Y+10	; 0x0a
    5ee4:	20 e0       	ldi	r18, 0x00	; 0
    5ee6:	30 e0       	ldi	r19, 0x00	; 0
    5ee8:	40 e8       	ldi	r20, 0x80	; 128
    5eea:	5f e3       	ldi	r21, 0x3F	; 63
    5eec:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5ef0:	88 23       	and	r24, r24
    5ef2:	2c f4       	brge	.+10     	; 0x5efe <LCD_write+0x9a>
		__ticks = 1;
    5ef4:	81 e0       	ldi	r24, 0x01	; 1
    5ef6:	90 e0       	ldi	r25, 0x00	; 0
    5ef8:	9e 83       	std	Y+6, r25	; 0x06
    5efa:	8d 83       	std	Y+5, r24	; 0x05
    5efc:	3f c0       	rjmp	.+126    	; 0x5f7c <LCD_write+0x118>
	else if (__tmp > 65535)
    5efe:	6f 81       	ldd	r22, Y+7	; 0x07
    5f00:	78 85       	ldd	r23, Y+8	; 0x08
    5f02:	89 85       	ldd	r24, Y+9	; 0x09
    5f04:	9a 85       	ldd	r25, Y+10	; 0x0a
    5f06:	20 e0       	ldi	r18, 0x00	; 0
    5f08:	3f ef       	ldi	r19, 0xFF	; 255
    5f0a:	4f e7       	ldi	r20, 0x7F	; 127
    5f0c:	57 e4       	ldi	r21, 0x47	; 71
    5f0e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5f12:	18 16       	cp	r1, r24
    5f14:	4c f5       	brge	.+82     	; 0x5f68 <LCD_write+0x104>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5f16:	6b 85       	ldd	r22, Y+11	; 0x0b
    5f18:	7c 85       	ldd	r23, Y+12	; 0x0c
    5f1a:	8d 85       	ldd	r24, Y+13	; 0x0d
    5f1c:	9e 85       	ldd	r25, Y+14	; 0x0e
    5f1e:	20 e0       	ldi	r18, 0x00	; 0
    5f20:	30 e0       	ldi	r19, 0x00	; 0
    5f22:	40 e2       	ldi	r20, 0x20	; 32
    5f24:	51 e4       	ldi	r21, 0x41	; 65
    5f26:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5f2a:	dc 01       	movw	r26, r24
    5f2c:	cb 01       	movw	r24, r22
    5f2e:	bc 01       	movw	r22, r24
    5f30:	cd 01       	movw	r24, r26
    5f32:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5f36:	dc 01       	movw	r26, r24
    5f38:	cb 01       	movw	r24, r22
    5f3a:	9e 83       	std	Y+6, r25	; 0x06
    5f3c:	8d 83       	std	Y+5, r24	; 0x05
    5f3e:	0f c0       	rjmp	.+30     	; 0x5f5e <LCD_write+0xfa>
    5f40:	88 ec       	ldi	r24, 0xC8	; 200
    5f42:	90 e0       	ldi	r25, 0x00	; 0
    5f44:	9c 83       	std	Y+4, r25	; 0x04
    5f46:	8b 83       	std	Y+3, r24	; 0x03
    5f48:	8b 81       	ldd	r24, Y+3	; 0x03
    5f4a:	9c 81       	ldd	r25, Y+4	; 0x04
    5f4c:	01 97       	sbiw	r24, 0x01	; 1
    5f4e:	f1 f7       	brne	.-4      	; 0x5f4c <LCD_write+0xe8>
    5f50:	9c 83       	std	Y+4, r25	; 0x04
    5f52:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5f54:	8d 81       	ldd	r24, Y+5	; 0x05
    5f56:	9e 81       	ldd	r25, Y+6	; 0x06
    5f58:	01 97       	sbiw	r24, 0x01	; 1
    5f5a:	9e 83       	std	Y+6, r25	; 0x06
    5f5c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5f5e:	8d 81       	ldd	r24, Y+5	; 0x05
    5f60:	9e 81       	ldd	r25, Y+6	; 0x06
    5f62:	00 97       	sbiw	r24, 0x00	; 0
    5f64:	69 f7       	brne	.-38     	; 0x5f40 <LCD_write+0xdc>
    5f66:	14 c0       	rjmp	.+40     	; 0x5f90 <LCD_write+0x12c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5f68:	6f 81       	ldd	r22, Y+7	; 0x07
    5f6a:	78 85       	ldd	r23, Y+8	; 0x08
    5f6c:	89 85       	ldd	r24, Y+9	; 0x09
    5f6e:	9a 85       	ldd	r25, Y+10	; 0x0a
    5f70:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5f74:	dc 01       	movw	r26, r24
    5f76:	cb 01       	movw	r24, r22
    5f78:	9e 83       	std	Y+6, r25	; 0x06
    5f7a:	8d 83       	std	Y+5, r24	; 0x05
    5f7c:	8d 81       	ldd	r24, Y+5	; 0x05
    5f7e:	9e 81       	ldd	r25, Y+6	; 0x06
    5f80:	9a 83       	std	Y+2, r25	; 0x02
    5f82:	89 83       	std	Y+1, r24	; 0x01
    5f84:	89 81       	ldd	r24, Y+1	; 0x01
    5f86:	9a 81       	ldd	r25, Y+2	; 0x02
    5f88:	01 97       	sbiw	r24, 0x01	; 1
    5f8a:	f1 f7       	brne	.-4      	; 0x5f88 <LCD_write+0x124>
    5f8c:	9a 83       	std	Y+2, r25	; 0x02
    5f8e:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(1);
		PORTD &=~(1<<en);
    5f90:	a2 e3       	ldi	r26, 0x32	; 50
    5f92:	b0 e0       	ldi	r27, 0x00	; 0
    5f94:	e2 e3       	ldi	r30, 0x32	; 50
    5f96:	f0 e0       	ldi	r31, 0x00	; 0
    5f98:	80 81       	ld	r24, Z
    5f9a:	8f 7d       	andi	r24, 0xDF	; 223
    5f9c:	8c 93       	st	X, r24
		PORTD |=(1<<en);
    5f9e:	a2 e3       	ldi	r26, 0x32	; 50
    5fa0:	b0 e0       	ldi	r27, 0x00	; 0
    5fa2:	e2 e3       	ldi	r30, 0x32	; 50
    5fa4:	f0 e0       	ldi	r31, 0x00	; 0
    5fa6:	80 81       	ld	r24, Z
    5fa8:	80 62       	ori	r24, 0x20	; 32
    5faa:	8c 93       	st	X, r24
}
    5fac:	2f 96       	adiw	r28, 0x0f	; 15
    5fae:	0f b6       	in	r0, 0x3f	; 63
    5fb0:	f8 94       	cli
    5fb2:	de bf       	out	0x3e, r29	; 62
    5fb4:	0f be       	out	0x3f, r0	; 63
    5fb6:	cd bf       	out	0x3d, r28	; 61
    5fb8:	cf 91       	pop	r28
    5fba:	df 91       	pop	r29
    5fbc:	08 95       	ret

00005fbe <__prologue_saves__>:
    5fbe:	2f 92       	push	r2
    5fc0:	3f 92       	push	r3
    5fc2:	4f 92       	push	r4
    5fc4:	5f 92       	push	r5
    5fc6:	6f 92       	push	r6
    5fc8:	7f 92       	push	r7
    5fca:	8f 92       	push	r8
    5fcc:	9f 92       	push	r9
    5fce:	af 92       	push	r10
    5fd0:	bf 92       	push	r11
    5fd2:	cf 92       	push	r12
    5fd4:	df 92       	push	r13
    5fd6:	ef 92       	push	r14
    5fd8:	ff 92       	push	r15
    5fda:	0f 93       	push	r16
    5fdc:	1f 93       	push	r17
    5fde:	cf 93       	push	r28
    5fe0:	df 93       	push	r29
    5fe2:	cd b7       	in	r28, 0x3d	; 61
    5fe4:	de b7       	in	r29, 0x3e	; 62
    5fe6:	ca 1b       	sub	r28, r26
    5fe8:	db 0b       	sbc	r29, r27
    5fea:	0f b6       	in	r0, 0x3f	; 63
    5fec:	f8 94       	cli
    5fee:	de bf       	out	0x3e, r29	; 62
    5ff0:	0f be       	out	0x3f, r0	; 63
    5ff2:	cd bf       	out	0x3d, r28	; 61
    5ff4:	09 94       	ijmp

00005ff6 <__epilogue_restores__>:
    5ff6:	2a 88       	ldd	r2, Y+18	; 0x12
    5ff8:	39 88       	ldd	r3, Y+17	; 0x11
    5ffa:	48 88       	ldd	r4, Y+16	; 0x10
    5ffc:	5f 84       	ldd	r5, Y+15	; 0x0f
    5ffe:	6e 84       	ldd	r6, Y+14	; 0x0e
    6000:	7d 84       	ldd	r7, Y+13	; 0x0d
    6002:	8c 84       	ldd	r8, Y+12	; 0x0c
    6004:	9b 84       	ldd	r9, Y+11	; 0x0b
    6006:	aa 84       	ldd	r10, Y+10	; 0x0a
    6008:	b9 84       	ldd	r11, Y+9	; 0x09
    600a:	c8 84       	ldd	r12, Y+8	; 0x08
    600c:	df 80       	ldd	r13, Y+7	; 0x07
    600e:	ee 80       	ldd	r14, Y+6	; 0x06
    6010:	fd 80       	ldd	r15, Y+5	; 0x05
    6012:	0c 81       	ldd	r16, Y+4	; 0x04
    6014:	1b 81       	ldd	r17, Y+3	; 0x03
    6016:	aa 81       	ldd	r26, Y+2	; 0x02
    6018:	b9 81       	ldd	r27, Y+1	; 0x01
    601a:	ce 0f       	add	r28, r30
    601c:	d1 1d       	adc	r29, r1
    601e:	0f b6       	in	r0, 0x3f	; 63
    6020:	f8 94       	cli
    6022:	de bf       	out	0x3e, r29	; 62
    6024:	0f be       	out	0x3f, r0	; 63
    6026:	cd bf       	out	0x3d, r28	; 61
    6028:	ed 01       	movw	r28, r26
    602a:	08 95       	ret

0000602c <_exit>:
    602c:	f8 94       	cli

0000602e <__stop_program>:
    602e:	ff cf       	rjmp	.-2      	; 0x602e <__stop_program>
